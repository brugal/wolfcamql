# init with svn 1753
#
# to help tracking git try:
#    git log -p --topo-order --first-parent
#
#       "--graph" helps with more than one parent shown

2011-02-17

1754 * build the dedicated server with voip support (benmachine)
1755 * Remove r_displayRefresh as it's not connected to anything, now
1756 * (bug #4364) Fix missing -DNDEBUG

1757 applied before:  * (bug #4369)  Cvar modified flags are not updated in Cvar_Get (Lakitu7)

1758
    * (bug #4346) Dedicated server uses 100% CPU when stdin is not a TTY
    * com_speeds reports misleading values on dedicated server (Guillaume Bougard)

1759 * Handle SIGINT
1760 * (bug #4357) CVAR_ROM+CVAR_ARCHIVE is not read from q3config
1761 * That probably deserves a Com_DPrintf as well
1762 * Rate limit getstatus and rcon connectionless requests
1763 done (did with 1762):  * Fix some compiler warnings
1764 update mumble link interface for version 1.2
1765 mmap could fail, handle gracefully
1766 set default rate to broadband
1767 make reason for voip disable more visible
1768 fix mumble coordinate transmission
1769 avoid setting cvars by name each frame
1770 * (bug #4271) FreeBSD fixes (Dominic Fandrey)
1771 * Clean-up whitespace in net_ip.c
1772 __WORDSIZE is not available on non-GNU systems (Dominic Fandrey)

1773
    * Sys_Dialog for more user friendly error reporting
    * (bug #3932) Recovery from bad video settings

1774 * Oops, missed a bit

1775
    * Fix a memory leak in OS X Sys_Dialog
    * Fix compilation on Snow Leopard

1776 need to hardcode "baseq3" to prevent download of id files even if compiled STANDALONE

1777 enable (dummy) cdkey calls in standalone mode to prevents mods from crashing

1778 64bit Windows support (patch by Michael Menegakis)
1779 don't link librt on FreeBSD (bug 4507)
1780 fix mingw32 build
1781 package zlib1.dll in nsis installer
1782 rename x86_64 -> x64 for Windows
1783 64bit Windows fix (patch by Marcus Meissner)
1784 fix OP_BLOCK_COPY alignment for win64 (patch by Marcus Meissner)
1785 fix stack alignment dynamically for OP_BLOCK_COPY
1786 fix typo
1787 Fix typo
1788 Fix buffer overflow, report and patch by Eugene C. (#4669)

1789 Fix bug in uncompressed MDR model loading, thansk to Zack "ZTurtleMan" Middleton for reporting.

1790
    First batch of bug fixes reported and patched by Zack "ZTurtleMan" Middleton:
    #4736
    #4730
    #4731
    #4732
    #4733
    #4735
    #4736
    #4737
    #4738
    #4739

1791
    Second batch of bug fixes reported and patched by Zack "ZTurtleMan" Middleton:
    #4740
    #4741
    #4742
    #4743
    #4744

1792 Fix "unhandles OpenAL error", and sound fallback behaviour for model files. Thanks Ansa89 for reporting, and Zack Middleton for the patch.

1793 fix typo
1794 another fix. Thanks Zakk Middleton
1795 Fix flaw in my fix to #4737, thanks Zakk Middleton
1796 done:  Followup to #4733
1797 uninstall zlib1.dll, disable description panel (bug 4779)
1798 Bug 4566: Slackbuild update for 64bit.
1799 the dishes, and Bugzilla bug 4780 are DONE.

1800 done:
    Bugzilla #4749
    TAHUD: Fix hud fallback

1801
    Bugzilla #4753
    Potential buffer overflow in UpdateTournamentInfo()

1802
    Bugzilla #4629
    commands sent to client when disconnected

1803 use mmap on freebsd too
1804 * Use correct compiler defines for OS detection on Windows

1805
    * (bug #4800) Don't prepend a slash to console commands if they're empty
    * (bug #4800) Limit console input length such that there is always room for a
    leading slash

1806 * (bug #4853) Fix comment that refers to old code
1807 * (bug #4842) Speedup shader buffer creation (Eugene C.)
1808 Shut up compiler error

1809 Fix potential segfault when no PK3s have been loaded (may happen when compiled with -DSTANDALONE)

1810 Fix this bug in a better way.
1811 Make it use the correct game name in getserversExt queries
1812 Revert changes because dpmaster doesn't work that way.
1813 Fix name resolution for domains with A and AAAA record
1814 Fix bug reported by cyrri

1815 Make this change so standalone developers will know to change the HEARTBEAT game string for their versions, too.

1816 Make number of supported master servers tunable via define

1817 Make sure status reply always has at least one space between address and qport, important for ipv6 addresses.

1818 Make sure com_developer global var gets written right after developer has been read from cmd line

1819 Patch from /dev/humancontroller (thx)

1820 ffffffffffffffffffffaaaaaaaaaaaaaassssssssst math movement on freebsd to OPTIMIZE

1821 remove the unused flags_t::field (/dev/hc again for this and previous checkin on Makefile, thanks!!!)

1822
    add a missing \n from a cgame print
    (thanks again /dev/hc)

1823
    Sony NGP Support.


    Alan Cox provided these patch notes:
    Guvf vf npghnyyl n cngpu gb eryvrir hapbzsbegnoyr btt/ibeovf pbafgreangvbanoyr pbzcvyr-gvzr jneavatf sebz /qri/uhznapbagebyyre

    Gunaxf 2 lbh.

1824 Fix compiler warnings (#4887)
1825 well, shit.

1826 Fix hanging client when map_restart executed on the server while client is still loading the map

1827 Make Ludwig happy

1828
    - Add parameter checking to CL_*Ping* functions
    - Remove unused CL_UpdateServerInfo function

1829 Fix floating point imprecision causing glitches in snapshot sending
1830 cvar is called fs_game (bug 4866)
1831 Explicitly set timer resolution on windows
1832 Only adjust timer resolution for clients
1833 Windows doesn't know z in format string
1834 done: Delete unused variable

1835
    - Use select() to sleep when idle as opposed to busy waiting.
    - Introduce com_busyWait cvar to go back to old behaviour

1836 r1833 now made some Linux systems spit out warnings. Fix this once and for all

1837 Server crash can cause recursive call to Com_Error, too

1838
    - Fix bug #4769 remote server crash
    - Fix potential 1-byte-buffer overflow in gamecode

1839 whatever devhc you're right

1840
    - Change runtime standalone detection:
     * com_standalone now read-only
     * add new cvars com_basegame, com_homepath
     * standalone now automatically detected when com_basegame is set to something different than baseq3 and no id pak pk3s are found
     * This fixes https://bugzilla.icculus.org/show_bug.cgi?id=4699
   - Replace a few hardcoded string literals with macros
   - Add checks for Team Arena PK3s to FS_CheckPak0()

1841 Fix banfile writing to wrong game directory

1842 - Add cvars cl_gamename, sv_heartbeat, sv_flatline so standalone games can customise their messages to the master server

1843 https://bugzilla.icculus.org/show_bug.cgi?id=4460
1844 Fix a warning
1845 Fix https://bugzilla.icculus.org/show_bug.cgi?id=4733
1846 https://bugzilla.icculus.org/show_bug.cgi?id=4576

1847 Thanks Simon McVittie for fixing the bug regression in https://bugzilla.icculus.org/show_bug.cgi?id=4629

1848 Thanks for the patch, gimhael. (#4576)  (allow any number of lightmaps)

1849
    - Add support for linearly desaturating images via r_greyscale
    - Use correct luminance values for rendering textures
    Patch submitted by Forrest Voight.

1850 Ben Millwood fixing his own stuff (#4598)
1851 Fix #4683, thanks Zack Middleton
1852 Fix division by zero, reported by Simon McVittie
1853 typos, patch by Ansgar Burchardt <ansgar@43-1.org>
1854 * Fix fp literals
1855 Support GNU/kFreeBSD, patch by Cyril Brulebois. Thanks.

1856 Patch by Simon McVittie to improve dynamic library loading (#4700)

1857 Remove guid again because we don't want every play on the server to know all guids, thanks brain for reporting

1858 Fix flag collision in botlib code, thanks Cyrri for reporting (#4886)
1859 Fix compilation on alpha, fix by Steve Langasek (#4703)
1860 Fix tourney score board. Thanks Zack Middleton for the patch and report

1861 Fix adding multiple entries for same server when using globalservers several times, patch by Tequila

1862 Oops typo.

1863 done (misusing CGEN_* enums with alphaGen):  How could this stay undiscovered for so long? Unbelievable.

1864 Fix GNU/kFreeBSD patch by Cyril Brulebois. --> ... <--

1865
    - Hopefully fix (#3984) compiler errors on Solaris while not introducing too many new ones on the other platforms
    - With _BSD_SOURCE now explicitly defined bring back strdup to vm_x86_64_assembler.c

1866 Fix buffer overflow, reported by Mads Lind

1867 strdup still not accepted by some systems. *sigh*.
1868 Allow user to specify different temp dir for building (#4349)

1869 Thank you devhc

1870 Ok, getifaddrs() is not POSIX compliant. Fix #3984 as suggested by Vincent Cojot

1871 mage size_t typedef unsigned int instead of just int, thx devhc for suggesting

1872 Fix levelshot so that it cannot be executed by remote clients (#4339)

1873
    - A few code cleanups in gamecode
    - Add a bit of stuff from Zakk Middleton

1874 Code cleanup patch by devhc

1875 By ZTurtleMan: Cleanup; only load harvester data in harvester gametype, removed unused var, and ifdef a missionpack only var.

1876 Cleanup STANDALONE
1877 fix compiling error when in standalone mode
1878 Still not compiling when STANDALONE is set
1879 Fix STANDALONE in files.c
1880 Fix memmove with new size_t typedef, thanks DevHC for reporting
1881 It's late, I'm tired.

1882 Fix strcpy copying buffer into itself, thanks to Simon McVittie for reporting and the patch (#4894)

1883 First batch of getting replacing malloc() with Z_Malloc
1884 Brace for incoming grammar fix by DevHC!
1885 Finally fix missionpack compiling for STANDALONE=1, yes, this is tested.
1886 Make Q_vsnprintf() more standard conform in bg_lib.c, patch by devhc

1887
    http://www.angryflower.com/aposter.html

    (minor English issues, most of which are via /dev/humancontroller)

1888
    - Use MAP_FAILED error code for check whether mmap() was successful
    - Replace various malloc() with Z_Malloc
    - Fix several memory leaks when VM compilation failed and Com_Error is called
    - Make failed mmap/VirtualAlloc/malloc calls fatal

1889
    - Make some string functions in g_cmds.c cleaner, by DevHC
    - embed VM_FREEBUFFERS() macro in do-while-loop

1890 Add minimize command (#4531)
1891 update readme for last commit

1892 Fix console tab autocomplete for exec and condump on pure servers, patch by Zack Middleton

1893 no (done: r_jpegCompressionQuality):  JPEG quality control patch, by Zack Middleton (#4673)

1894 Merge "which" command upstream from Tremulous, patch provided by Chris Schwarz

1895 OMGWHATISTHISSHITIDONTEVENKNOW

1896 Auto complete demos on not in pk3s while in pure servers. Patch by Zack Middleton (#4794)

1897 Support non-256x256 videos in shaders, by Zack Middleton (#4745)

1898
    * Fix Sys_Milliseconds wrapping causing the flood protection code to
    malfunction and block all traffic (reported by bubu^)

1899
    - Fix unterminated string errors in Q_vsnprintf() on windows. Thanks to Eugene C. for reporting (#4907)
    - Get rid of bigbuffer in Com_sprintf()
    - Get rid of Q_snprintf and replace with Com_sprintf()

1900 Make NET_Sleep wait 1ms less than requested, then busy-wait the last ms for better timeout precision.

1901 done (crouch and lg bolt):  Patch by Zack Middleton (#4920)

1902 (#4918) Gametype clamping using constant integer in missionpack ui, by Zack Middleton

1903 (#4919) Extra variable in missionpack ui's bind_t structure, by Zack Middleton

1904 (#4291) Redundant statement in client console, by Zack Middleton

1905 (#4922) Use screenYScale, not screenXScale, for scaling Y, by Zack Middleton

1906 Fix quirk reported by Zack Middleton
1907 Also send empty valued system cvars, fix proposed by DevHC

1908 Add cvar "protocol" so user can change protocol version on command line, for standalone games. Most of the patch by Simon McVittie with a few minor modifications by myself

1909 Fix systeminfo command, fix by DevHC
1910 Refactoring patch by DevHC

1911
    - Fix potential out-of-bounds read in files.c, fix by using new FS_IsExt
    - Add capability to load demos with com_protocol suffix, partially applied patches from Simon McVittie
    - Fix demo loading if protocol number has more digits than 2
    - Minor refactoring, replace all occurances of suffix "dm_" with global macro DEMOEXT

1912 Add in_availableJoysticks to list usable joysticks, similar to s_alAvailableDevices. Some parts of the patch provided by Zack Middleton

1913 Make Video settings menu revert some settings to default values via Cvar_Reset() instead of hardcoded values (#2589)

1914 Add g_humansplayers (found by server) and g_needpass (cvar) to serverinfo (#4702)

1915 Zack Middleton made me do it

1916 (#3767) Some protection from malicious qvms - patches and ideas by Amanieu d'Antras and Ben Millwood

1917 Rename cvar "in_joystickThreshold" to "joy_threshold" as QVMs use the latter name.

1918
    - I accidentally committed patch by slacker from (#4915) in r1916. Patch adds input device selection support
    - Add check for ALC_ENUMERATE_ALL_EXT before using ALC_ALL_DEVICES_SPECIFIER in device enumeration
    - Patch readme for new cvars by Zack Middleton

1919 Fix bug where Com_StartupVariable would set CVAR_USER_CREATED on already existing cvars

1920
    - Fix a compiler warning
    - Fix the detection of the enumeration extensions
    - Fix default device for s_alInputDevice
    - Adjust formatting of S_AL_Info output

1921 (#4925) - com_pipefile to create a named pipe for sending commands from other processes, patch by Chris Schwarz

1922 done:  * Fix misplaced ; in MSVC _vsnprintf wrapper
1923 strtod exists in bg_lib.c now so Q_isanumber will work in the VMs, too.
1924 Make buffers for device lists a bit longer. Just in case.

1925 Revert premature change to Makefile for migration to jpeg-8c. *sigh*

1926
    - Migrate to jpeg-8c
    - Add possibility to link against system libjpeg

1927
    include alext.h for ALC_ALL_DEVICES_SPECIFIER
    This assumes OpenAL Soft (Simon McVittie, bug 4927)

1928 add missing jconfig.h

1929
    include vm_local.h in vm_powerpc_asm.c

    Patch by Simon McVittie, bug 4930

1930
    - Remove alext.h dependency and manually add the required macros
    - Use ALC_DEFAULT_ALL_DEVICES_SPECIFIER instead of ALC_DEFAULT_DEVICE_SPECIFIER if extension exists

1931 done:  * Fix whitespace

1932
    - Properly use ALC_ALL_DEVICES_SPECIFIER in sound info
    - Properly use ALC_CAPTURE_DEVICE_SPECIFIER in sound info

1933 Fix dynamic lighting for moving world surfaces. Patch by gimhael, thx

1934 Bug 4935 - dedicated server linked against libjpeg if using system libjpeg, patch by Simon McVittie

1935 Bug 4936 - Wrong color for non-ascii symbols in console

1936 Fix JPEG compression for screenshots and mjpeg video recording with new JPG library

1937 * Crash recovery for com_pipeFile (Lakitu7)
1938 * Fix jpeg warnings
1939 Fix player queueing for tournament play (#4939)
1940 done:  * Actually call Sys_PlatformExit
1941 Fix a few comments (#4591)
1942 Consider key states before startup, patch by Zack Middleton (#4950)
1943 Make Sys_SetEnv behave alike on Windows and Linux

---- check ----

1944 no check: (no change in cl_avi.c, not using RB_ReadPixels, maybe add this?):
    - Fix data alignment issue with glReadPixel call, reported by Guillaume Bougard (#4954)
    - Fix data alignment issue in raw AVI recording for weird resolutions (like 1366x768)

1945 Let codec loader decide which extension to give to extensionless filenames
1946 Add better support for analog joysticks, patch by use.less01
1947 Use memcmp instead of self-built while loop
1948 Fix a little quirk still

1949 Replace a few numeric constants with already defined macros, patch by ZTurtleMan

1950
    - Harden the client and server protocol against UDP spoofing attacks. This will defend ioquake3 against http://aluigi.altervista.org/papers/q3noclient.txt (#3041)
    - Retains full compatibility to the old but unsecure protocol between clients and servers
    - Harden the connection process against DoS attacks, possibly connected to UDP spoofing

1951
    - Change the layout of the README and split "misc" section into a part for end users, and a part for developers
    - Update the readme for rev. 1950

1952 Revert protocol 69 pending further discussion (#4962)

1953
    - Add Inter-Quake Model (IQM) Format support, patch by gimhael with minor modifications by myself (#4965)
    - Changed model_t::md4 to model_t::modelData
    - Fix R_ModelBounds for MD4, MDR and IQM models (#4966)
    - Support Model format fallback similar to image formats in tr_image.c, patch by Zack Middleton (#4967)

1954 Do not retry image loader for image that failed, patch by Zack Middleton (#4968)

1955 Fix out of bounds array index (#4960) patch by Ben Millwood
1956 Remove sv_strictAuth cvar for STANDALONE games

1957 Fix sending reliable commands before being connected, patch by Eugene C. (#4971)

1958
    - Add licence headers to new files
    - Add patch from Zack Middleton which fixes a few issues still

1959
    [23:59:05] <ZTurtleMan> Thilo: altName (created using va) does not point to model filename in developer-only printf as va is used to load images before the printf. http://pastebin.com/1KCjz6Ct

1960 Do use the SV_Game{Error,Print} functions (#4972)

1961
    - Add HOMEPATH default name define to q_shared.c, patch by uZu (#4973)
    - reverted change from (#4972) and implemented the other suggestion to be consistent with cl_cgame.c and cl_ui.c

1962 Remove C99 code constructs from IQM code, patch by gimhael (#4974)

1963 IQM skin support and print limit info, make other limit info consistent, patch by Zack Middleton (#4978)

1964 fix overzealous cvar cheat protection, patch by cyrri (#4974)
1965 Add error handling to malloc as well
1966 Fix nasty crash bug

1967 Add codec fallback support for sound files not found, Patch by Zack Middleton (#4982)

1968 Choose better alignment for heavy-duty rendering structures, patch by Matt Turner (#4981)

1969 Add opStack protection to defend against malicious QVMs

1970
    - Remove newlines in Com_Error()
    - Update register description

1971 done:  whoops, that one was not Com_Error()
1972 Fix spawnflag behaviour for trigger_hurt, patch by DevHC
1973 Fix one byte overflow
1974 Refactoring patch by DevHC
1975 done:  DevHC messed up

1976 Fix crash bug in new codec audio loader, thanks brain for reporting

1977 More codec loader troubles with extensions

1978 done:  Remove newlines from Com_Error message format strings, patch by DevHC

1979 done:  Ffffuuuuuu  I don't even know....
1980 done:  Remove newlines from Com_Error calls, patch by DevHC

1981 ensure that ent->classname is always non-null (for entity numbers up to level.num_entities-1, and ENTITYNUM_WORLD and ENTITYNUM_NONE), for player entities and #ENTITYNUM_NONE in particular, patch by DevHC

1982
    - Reverting accidentally committed vm_x86.c
    - Last commit contained some refactoring for vm_x86_64.c

1983 Make bg_lib.c strchr ANSI-C conformant
1984 Fix typecast

1985
    - Add vm_x86.c optimization patch by Eugene C.
    - Remove ASM syntax specific code (AT&T vs MASM) for OP_CALL and replace with machine code

1986 move MIN/MAX definition, use MIN() instead of min(), patch by DevHC

1987
    - Remove Q_strrchr(), replace with standard, portable strrchr()
    - Add strrchr() to bg_lib.c, patch by DevHC

1988 Refactor and bugfix COM_*Extension functions, patch by DevHC

1989
    - Fix lokisetup makefile problems
    - Bump version number to 1.36

1990 Optimise VectorNormalize functions, patch by Matt Turner
1991 0 --> NULL

1992
    - Fix SEGV in while loop getop() after t = b = 0
    - Fix iss8, iss16 and iss32 which would not correctly detect 32-bit signed integer range
    - Add support for "addb", "subb" etc. assembler mnemonic
    - Change opStack protection for x86_64 VM: No overflow checks necessary anymore as offset register is 1 byte long only

1993
    - Set default opStack size to 256
    - Fix integer wraparound. opStack offset in rbx will always be >= 0

1994
    - Use edx for CALLs instead of ecx, as the latter does not require any push to stack
    - Make Linux AT&T asm code consistent with the MASM codeblock

1995 Use scaled indexing mode n=4 for addressing opStack, this way we can use the 8 bit offset value in %%bl to address an OPSTACK_SIZE of 1024 which was the old value.

1996 Fix VM call for release version, bug introduced by myself in r1994

1997 I don't seem to get these constraints right. This should fix it

1998
    - Do assignment of value 0xDEADBEEF after the 4-byte alignment
    - Add all GPR to clobber list as GCC function callAsmCall seems to change register r11 without saving it to stack first, which may result in SIGSEGV in VM_CallCompiled()

1999
    - Implement opStack protection: Use register %ebx for scaled indexed addressing mode to access opStack, make opStack push/pop operate on %bl portion only
    - Add a third pass to VM compilation for computation of jump address offsets, removing the need to dereference into vm->instructionPointers[] for every call/jump
    - Make use of 0F opcode prefix relative jumps
    - Call Com_Memcpy for OP_BLOCK_COPY
    - Fix several missing range checks for vm->dataBase memory access

2000 Add instruction number checks to jumps and calls to SPARC VM, patch by David Miller

2001 Fix compilation on mingw64

2002 Fix is*() functions for windows where long value is 4 bytes

2003
    - Add x86_64 support to vm_x86.c
    - Fix warning on mingw64

2004
    - Use EmitCallDoSyscall() to call the jump violations function which guarantees 16-byte stack alignment
    - Add x64 code for MSVC _asm() blocks, not tested yet.

2005 Fix newlines in Com_Error, patch by Zack Middleton (#5023)

2006 Properly fill in occurances of "foobar" in GPL file headers, patch by Zack Middleton (#5024)

2007 Fix wrong usage info message for cmd dumpuser, patch by Zack Middleton (#5024)

2008 OpenBSD compile fixes, patch provided by Jonathan Gray (#4994)

2009
    Makefile fix for mips architecture (#4995):
    Fixes the \n in the $ARCH variable for IRIX/mips

    Patch by Patrick Baggett

2010 (#5016) - Calls to trap_CM_PointContents don't update their origins based on moving entities (water). Patch by Ensiform

2011 Fix return values for several syscall functions, patch by Zack Middleton (#5018)

2012 * Remove misleading comment

2013
    - Adapt MSVC project files to new libjpeg, fix by Guillaume Bougard and cyrri
    - add tr_model_iqm.c to MSVC project, by cyrri

2014
    Fixes to IQM support, by Zack Middleton
      - Bug 5029 - IQM skin support for upper case surface names
      - Bug 5030 - IQM version 2 support
      - Bug 5031 - Animated IQMs cause segfault
      - Bug 5032 - IQM does not setup tag axis/origin correctly
      - Bug 5033 - IQM bounds swap and segfault issues

2015 Bug 5035 - Automatically selecting player model in q3_ui does not work if skin is not specified, patch by Zack Middleton

2016 Bug 5036 - Grappling hook does not load trail shader, patch by Zack Middleton

2017 Bug 5034  - q3_ui: fill whole screen and allow cursor to move to edge in widescreen, patch by Zack Middleton

2018 Fix forgotten IQM2 support in iqm.h, patch by Zack Middleton

2019 Add static SDL libraries for compilation with MSVC

2020
     - Add MASM assembler files for MSVC x64 projects to support vm_x86 in x64 mode
     - Clean up ftol()/snapvector() mess
     - Make use of SSE instructions for ftol()/snapvector() if available
     - move ftol/snapvector pure assembler to inline assembler, this will add x86_64 and improve support for different calling conventions
     - Set FPU control word at program startup to get consistent behaviour on all platforms

2021
    - Fix macro that uses constant float suffix as argument
    - retval variables in ftola.c must have type long, not int

2022 Forgot the inline assembler parts, here they come! Using inline asm to get rid of all the boilerplate stuff

2023
     - Still forgot qasm-inline.h
     - Leave GCC more freedom in choice of registers

2024
     - mingw64 now links against SDL64.dll to allow for 32 and 64 bit version in the same directory
     - Add library files for MinGW64

2025 Project files for Microsoft Visual Studio 10. Has x86 and x64 build configurations (#2681)

2026 Fix #if macros for idx64 and id386

2027
     - Merge http://svn.icculus.org/tremulous?view=rev&revision=2185, patch by Chris Schwarz
     - Remove Q_snprintf as Com_sprintf exists already

2028 Need space of len+1 for snprintf to work

2029
     - Small change to search path order - local files not in .pk3s take precedence over files in pk3s. Should make life easier for modders/mappers wanting to override textures that are already contained in some older pk3.
     - Make VM loading more robust, change loading order: when vm_* == 0 first try loading DLL, then QVM in *each* search directory/path.
     - Fix FS_FileForHandle that would return a FILE pointer to invalid file handle 0

2030
     - Don't try to load QVM/DLL files on pure servers.
     - Fallback after failed DLL load will be VMI_COMPILED, not INTERPRETED

2031
     Various fixes to vm_interpreted.c
     - Add opStack protection
     - Fix dataMask check for OP_BLOCK_COPY
     - Add instruction number check for conditional jumps
     - Make errors in VM_PrepareInterpreter nonfatal

2032 Use Q_ftol for vm_interpreted

2033 Fix wrong macro. MSVC win32 build should work again now.
2034 remove static VM_BlockCopy from vm_powerpc
2035 Add mingw64 crossbuild script, patch by Zack Middleton

2036
     Patch from Tremulous / description from Zack Middleton: (#5041)

     Clear game logfile handle after closing file. (patch from tremulous)

     Game does not clear logFile handle when closing file. Might be an issue if
     G_LogPrintf is called after this.

     Patch from tremulous http://svn.icculus.org/tremulous?view=rev&revision=2041

2037
     Patch and description by ensiform (#5043):

     This patch moves cg_particles.c out of cg_marks.c to the actual file that was already there but not used.  By default WOLF_PARTICLES definition is commented out if someone wants to use the old cg_particles.c changes.  cg_particles.c has been added to the makefile and msvc projects.

2038 Fix #lese in las commit

2039
     patch by Zack Middleton (#5044)
     - Fix a few comments in tr_local.h.
     - A bit of refactoring of the cpp macros

2040 Fixes for bugs introduced in last several revisions
2041 Still forgot this one :(

2042
     - Fix memory leak in DMA sound after S_Shutdown().
     - Make codec load use temp hunk memory instead of zone mem.
     - Fix sound issues with direct sound and game_restart (#4526)

2043 Bug 5047 - Win32 dedicated server console title should use define, patch by Zack Middleton

2044 Bug 5048 - Entity constant light does not work correctly, bug found by Eraesr (Eraser?)

2045
  - Improve game_restart:
    * differing screen resolutions and network settings are now honoured when changing fs_game
    * Fix hunk memory leak on game_restart
    * Move cls.state and cls.servername to clc so connection state is fully preserved over game_restart
    * Revert back to previous fs_game after disconnecting from a server that triggered a game_restart
    * Fix error dialog popping up after every game_restart if an error happened previously (reported by Ensiform)
  - Fixed that not all commands added by CL_Init() would be removed by CL_Shutdown()

2046 Fix unnoticed bug in game_restart

2047
  - Bug 5034 - q3_ui: fill whole screen and allow cursor to move to edge in wi
descreen, by Zack Middleton
    Check if uivm is loaded before using it

    Patch adds a check for uivm before using it, fixes running dedicated server
    using client binary.

    Missing uivm check pointed out by Ensiform.

  - Bug 5049 - TA UI forces overstrike mode on when focusing an edit box, by Ensiform
  - Bug 5052 - Missing podium timer initialization, by Eugene C.

2048 Fix to (#5051) - strchr in GraphicsOptions_GetAspectRatios() might return NULL for some strange reason

2049 Fix x64 compilation on MSVC

2050
     - Clear ip address listings after a NET_Restart.
     - check for oldGameSet instead of the gamename string

2051 Fix by Laurent Desnogues for my feeble attempt at a fix

2052
     - align sse control word storage space to 16 byte boundary for snapvector.
     - replace some whitespace with tabs in snapvector.c.
     - Give gcc a bit more freedom in choice of registers

2053
  - Automatically reset fs_game to "" if it was supplied by the user and is equal to com_basegame
  - Fix problem where users could change values of CVAR_INIT variables after the call to Cvar_Get() via Com_StartupVariable()
  - Move sound shutdown after client shutdown so VMs don't hold invalid sound handles in memory

2054 Allow recursive VM entry for VM operations as well
2055 Correct fix to (#5051), patch by Roughael

2056 Fix grenade rotation ends always the orientation (#5053), patch by Eugene C.

2057 Get rid of redundancy
2058 Fix ipv6 server query
2059 Add forced VM unloading to Com_Quit_f

2060 (done):  Make sound fallback behaviour for music streams less verbose

2061 Make g_doWarmup archived cvar

2062
     - Fix opStack size for vm_x86.c.
     - Change opStack alignment to 16 for vm_x86_64.c

2063 All patches by Zack Middleton:
     - Bug 5057  - Two weapon number range checks allows invalid number
     - Bug 5058  - Railgun explosion cannot be colorized
     - Bug 5059  - Client's railgun does not glow in third person and mirror
     - Bug 5060  - Warning in RAVENMD4 R_GetAnimTag cross compiling with amd64-mingw32

2064 (done):

    More color fixes for railgun

    Show other players' railgun color and their firetime state.
    Show snapshot client's color on world item models of railgun.
    Fix the impact mark using color2 (spiral) rather than color1 (beam).
    Credits go to Ensiform and Harekiet for the refire portion.

2065 - Add better protection against DoSing connecting users from connecting
     - Have Com_sprintf return string length
     - add STR_LEN macro for static strings

2066 Add fixes to ui menu by Ensiform and DevHC (#5062)
2067 Make naming a bit more foolproof for new macro
2068 Fix indentation

2069 Bug 5067 - Remove references to unused teamtournament gametype. Toggle areaportal on mover ents where due is needed, patch by Ensiform

2070 no (not plasma explosion because it is distracting, can be done with fx if needed):  Bug 5066 - Plasmagun and BFG don't play the explosion when they hit players, patch by Ensiform

2071 Bug 5069 - Remove unused variable console_color, by uZu

2072 Permit downloading files larger than 65 Megabytes via UDP by working around short int wraparound.

2073
    - Greatly improve UDP downloading speed for clients
    - Add download rate control cvar sv_dlRate
    - Don't send snapshots to downloading clients

2074 Forgot to set default rate back to 100kbyte/s

2075
    - Implement dual protocol support (#4962)
    - Fix several UDP spoofing security issues

2076 no (demo lists not based on protocol):
    - Add dual protocol support to team arena demo selector
    - Fix demo selection in team arena menu on case sensitive file systems
    - Some changes in the way how vanilla q3 demo file lists are compiled in the menu

2077
    - Improve snapshot rate and data rate control
    - Make server send packet fragments and queued packets when server is idle
    - Voip protocol detection is tied to com_protocol making past-end-of-message reading unncessary
    - Use Hunk_AllocateTempMemory() for buffering VOIP packets and fix buffering scheme that ryan hates so much
    - Disable packet scrambling for new protocol as it is useless now
    - Get rid of the old packet scrambling functions predating latest point release
    - Use Hunk_AllocateTempMemory() for netchan packet queue to fix memory leak
 when client gets disconnected with packets in the queue
    - Use Hunk_AllocateTempMemory() for download blocks to fix memory leak when
client gets disconnected with download blocks in the queue
    - Fix SV_RateMsec to account for udp/udp6 packet lengths

2078
    - Forgot to mention: last rev (2077) bumped default protocol version to 70
    - Fix queued packet rate control

2079
    - Make sure at least one round of download packets and packet queues gets sent each frame
    - Fix timeVal select timeout value for case of unlimited data rate and now downloads are active

2080 no (check again) (different):  Remove one unnecessary loop in the beginning

2081
    - Revert back to Z_Malloc from Hunk_FreeTempMemory introduced in r2077 as Hunk_FreeTempMemory must be freed in LIFO order (#5079)
    - Introduce SV_ClientFree() to prevent memory leaks r2077 was supposed to fix

2082 Have server send protocol version in challengeResponse so protocol negotiation works. (Where did this one get lost?)

2083 Move rate limiting / queued packet sending logic from Com_Frame() to sv_main.c

2084 done (possibly different):  Bug 5075 - Fix comments in quake3 configs, patch by q3urt.undead@gmail.com

2085 Fix compile for USE_VOIP=0

2086 Fix alignment issues in message sending/reading that would crash IRIX, thanks to Canavan for supplying a shell where I could fix this (#5077)

2087 Fix legacy protocol with new packet queueing
2088 * Use specific exit code for xmessage

2089 Fix delta compression breaking due to packet queuing

2090 Bug 4812 - GCC __attribute__ annotations for printf, non-returning functions etc., patch by linux@youmustbejoking.demon.co.uk and Zack Middleton

2091
     - Bug 5083 - Cross compiling for 64bit is missing libcurl.a
     - Fix a compiler warning for cross compile

2092 * Fix various issues with unix Sys_Dialog
2093 Shut up returning functions with noreturn attribute warning

2094 Revert attribute patch from r2090 because the jpeg functions really shouldn't be deviating from the codebase unnecessarily

2095 Bug 5084 - [patch] add support for Debian cross compiling, by q3urt.undead@gmail.com

2096 Fix client crash on windows with old OpenAL
2097 * Replace usage of system with fork/exec
2098 Fix extension name comparison for DLL files
2099 Include q_shared.h instead of redefining these
2100 Fix last "noreturn" warnings

2101 Bug 5096  - Define PRODUCT_VERSION in q_shared.h if it is not, patch by Zack Middleton

2102
    - Apply parts of Ben Millwood's target bitfield patch (#3787)
    - Fix Ryan's FIXME and have voip packet buffer on the server dynamically allocated via Z_Malloc and store pointers in a circular buffer
    - Improve voip target parsing on top of Ben Millwood's patch
    - Add new "spatial" target where speaker is spatialized in 3d space and can be heard by all clients in hearing range (s_alMaxDistance)
      (#4467)
    - Decrease voip sound lengths from 240ms to 80ms per voip packet to mitigate udp packet loss and decrease latency
    - Protocol version incremented to 71

2103 Fix menu corruption on IRIX (#5097), patch by Rainer Canavan

2104 Bug 5094 - Code cleanup, patch by Zack Middleton and DevHC. Fixes unused-but-set gcc warnings

2105
    - Switch master server protocol to dpmaster for better game separation. Based partly on patch by Zack Middleton
    - Get rid of ugly cvars sv_heartbeat and cl_gamename and replace with single com_gamename
    - Remove sv_flatline. Flatlines are ignored by dpmaster and are considered to be insecure because flatlines can be udp-spoofed.

2106
    Change DLL search path order for external libraries that are linked at runtime, like libcurl or libopenal to:
       * system library paths
       * executable path
       * fs_basepath

2107 Fix cvar flags to get rid of warnings (#2881)
2108 Fix strange ifdeffery (#5140)

2109 Bug 5134 - q3_ui incorrectly tells user to refresh servers while auto-refreshing, patch by Zack Middleton

2110 Some more removal of unused code in addition to r2104, by Zack Middleton

2111
    Fix pak order when reconnecting to a server.
    When /connect to the same server is issued while already connected, an initial call to CL_Disconnect will remove all pak file references
    and reset the pak order.
    Reordering only occurs through FS_Restart, which in turn is called when checksum feed changes. Because we reconnect to the same server,
    checksum feed never changes and pak file order is not restored to server order again. With certain pak file constellations between client/server,
    this may result in an inability to load files from paks which are not correctly detected as referenced paks.

2112
    Modular rendering system. Patch by use.less01
    This might break MSVC builds. I'll take care of it later

2113 Add forgotten file for last rev
2114 Don't search system directories for renderer lib

2115
    - Fix already defined command warnings for minimize
    - Fix recursive CL_Shutdown warning and "command already defined" warnings when quitting while playing on a server that changed the gamedir.

2116
    Batch of bug fixes for gamecode. Patch compiled and log message written by Tobias Kuehnhammer (#5144)

############################################################################
####
    This Patch fixes:
    ###############################################################################

    - The "fraglimit warning" was not played at all, if on the blue team.
    - The "where" console command was broken.
    - Obelisk explosion wasn't drawn if no Rocketlauncher was loaded.
    - Impact marks sometimes didn't draw at all.
    - IMPORTANT BUGFIX: No killing for cheaters with Lightning gun and Gauntlet.
    - If two doors are close to each other a spectator couldn't fly through them.
    - More robust, efficient and logical respawning routine.
      NOTE: The game.qvm will get notable smaller and will use LESS MEMORY!
    - Drowning sounds are fixed. Now they are played as intended. (as the id
    comment
    in the source code shows).
    - Some AI bugs (OVERFLOW!) in the bot movement code.
    - Several "Team Arena" Overload and Harvester bugs.
    - Stops bots from attacking a team mate (player) who only changed teams.
    - Some voice chats and CTF commands fixed.
    - "Team_ReturnFlag" was called twice, which did wired things sometimes.
      NOTE: (G_RunItem checks CONTENTS_NODROP already!)
    - A bugfix for Gauntlet animation.
    - Incorrect CTF scoring.
    - A bunch of corrected comments and print lines ("\n").
    - Some regularity of expression and some small trivial bugs.

2117 Remove unneeded library dependencies with new modular renderer

2118 Make client/server cflags configurable

2119 Add patch by Zack Middleton to fix building for USE_RENDERER_DLOPEN=0

2120 Add SDL library to renderer lib
2121 Fix compilation on MINGW
2122 Fix ARCH_STRING macro for mingw64

2123 [16:31:51] <ZTurtleMan> Thilo: two small fixes, one for r2112 and one for r2116. http://pastebin.com/raw.php?i=h19r211Z

2124 Fixed some typos in the readme.

2125 Fix crash bug introduced in r2116. traceEnt does not always have to be a client, so gauntlet attacking something that is not a client will crash the game. Thanks to Ensiform for reporting

2126 Remove executable property from these files
2127 Change x86_64 to x64 for mingw.

2128 Moved various per-platform ifs/defines to be only done once for all platforms.

2129 Fix game restart after curl download finished

2130 Don't do game_restart if game directory changed from "" to "baseq3" or "baseq3" to ""

2131
    * Fix some grammar in DLL loading
    * s/Sys_LoadQVMDll/Sys_LoadGameDll/

2132 Fixed viewing sv_master[3-5] in q3_ui server browser (don't give engine fake sources).

2133 Support five master servers in Team Arena server browser.
2134 Fix compilation on non-x86 platforms, by Simon McVittie

2135 Bug 5146  - Remove last of warnings under gcc 4.6.1 for Linux, patch by q3urt.undead@gmail.com

2136 Use STDOUT_FILENO instead of 1 in con_tty.c
2137 Don't grab mouse till UI loads.

2138 Don't create clientsmp directory (which is no longer used), pointed out by DevHC.

2139 Simulate line buffering and fix the overflow bug in Com_ReadFromPipe(), patch from DevHC.

2140 Add hack to allow server the setting of game cvar values that are important for playerstate prediction for legacy gamecode.

2141
    - Add x86_64 platform for MacOSX
    - Fix compilation on MacOSX gcc

2142
    - More MacOSX changes to Makefile
    - Ship libSDL-1.2.0.dylib with x86_64 platform support

2143 Fix warning on MacOSX

2144 Removed "Color Depth" from q3_ui system settings, it didn't control anything.

2145
    - Added r_mode -2 for using display resolution.
    - Changed q3_ui's very high video settings use display resolution.

2146 Fixed copyfiles when USE_RENDERER_DLOPEN is disabled.
2147 Reverted r2145 per Timbo's suggestion.
2148 Disabled getting motd from update server in standalone build.

2149 Fix auto game-restart when disconnecting from a server that explicitly set fs_game to "baseq3" instead of ""

2150 Don't include libcurl-4.dll or zlib1.dll in NSIS installer, they don't seemto be used.

2151 Somewhat fixed NSIS installer for win64, probably still installs with x86 programs.

2152 Added myself to the maintainer list in the README.

2153
    - Only need cl_cURLLib cvar if USE_CURL_DLOPEN is defined.
    - Try to load libcurl-4.dll on win32 (it use to be included in the NSIS installer).

2154 Include extra dlls in NSIS installer if needed (renderer, curl, speex, zlib, jpeg).

2155 put the g where the g belongs
2156 Require gamename if not supporting legacy protocol.

2157 Changed the joystick axis to key remap to start at K_JOY17 (fits better with hat_keys and K_JOY16 is used by button).

2158 Removed unused IN_ButtonDown and IN_ButtonUp functions.
2159 Fixed some function name comments in cl_cin.c
2160 Removed unused kbutton_t declarations in client.h
2161 Use BIGCHAR_WIDTH instead of hardcoded 16 in cl_scrn.c
2162 Use EXEC_NOW instead of hardcoded 0 in cl_ui.c

2163 Support vm syscalls with up to 15 args using 64 bit compiled vm (like interprated vms).

2164 Restored loading ".dat" journal files from disk when connect to pure servers. Accidentally broke in r1911, reported by Ensiform.

2165 Fixed win32 dedicated server console output. It use to write input line and then write output over the top of it. Reported by Ensiform.

2166 Use platform's path separator in FS_Path_f (for consistent output on Windows), reported by Ensiform.

2167 Use correct variable for getting buffer length, reported by Ensiform.

2168 Only include libmumblelink.h if USE_MUMBLE is defined, reported by Ensiform.

2169 Fix missing return instruction for fpu ftol on msvc. Thanks to Ensiform forreporting.

2170 Implement Mathias Benthrup's suggestion for x86 ASM snapvector implementation which reduces cache misses.

2171 Fix latest commit for x86 msvc
2172 Bug 5199  - IQM joint matrices wrong, patch by James Canete

2173 Bug 5178  - Sound quality menu option has no effect

2174
    Added option for selecting sound system (SDL or OpenAL) and option for setting SDL sound quality to q3_ui sound menu.
    Sound settings must now be applied before they take affect (needed for sound system and SDL sound quality changes).

2175 Center ioq3 credits vertically.

2176 Bug 5238  - cURL wrong use of curl_easy_setopt property, by Adrian Fuhrmann

2177 Fix q3vm execution on x86/x86_64 MacOSX

2178 Set default rounding mode to FE_NEAREST again. Thanks to Matthias Bentrup for providing some explanations.

2179 Throw error when making calls to empty VM
2180 Add some checks when reloading QVMs via VM_Restart()

2181
    Allow VM_Restart to load unpure qagame.qvm so that local server won't crash after map_restart if server operator has qagame.qvm residing outside pak file (#5196)
    Thanks to "rg3" for providing a shell account

2182 Allow interpreted VM on pure servers
2183 Fix a few string literals
2184 BitBlt Patch #0000 (#5176)

2185 Force unload of running VMs when quitting through signal handler

2186
    [18:48:20] <Ensiform> Thilo: http://pastebin.com/2UUmSCQK fixes point contents on the server side related to the cg fix with moving water.  Dunno why s.orig in and s.angles was ever used, the rest of sv_world.c always uses r.currentOrigin and r.currentAngles
    [18:58:10] <Thilo> mhm
    [18:58:15] <Thilo> Ensiform: it doesnt break anything?
    [18:59:20] <Ensiform> nah

2187 * clang support
2188 * Fix various warnings with GCC and clang

2189 * (bug #5283) Changes to the Makefile to make building standalone games easier (JBravo)

2190 * I zigged when I should have zagged
2191 * More Makefile configuration (ZTurtleMan)

2192 Fixed showing number of qvm jump table targets (r2180 caused it to show 0 on alloc).

2193 My bad. Revert the FPU control word to old value instead of the new one of course. Thanks to marky for reporting this

2194 Client no longer tries to run UI_SHUTDOWN on ui vms with an unsupported API version.

2195 Print developer message when renderer runs out of free entities.

2196 Fixed usage of various entity defines.
2197 Added missing newlines to game dedicated chat messages.

2198 Add color combination green-magenta for anaglyph

2199 Disable blood on HUD when com_blood is 0.

2200
    I made an awful variant of the old make script, it removes everything universal. Just to get a quick .app build again.

    Don't use this for anything.

2201 Fixed that, still do not run this. I'm not sure why but the video mode handling doesn't work today in Mac OS X 10.7 and recovering is difficult.

2202 Removed duplicate setting of contents for trigger_hurt.
2203 Fix net_restart when networking was temporarily disabled
2204 Use GENTITYNUM_BITS for jumppad_ent bits.
2205 Enable zone and hunk debug in debug build.

2206 Show file/line/label in Com_Error messages when run out of memory in debug build.

2207 Removed an unused variable (which wasn't compiled in as _DEBUG isn't defined using make).

2208 Removed unused functoin Hunk_Trash.

2209 Show warning when renderer cannot load model after checking all supported formats, instead of after each format.

2210 Reverted r2209

2211 Fixed typo in Makefiles copyfiles directory path check.

2212 The mailing list sub e-mail address has been wrong for a depressingly long amount of time.

2213 Fix build for new modular renderer on MacOSX

2214
    bugzilla bug #5273
    exploit resolved, we're now disallowing forwardmove of -128 and vice versa

    Thanks, devhc!

2215 Fixed UI to use MAX_QPATH for skin filename buffer length.

2216 Changed three filename buffers to be MAX_QPATH (not MAX_QPATH*2), filename lengths are limited to MAX_QPATH by engine and elsewhere in game logic.

2217 Add the new ioquake3 master server as standard for sv_master2

2218 Unix clients can now enter commands from tty console. Patch by Rambetter with some edits by me. (#4799)

2219
    Patches by symlink.

    #5313 - EF_CONNECTION set on wrong eFlags
    #5314 - snc drawn in nirvana instead at lagometer

2220 fix mingw64 installer

2221 Allow analog joystick up axis to be remapped too.
2222 Added new joystick cvars to README.
2223 Support up to 16 joystick axes, select which to use with j_*_axis cvars.
2224 Added range checks to j_*_axis cvars.

2225
    - Added support for enabling FreeType Support (make USE_FREETYPE=1).
    - Fixed compiling tr_font.c for dynamic renderer.

2226 Fixed writing pre-rendered font TGAs, needed to flip image.

2227 Fixed possibly placing a font glyph (at the beginning of a row) past the bottom of a font cache image.

2228 Make sure font glyph shader names are null-terminated.
2229 Removed set but not used variable 'satLevels' from tr_font.c.
2230 Use tabs in tr_font.c
2231 Fixed up warning messages in tr_font.c

2232 Use FreeType include macros instead of filenames directly (per the API docs), patch by Radegast.

2233 #5484 - Remove unneeded tr_local.h include from sdl_input.c. Patch by Harley Laue.

2234 #5485 - Use Sys_LoadDll to search in the local directory for the fallback default renderer. Patch by Harley Laue.

2235 #5439 - Potential memory leak in host name resolution. (Eugene C.)
2236 #5453 - Tell command for server.

2237 Fixed some issues found using clang static analyzer.
2238 Moved dpi variable inside BUILD_FREETYPE ifdef.
2239 updating mac SDL stuff to 1.2.15

2240
    updating SDL includes to 1.2.15
    Listen to this if this doesn't work out properly:
    http://timedoctor.org/fun/swf/starwars/tauntaun-soundboard.swf

2241 Minor hack to SDL headers for building on Linux.
2242 specifying gcc to see if that fixes the mac build...
2243 Missing a - in the CC line

2244 removing the smp stuff from the mac build script.

2245 Fix (#5312) introduced by rev 2103

2246 #5462 - do not require clients to have a matching qagame.qvm (adapted from OpenArena)

2247 Fixed two issues pointed out in a PVS-Studio static code analyzer article (bug #5505).

2248 #5503 - SIGSEGV with r_vertexlight 1 in missionpack (patch by Serge Belyshev).

2249 Don't use local SDL headers on Linux (need system sdl-config and SDL library anyway).

2250 gcc 4.0 specification on mac build script

2251 In CheckTeamLeader, make sure to only set one client as team leader. Reported by Tobias Kuehnhammer.

2252 Removed unnessicary "!!".
2253 CVE-2012-3345
2254 Cleaned up game server command usage messages.
2255 done:  Call sound files 'audio' not 'wav' in debug messages.
2256 fix wrong socket ID comparison, from /dev/humancontroller

2257
    fix IPv6-only operation of Windows binaries

    the SOCKET type is unsigned on Windows, and should be casted to an int before comparing with the highestfd variable (note: ``int highestfd = -1;'')

    From /dev/humancontroller.

2258
    add the "execq" command, a more quiet version of the "exec" command
    in exec/execq, always print the extension for the filename

    From /dev/humancontroller.

2259
    add missing commands to autocompletition

    found by Ensiform

2260
    non-missionpack build throws up a few "0" plums

    found by Ensiform

2261
    add a missing '\n', remove some unwanted ones

    From /dev/humancontroller.
2262
    bring some freeish()ing operations ahead from after Errorish() calls

    From /dev/humancontroller.

2263
    remove a bunch of unused stuff from game

    From /dev/humancontroller.

2264
    fix some typos

    From /dev/humancontroller.

2265
    REFACTOR

    From /dev/humancontroller.

2266
    never set groundEntityNum to -1, use ENTITYNUM_NONE instead

    From /dev/humancontroller.

2267
    REFACTOR [a vs an]

    From /dev/humancontroller.

2268
    REFACTOR [reletive -> relative]

    From /dev/humancontroller.

2269
    fix the usage description of the clientkick server command (also rename SV_KickNum_f() to SV_ClientKick_f())

    found by Ensiform

2270 Removed unneeded va() and use CG_Error instead of trap_Error in cgame. Found by Ensiform.

2271 REFACTOR [anough to enough]
2272 Made more code for Team Arena be inside ifdef MISSIONPACK, from Ensiform.
2273 Let's actually use MOD_CHAINGUN! From Ensiform.
2274 Only have bots issue vtaunt commands in Team Arena.
2275 Added execq to README.
2276 Fixed comment in server.h (ent->v.absmax to ent->r.absmax).
2277 Fixed typo in README from r2275.

2278 Removed 0xAD character, from /dev/humancontroller.

2279
    rename trap_Printf() to trap_Print() in the game module, as that function has nothing to do with printf()-like formatting

    From /dev/humancontroller.

2280
    remove a bunch of superfluous formatting calls

    From /dev/humancontroller.

2281
    fix a WRONG size argument to a memset() call found by Clang/LLVM

    From /dev/humancontroller.

2282
    when interacting with QVMs, Clang/LLVM requires the standard use of the va_*() macros instead of (fast) call hacks

    From /dev/humancontroller.

2283
    more '\n' business

    From /dev/humancontroller.

2284 Added kicknum, kickall, and kickbots commands, patch by Ensiform.

2285
    static-ize inline functions for Clang/LLVM

    From /dev/humancontroller.

2286 #5672 - Fixed incorrect type usage in NET_Sleep(), patch from Özkan Sezer.

2287
    - Have NET_Sleep work with Windows' INVALID_SOCKET again...
    - Use SOCKET_ERROR in NET_Sleep.

2288 Fixed fatal error ("OP_BLOCK_COPY out of range!") when using qvms on Mac OS X powerpc (see r2031 and r2034).

2289 prevent using getinfo as an amplifier for DDOS attacks (#5678). Patch by DevHC

2290 Support building on cygwin with cross-make-mingw*.sh (#5405) - patch by q3urt.undead@gmail.com

2291 More intelligent exponentiation in strtod/strtol (#5487) - patch by Ben Millwood

2292 Incorrect number of overbright bits printed by GfxInfo_f() (#5510) - fix by Serge Belyshev

2293 r_ignorehwgamma 1 does not actually turn on software gamma (#5511) - patch by Serge Belyshev

2294
    Various bugfixes by Tobias Kuehnhammer (#5270)
    - A stupid bug where bots re-trigger jumppads if they fell onto it.
    - A small "memset" bug concerning player animations.
    - Reward sounds were never cleared and thus they are played on a map restart.
    - Safer and more secure handling of disconnected clients and clients with
      malformed or illegal info strings.
    - first_gauntlet_hit.wav was not played (ops/ps) bug
    - capturelimit not hit (from OAX)

2295 Support for .pk3dir (#5298) - Patch by Andrew (dersaidin@gmail.com)

2296 Mark JPEG lib changes, file provided by Simon McVittie

2297 Revert pk3dir patch because some users report the code gets stuck in an infinite loop in the new code

2298
    We should not try to broadcast via the IPv4 socket if that socket is closed.

    Previously, error messages were generated when querying local servers while IPv4 was disabled. Patch from /dev/humancontroller.

2299 Fixed G_LogPrintf format warning on 64 bit systems added in r2294.

2300 * (bug #5709) Fix crash when invoked with --version

2301 Fix windows as well
2302 * Fix warning
2303 switch mac to the framework SDL...
2304 Fix this for real now.

2305 Move argument passing from VM to engine to global variables which allows to get rid of lots of OS specific stuff and also fixes errors that happens when compilers add lots of boilerplate to the DoSyscall() function

2306 Oops, still need this
2307 Don't replay to status OOB requests in Team Arena single player.
2308 Added MISSIONPACK ifdef around GT_1FCTF code.
2309 More MISSIONPACK ifdeffery.
2310 Removed a check that was made unnessicary by r1644.

2311 (already have):  Added r_mode -2, uses desktop resolution. Bug #5408. Patch by Andrei Drexler and myself.

2312 Use correct fallback height and width for r_mode -2.
2313 Remove a redundant code statement.

2314
    Don't have g_teamAutoJoin affect bot's team

    Bots set their team later, setting it here causes some bots to change team and die later. Can cause extra skulls to be spawn at beginning of harvester (bug #5740).

2315 Send team info for team overlay to spectators for the team of the client they're following (bug #5740).

2316 Fix g_warmup < 2 causing client prediction issues (bug #5740). (Reused code for tournament gametype.)

2317 Fix game getting stuck in a do-while loop when "team follow1" or "team follow2" client sends a follownext or followprev command.

2318 Cache servers for each master server in q3_ui, otherwise servers from last updated master for shown for all Internet# sources.

2319 Fix UI player model FOV when using non-640x480 resolution.
2320 Added myself to ioq3 credits in q3_ui.
2321 Fix arrow buttons in q3_ui join server menu to be selectable by mouse.

2322 Fix resetting single player level selection in q3_ui when there is no training level, such as in demoq3.

2323 skip (not needed):  Play correct team sounds when in spectator mode and following a player.

2324 Don't include client.h in sdl_glimp.c as it is part of the external renderer lib.

2325 Check last listener number instead of clc.clientNum in S_AL_HearingThroughEntity so sound work correctly when spectate following a client. (Related to bug 5741.)

2326 When in third person, don't play player's sounds as full volume in Base sound system. OpenAL already does this. (Related to bug 5741.)

2327

    From /dev/humancontroller:
    really fix the confusion with game entity and refentity numbers

    for any natural number M, the following is logical as a whole:
    - the array size for refentities is M;
    - the refentity number limit is M-1, ie., each refentity number is in [0..M-1];
    - the special number for the world is M.

    before r1429, the code was roughly the following:

    // constants related to the game, should not be used by the renderer

    // renderer stuff
    refEntity_t refEntities[MAX_ENTITIES];
    int numRefEntities = 0;

    void addRefEntity(refEntity_t re)
    {
	if (numRefEntities >= ENTITYNUM_WORLD)
		return; // full
	refEntities[numRefEntities++] = re;
    }

    void render(int num)
    {
	if (num == ENTITYNUM_WORLD)
		renderWorld();
	else
		renderRefEntity(refEntities[num]);
    }

    so before r1429,
    - the array size for refentities was 1023;
    - the refentity number limit was 1021, ie., each refentity number was in [0..1021]; and
    - the special number for the world entity was 1022.
    this was a small waste of memory, as the last array element wasn't used.

    r1429 changed
	if (numRefEntities >= ENTITYNUM_WORLD)
    to
	if (numRefEntities >= MAX_ENTITIES).

    this creates the following configuration:
    - the array size for refentities is 1023;
    - the refentity number limit is 1022, ie., each refentity number is in [0..1022]; and
    - the special number for the world entity is 1022.

    r1429 just makes things worse: it allows 1 more refentity to be added, but that entity doesn't get drawn anyway, as its number will be equal to the special number for the world. this is a small waste of not only memory, but also processing time.

    perhaps in XreaL,

    ENTITYNUM_WORLD is a game entity constant, and has nothing to do with refentities. a new REFENTITYNUM_WORLD constant should be added to denote the special number for the world, and that constant should be used in the renderer code in place of ENTITYNUM_WORLD. so define such a constant, and let it be equal to MAX_ENTITIES, which is 1023.


2328
    From /dev/humancontroller:
    to further reduce confusion, rename constants like MAX_ENTITIES to MAX_REFENTITIES

2329 Added Rend2, an alternate renderer. (Bug #4358)
2330 Fix restoring fs_game when default.cfg is missing.
2331 Added myself to the list of maintainers.
2332 Fix gcc warnings in Rend2.
2333 Remove gfxmeminfo command when shuting down Rend2.
2334 Add smiletheory to credits in q3_ui.

2335 Split Rend2's printing OpenGL extensions string (> 1024 characters) into separate function and merged into opengl1 renderer. (Fixes bug #5559.)

2336 Merge changes to GL_Cull from Rend2 into opengl1 renderer, behavior is the same.

2337 Remove speed claim until Rend2 beats opengl1 under typical circumstances.

2338 Fix FBO_*() usage when framebuffers are unavailable or undesired.

2339 Remove ARRAY_SIZE, and use ARRAY_LEN instead.

2340 no (removed in later patch:  51df89ab132b8e05d9854df507c73e54fbd2884b)
    From /dev/humancontroller:
    fix the SMP functionality not being utilized (as of the import of Rend2)

2341
    From /dev/humancontroller:
    when hard-linking renderers, put the old renderer (not the new one) into the "ioquake3" executable, and use a distinguished "ioquake3_rend2" executable for the new renderer
    (Fixes bug #5789.)

2342 Remove initializing "sv_mapname" cvar in game. It's set to "" and never used.

2343
    Fix some non-ASCII characters.
    Patch originally by /dev/humancontroller, modified by me.

2344 Show reason non-default renderer failed to load.
2345 Clean up getting pshadowMap in Rend2's R_DecomposeSort().

2346 Fix restoring old fs_game upon leaving a server. Patch by Ensiform.

2347 Don't draw cursor during Team Arena's loading screen.

2348 Ensure the correct FBO is bound when drawing. (Fixes bug #5791.)

2349 Change more operator commands to require sv_running to be usable. Patch by Ensiform.

2350 When calling qglDrawRangeElementsEXT(), use proper start and end parameters.

2351 Fix bugs where some surfaces weren't merged and others were counted as merged in R_MergeLeafSurfaces().

2352 Various shader fixes and optimizations.

2353 Fix some "> MAX_*" to be ">= MAX_*".

2354 Change error message in CL_ConfigstringModified to specify out of range index like in server.

2355 Fix follow command to find clients whose name begins with a number.

2356
    - Fix up "gc" command, make it more like "tell". Based on patch by Ensiform.
    - Add usage messages for gc, tell, vtell, and votell commands.
    - Check player names in gc, tell, vtell, and votell commands.

2357 Remove anti tamper leftover code 'CL_ChangeReliableCommand'. From Ensiform.

2358 #5799 - Change messagemode text box to display colors like in console input box.

2359 Improve "play" command, based on a patch from Ensiform.
2360 Remove unneeded name buffer in S_Play_f.

2361
    - Check for invalid filename in OpenAL's RegisterSound function.
    - Changed Base sound system to warn not error when sound filename is empty or too long.

2362 Remove references to non-existent functions CM_MarkFragments and CM_LerpTag.

2363 Make software overbright optional (cvar r_softOverbright) and reduce the number of FBOs and FBO blits when able.

2364
    Changes suggested by DevHC:
    - Remove "!target" checks from tell, vtell, and gc commands. Target was just set, cannot be NULL.
    - Validate "order" in gc command before "player id."

2365 Update standalone code in Catch the Chicken NSIS installer.
2366 Remove unused function CL_DisconnectPacket. Pointed out by Ensiform.
2367 Fix function prototype for Info_RemoveKey_Big. Pointed out by Ensiform.

2368 In q3_ui if uis.demoversion is set, hide "Team Arena" and "Mods" in main menu. (They aren't shown in id's q3a demo and use to be drawn under demo message).

2369 Add length check here as well, thanks Ensiform
2370 #5808 - Include and use .glsl in source (rend2)
2371 Oops, fix line endings in new files in previous commit

2372 #5812 - Use refdef's coordinates when drawing to screen shadow fbo, and separate depth texture and screen texture coordinates in glsl shaders.

2373 From /dev/humancontroller: Typo.

2374
    - Include Rend2 renderer in MacOSX bundle.
    - Include OpenGL1 and Rend2 renderers in MacOSX UB

2375 Include Rend2 renderer in NSIS installer.
2376 Include OpenGL1 and Rend2 renderers in Loki Setup Installer.

2377 Have NSIS uninstaller delete rend2.

2378 Split light sample into direct and ambient parts when using deluxemaps or per-vertex light vectors.  Fixes #5813.

2379 Fix writting voip data in demos (broke in r2102).

2380 Fix server ignoring client move commands if voip data is included.

2381
    - Allow changing cl_voip without restarting.
    - Fix assert failing in CL_ParseVoip() while flipping cl_voip off and on.

2382 Only declare var_SampleToView in lightall shader when it is actually used.

2383 Fix a couple files not ending with a newline.


2384 Fix clients being able to reset their player state and respawn using donedl.

2385
    Fix passing arg9 (qvm only), arg10, and arg11 to vmMain for native libs and non-i386 compiled or interpated qvms. (Currently they aren't use in vmMain in game, cgame, or ui.)
    Fix passing args[11] to args[15] from vm to engine on ppc64 and sparc64. Some of the args are used by game bot prediction syscalls. May have been causing bugs. Note: This was fixed for x86_64 in r2163.

2386 Fix reconnect command to work after leaving server. (#5794)

2387 Fix dedicated server crashing when using MSG_ReadDelta*, though it only happens if someone modifies the engine. (#5449)

2388 Makefile fixes for OpenBSD by Jonathan Gray. (#5728)

2389
    Save all arguments from connect for reconnect command.
    Remove unnecessary localhost check from reconnect command.

2390  Support r_srgb even without hardware support.  Also tweak default autoexposure/tonemap settings to look good on both r_srgb 0 and 1.

2391  Missed a file in the previous commit.
2392  Changed the MacOS-X build system to make UB's containing i386 and x86_64 arches and made make-macosx.sh not build UB's but only standard binaries

2393
    - Fix spectator client being switched from follow to free after map_restart if following a client with a higher client number.
    - Fix client unlinking issue caused by ent->s.number being set to followed client's ps->clientNum after map_restart. Reported by Ensiform.

2394
    Changes from Ensiform:
    - In G_AddBot, try to allocate clientNum before doing anything else.
    - In G_AddBot, don't set SVF_BOT and inuse. It's done in ClientConnect, plus inuse causes ClientDisconnect to be run for no reason.
    - In G_AddBot, only set skill in bot useinfo once.
    - Avoid using cl->ps.clientNum to check if cl is a bot.

2395 Fix bot skill format so it doesn't always have a space at the beginning of it.

2396 More fixes to the macosx buildsystem.  This removes the SDL Framework and makes use of a SDL library that is position independant.  This also brings back PPC builds into the UB and also as a standa alone build choice.

2397 mv .svnignore .gitignore

2398 Have make-macosx.sh require the user to specify which architecture she/he wants to build for and suggest building UB's if the user is unaware of what architectures are

2399 Lets list all the valid options.


----------------------------------------------------------------------------
------- now svn 2399 == git 2d02694749efe39ae54652c8b86ca98530d255eb -------
-------   2013-01-03-01 f6c98fd29f3eb18ab0bd69c870ac00394fab961f     -------
----------------------------------------------------------------------------

2013-01-03-01 Replace svnversion use with git equivalent

2013-01-05-01 Fix whitespace
2013-01-05-02 Fix dist target and comment refering to svn
2013-01-05-03 Assorted whitespace fixes

2013-01-06-01 Increase various arbitrary limits - Bug #5463
2013-01-06-02 Fixed a small bug in my new version of this script.

2013-01-06-03
    Merge pull request #1 from richard-allen/master

    Fixing the make-macosx.sh script up a bit

2013-01-06-04 Fixed a typo in a comment

2013-01-07-01  #5818 - Modular renderer and Rend2 support for MSVC.

2013-01-07-02  #5863 - Use proper texture coordinates for alpha tested materials when doing depth prepass.

2013-01-08-01
    Colorize text on win32 console

    Text input line color based on code by "spior"
    Main colorize function based on Sys_AnsiColorPrint in sys_main.c


2013-01-09-01
    Fix win32 dedicated input line printing to backlog

    Use to write win32 input line using WriteConsole then overwrite by
    CON_Print, so when CON_Print removes color format characters the end of original input line was visable.

    "hi ^1guys" use to be shown as "hi guysys" in the console backlog.

2013-01-09-02 Don't look for colors past win32 input line length

2013-01-09-03  #5866: Fix surface culling through portals, and use the correct number of frustum planes.

2013-01-09-04
    Fix #5849 - broken snapvector inverts player speed

    Snapvector was converting floats to 16 bit integers instead of 32 bit integers.

2013-01-09-05 Merge branch 'master' of https://github.com/ioquake/ioq3

2013-01-10-01
    Fix win32 input left on buffer and overwritten

    The input line on the console screen buffer was moved up a line and
    overwritten by CON_Print.

    Remove input line when console shutdown as well.

2013-01-10-02 Make win32 console cursor visible
2013-01-10-03 Fix win32 console partial print being overwritten

2013-01-11-01 Remove old FIXME, pmove_framecount isn't networked

2013-01-13-01
    Fix FS_FOpenFileRead corner case

    FS_FOpenFileRead is a fairly mental function that changes its return
    behaviour depending on whether or not file is NULL or not. It turns out
    in the case where file is NULL, we were returning the wrong value when
    the file didn't exist.

2013-01-13-02
    Fix screwed up whitespace in files.c

    Apologies to anyone merging this :(

2013-01-13-03 Fix error message in BG_EvaluateTrajectoryDelta

2013-01-14-01 Fix error message in BG_EvaluateTrajectory

2013-01-16-01
    Add togglemenu command

    Allow togglemenu to be run in binds while in menu or message mode.

2013-01-16-02 Add togglemenu to q3_ui controls menu
2013-01-16-03 Run toggleconsole in binds while in menu or message mode
2013-01-16-04 Fix typo in README

2013-01-17-01 Add vim stuff to .gitignore

2013-01-17-02 Use SDL 2 instead of SDL 1.2
2013-01-17-03 Make the mousewheel work

2013-01-17-04
    Make UI_CVAR_CREATE use VM specific code

    Makes cvar be flagged as VM created and unset ROM if ARCHIVE is set.

2013-01-18-01 Allow hardware gamma, in theory

2013-01-19-01 Convert SDL text input to UTF-32
2013-01-19-02 Fix wacky patch for r_ignorehwgamma

2013-01-21-01 Improve console key situation
2013-01-21-02 Update bundled SDL headers/libs

2013-01-24-01 Remove the SMP renderer feature

2013-01-25-01 Update README

2013-01-26-01 Fix some SMP bits I missed

2013-01-28-01 The in_mouse stuff makes no sense in SDL2

2013-01-30-01 Starting sunlight experimentation branch

2013-01-30-02 Merge branch 'HEAD' of https://github.com/ioquake/ioq3.git into suntest

2013-02-01-01
    Fix MSG_ReadDeltaKey setting bit 1<<bits often

    MSG_ReadDeltaKey would often set 1<<bits, it should never be set. It exceeds the size of what was being read.
    Worked okay for weapons/forward/right/up as they stored as chars (value would wrap around to correct value, lucky).
    Angles had the wrong value, not sure if it was causing issues.

2013-02-02-01 Remove some unused defines from msg.c
2013-02-02-02 Use Q_strncpyz in G_AddRandomBot
2013-02-02-03 Remove MSG_WriteDeltaUsercmd and MSG_ReadDeltaUsercmd

2013-02-04-01 Merge Reaction renderer features, remove "#ifdef REACTION"s

2013-02-04-02 Merge branch 'reactionmerge'

2013-02-07-01
    Increase favorite address buffer size in Team Arena UI

    Now it can hold an IPv6 address.

2013-02-07-02 Fix creating favorite when not on view favorite servers

2013-02-07-03 Merge branch 'master' of https://github.com/ioquake/ioq3

2013-02-08-01 Fix resolving IPv6 favorites in Team Arena UI

2013-02-08-02 Extend Team Arena Favorite Address edit field to hold an IPv6 address

2013-02-08-03
    Fix IPv6 favorites in q3_ui

    This does however allow favorites to contain hostnames which was explicitly not allowed before.

2013-02-11-01
    Fix renderering TrueType Fonts in Rend2

    Reported by Axel Isouard (exidl)

2013-02-11-02 Unify/cleanup max snapshot entities on client and server
2013-02-11-03 Adds Z checking to CanDamage function.
2013-02-11-04 Add missing traps to cg_local.h
2013-02-11-05  Remove newlines from Rend2 error messages
2013-02-11-06 Update invalid g_gametype right away

2013-02-11-07 5289 - Support for .pk3dir

2013-02-11-08 Change pk3dir README / comments to fit in better

2013-02-11-09
    Don't add pk3dirs if connecting to a pure server

    Only .cfg etc would be read from pk3dirs, but they should be treated like pk3s that are not on the pure list.

2013-02-11-10 Extend Team Arena name edit fields to MAX_NAME_LENGTH
2013-02-11-11 Fix possible delta from invalid entity
2013-02-11-12 Fix compiling

2013-02-12-01  #5878: Ensure surfaces are drawn before executing full-screen render

2013-02-15-01  renderer -> renderergl1, rend2 -> renderergl2

2013-02-15-02  Fixed build for mac (s/rend2/opengl2/)
2013-02-15-03 5097 - Menu corrupted on start (on IRIX)
2013-02-15-04 5717 - Gamecode can open file "" for reading
2013-02-15-05 Remove unneeded variable extern
2013-02-15-06
    condump improvements

    Default output file extension to ".txt"
    Show output filename in error message.
    Use Windows line endings on Windows.
    Dynamically allocate line buffer. (by ZTM)

2013-02-16-01 Fix freeing source while parsing botfiles/items.c
2013-02-16-02  Move some things into renderercommon
2013-02-16-03 Change radiant URL in README
2013-02-16-04  Add renderercommon/tr_common.h
2013-02-16-05 Remove a few name tags
2013-02-16-06  Add GPL header to tr_common.h
2013-02-16-07  Fix zakk's screwups

2013-02-17-01 5882 - Update OpenAL Headers to OpenAL Soft 1.15.1

2013-02-17-02 Add Ogg Opus support
2013-02-17-03 Add libopus 1.0.2 and libopusfile 0.2
2013-02-17-04 Add libogg 1.3.0
2013-02-17-05 Fix compiling opus using mingw
2013-02-17-06 Add ogg and opus Makefile options to README

2013-02-17-07
    Add missing config_types.h for libogg

    It's usally generated by configure, most platform cases are handled in os_types.h

2013-02-17-08 Fix last commit

2013-02-18-01 Fix compiling opusfile on mingw32
2013-02-18-02 Remove Sys_SnapVector

2013-02-27-01 Fix comment in snd_codec_opus.c

2013-02-27-02
    Move noise function declations to tr_common.h

    tr_noise.c is in renderercommon directory, so declare them in header there too.

2013-02-27-03 be_ai_weap.c: s/move state/weapon state/g
2013-02-27-04 Remove unused config string code from botlib
2013-02-27-05 Fix BotExportTest's args for BotGetReachabilityToGoal
2013-02-27-06 Fix comment for gametype parsing in ui

2013-03-03-01
    Fix Key_StringToKeynum to return lowercased ascii

    Fixes bind and unbind uppercase ascii and uppercase ascii in cl_consoleKeys.

    keycodes.h states "normal keys should be passed as lowercased ascii"

2013-03-03-02 Show lowercased ascii in bind command
2013-03-03-03 Fix vote Y/1 and teamvote Y/1

2013-03-05-01
    Calculate viewport and screen texture coordinates correctly for sun shadows.
 This fixes part of #5889.

2013-03-05-02  Simplify previous patch.
2013-03-05-03  Oops, fix typo.
2013-03-05-04 Testing out autobuild stuff.

2013-03-05-05 Fixed the auto build, for details go here: https://travis-ci.org/ioquake/ioq3

2013-03-06-01 updated travis file to notify us in our lonely IRC outpost of love.

2013-03-06-01  Simplify RE_StretchRaw() with RE_UploadCinematic() and RB_InstantQuad2().

2013-03-06-01  Some minor cleanup.

2013-03-06-01  Merge branch 'HEAD' of https://github.com/ioquake/ioq3.git

2013-03-06-02
    autobuild: Enable Ogg Vorbis, Freetype, and MDR model support

    Removed unneeded SDL packages.

2013-03-06-03 autobuild: test default build, with extra options, and mingw
2013-03-06-04 autobuild: try to fix extra options build and mingw builds

2013-03-06-05  Fix RAVENMD4 warnings in OpenGL2
2013-03-06-06 Improve build-test.sh for non-travis-ci usage
2013-03-06-07 build-test.sh always run clean first, for non-travis-ci

2013-03-06-07 Merge branch 'HEAD' of https://github.com/ioquake/ioq3.git

2013-03-07-01 Use the mingw fork that gets maintained
2013-03-07-02 Use -q instead of -qq on apt-get
2013-03-07-03 One last try...

2013-03-07-04  Fix clampmapped images being always treated as sRGB.

2013-03-07-05 Merge branch 'HEAD' of https://github.com/ioquake/ioq3.git

2013-03-07-06 Only spam IRC on failure

2013-03-08-01
    Fix origin returned by IQM's LerpTag

    It use to return pose joint's offset from base at the lerped frame, now it returns the joint's origin at the lerped frame.

    Patch by Axel Isouard and Zack Middleton.

2013-03-08-02 Merge branch 'master' of https://github.com/ioquake/ioq3

2013-03-08-03 Fix size reserved for IQM jointMats (allocated more than used)

2013-03-09-01 Fix displaying demo name when loading demo

2013-03-11-01 Remove old x86_64 JIT compiler
2013-03-11-02 Remove README note about USE_OLD_VM64

2013-03-11-03  Always reset vertex attrib pointers with animated meshes.

2013-03-12-01 Move renderers a bit closer together
2013-03-12-02 Fix USE_FREETYPE breakage
2013-03-12-03 Oops missed a bit
2013-03-12-04 Move mingw to separate build job on travis-ci
2013-03-12-05 Fix some clang warnings
2013-03-12-06 Fix mingw gcc name in build-test.sh

2013-03-12-07
    Disable freetype and vorbis for mingw travis build

    Libs are missing.

2013-03-12-08 Remove some more automatic sRGB image flags.

2013-03-14-01  Fix compilation in VS2008.
2013-03-14-02  Support more tcgens in lightall shader.

2013-03-18-01 Remove RAVENMD4 #define
2013-03-18-02 Fix loading and rendering IQMs with no joints
2013-03-18-03 Use PATH_SEP for a debug message in FS_FOpenFileReadDir

2013-03-18-04
    Always initialize joint_names in R_LoadIQM

    Reported by MAN-AT-ARMS

2013-03-18-05
    Fix NET_IPSocket and NET_IP6Socket return type

    It was causing a warning on Windows x64.

2013-03-20-01  Make all GLSL shaders use the same set of uniforms.

2013-03-21-01
    Consolidate architecture names

    amd64, x64, x86_64 -> x86_64
    i386, i86pc, x86 -> x86
    powerpc, ppc -> ppc
    powerpc64, ppc64 -> ppc64
    axp -> alpha

    Some exceptions are made for the actual build product names

2013-03-21-02 Merge mingw build scripts
2013-03-21-03 Add jenkins-ci-build.sh
2013-03-21-04 Fix cross-make-mingw.sh when no ARCH is supplied
2013-03-21-05 Fix comment grammar (and test jenkins)

2013-03-22-01 Ditch 'historical compatibility' and use 'logic' instead
2013-03-22-02 Add DEBUG_MAKEFILE to... debug the Makefile

2013-03-22-03 Move cross-make-mingw.sh's functionality to the Makefile and remove it

2013-03-22-04 Fix travis build
2013-03-22-05 (Hopefully) fix the Jenkins build
2013-03-22-06 Fix it more
2013-03-22-07 Make travis silent
2013-03-22-08 Use distclean for jenkins builds

2013-03-23-01 (bug #5904) Fix OpenBSD and Solaris builds

2013-03-24-01 Enable building QVMs when cross-compiling

2013-03-25-01  s/enum/typedef enum/g on uniform_t for glorious fix of mac build. h/t...

2013-03-25-02 Cross compiling for OS X

2013-03-25-02 Merge branch 'HEAD' of https://github.com/ioquake/ioq3.git into suntest

2013-03-26-01 Fix some of the things clang --analyze flagged
2013-03-26-02 Fix the warning caused by fixing the warnings
2013-03-26-03 Fix 'make -jX clean release'
2013-03-26-04 Make the build summary more pretty

2013-03-27-01 Add option to create archive of build product
2013-03-27-02
    Change missionpack QVM build order in Makefile

    Now it matches native libs and baseq3 QVMs.

2013-03-28-01 Fix OSX app/ub scripts
2013-03-28-02 Fix typo preventing OSX native compiles

2013-04-02-01
    Add sunlight/lightmap merging by multiply (r_sunlightMode 1)
    Merge additive sunlight and map lighting into one GLSL shader (r_sunlightMode 2)
    Change single lightmap blends to use lightall

2013-04-02-02 Merge branch 'HEAD' of https://github.com/ioquake/ioq3.git into suntest

2013-04-05-01
    Fix setting CVAR_VM_CREATED flag on user created cvars

    Fix setting CVAR_VM_CREATED flag on cvars created using set[asu] commands (including archived cvars from cfg) and trap_Cvar_Set.

    trap_Cvar_Register called Cvar_Get which cleared CVAR_USER_CREATED flag, but CVAR_VM_CREATED wasn't set because the cvar already existed.

2013-04-09-01 Fix shfolder.dll not getting freed

2013-04-10-01
    Fix zone memory leak in OpenGL2 renderer

    meminfo command showed the dynamic renderer zone amount going up by 1824 bytes each time I reloaded map using map command.

2013-04-13-01 Remove old .mak files from botlib

2013-04-14-01
    Fix memmove()

    [The lcc source] overrides the libc memmove() with its own implementation,
    but that implementation fails to follow the specification. In particular,
    it returns NULL rather than memmove()'s first parameter.

    GCC now optimizes based on this aspect of the specification, so things go
    wrong at runtime.

    [Text & patch from http://gcc.gnu.org/bugzilla/show_bug.cgi?id=56881#c8]

2013-04-20-01
    Add fallback for __func__ (ioq3 isn't compiled as c99 by default)

    Using Debian gcc version 4.7.2 and clang 3.0-6.1 anyway.

2013-04-22-01 Fix referencing pk3 with only qagame QVM
2013-04-22-02
    Give botlib com_basegame for botlib.log path

    Before it always used BASEGAME fallback code.

2013-04-22-03  Don't scale shadow multipliers by overbrightbits, and improve documentation.

2013-04-24-01
    Don't allow modifying qvms or pk3s

    Exception for allowing pk3s to be downloaded.

2013-04-24-02 Rename FS_CheckFilenameIsNotExecutable to ..NotImmutable
2013-04-24-03 Rename FS_CheckFilenameIsNotImmutable to ..IsMutable

2013-04-26-01 Correct TeamCount return type and team argument type

2013-04-26-02  #5889: Do post-processing only on viewport portion of frame buffer.

2013-05-03-01  Use specular texture RGB as specular reflectance, multiplied by per-material value.

2013-05-03-02
    Show surface names in excessive vertexes and triangles warnings

    Add newlines to renderergl2's R_LoadMD3 vertex and triangle warnings.

2013-05-04-01 dlopen libopenal.so not libopenal.so.1 on OpenBSD
2013-05-04-02 correct the linked libs on OpenBSD
2013-05-04-03 sync the OpenBSD cflags with Linux

2013-05-04-04
    Merge pull request #2 from jonathangray/openbsd_fixes

    OpenBSD fixes

2013-05-08-01
    Merge branch 'master' into sdl2

    Conflicts:
            Makefile
            code/renderercommon/qgl.h
            code/renderergl1/tr_local.h
            code/sdl/sdl_glimp.c

2013-05-13-01 Remove unused renderCommandList variable from renderers

2013-05-12-01
    Add USE_INTERNAL_LIBS, a default for USE_INTERNAL_*

    Linux distributions that want to link dependencies externally will
    generally want to link (almost) every dependency externally; similarly,
    minimal-dependency builds that want to use the embedded copies of
    dependencies will generally want to do so for (almost) every dependency.
    Make it easier to choose one of those by setting USE_INTERNAL_LIBS=0
    or USE_INTERNAL_LIBS=1, respectively.

    The default can still be overridden per-dependency; for instance,
    "make USE_INTERNAL_LIBS=0 USE_INTERNAL_OPUS=1" will use the system
    version of everything except Opus.

2013-05-19-01
    Centralize checks for Freetype, with a user override

    This lets us find a library in a non-standard library directory
    (via -L in the pkg-config metadata), and allows overrides similar to
    the Autoconf convention, e.g.

        make FREETYPE_CFLAGS=-I/opt/freetype/include \
            FREETYPE_LIBS="-L/opt/freetype/lib -lfreetype"

    If pkg-config didn't work, assume that Freetype is in the default
    location.

2013-05-19-02
    Allow libcurl to be in a non-standard location on all platforms

    We didn't add CURL_CFLAGS to CLIENT_CFLAGS on all platforms, and didn't
    use CURL_LIBS at all, so if "pkg-config --libs" returned "-L... -lcurl"
    or even "/.../libcurl.a", it wouldn't work.

2013-05-19-03
    Allow OpenAL to be in a non-standard location on all platforms

    Similar to libcurl, we didn't use OPENAL_LIBS and assumed it was
    always "-lopenal".

2013-05-19-04
    Allow system libjpeg to be in a non-standard location

    It doesn't have pkg-config metadata (at least on Debian), so if the
    user doesn't override it, assume normal system paths.

2013-05-19-05 Find system zlib via user override, pkg-config or in standard locations

2013-05-19-06
    Look for system Vorbis, Opus and Ogg via pkg-config

    As usual, the order of precedence is: user override, pkg-config,
    or assume they're in standard locations.

    In particular, Opus isn't in the default search path on Debian.

2013-05-19-07 Find Speex via user override, pkg-config or default search path

2013-05-12-01
    Add support for the GNU/Hurd architecture

    [As with GNU/kFreeBSD, it's treated as "Linux": all three use the GNU libc
    and runtime linker, which is mostly what matters for ioquake3. -smcv]

    Bug-Debian: http://bugs.debian.org/679330
    Reviewed-by: Simon McVittie <smcv@debian.org>

2013-05-22-01
    Fix predicting touching items in CTF and 1FCTF

    In CTF, rail or plasma gun/ammo were not predicted for pickup depending on what team player is on. The rail and plasma values are the same as PW_REDFLAG and PW_BLUEFLAG.
    In 1FCTF, only neutral flag, BFG, and BFG ammo were predicted for pickup. WP_BFG is equal to PW_NEUTRALFLAG.

2013-05-24-01
    Remove RF_SUNFLARE from OpenGL2 renderer

    RF_SUNFLARE didn't do anything after commit "Merge Reaction renderer features, remove "#ifdef REACTION"s".

2013-05-24-02  Clarify comment for OpenGL2's RDF_NOFOG

2013-05-27-01 Fix Freetype build problems

2013-05-27-02
    Allow drawing sun in OpenGL1 renderer

    Removed #if 0 ... #endif around RB_DrawSun().
    Merged improvements and changes from OpenGL2 renderer.

2013-05-29-01  Suppress warning

2013-05-30-01
    fix some "\n"-related stuff

    add missing "\n"s to some Printf()-like calls (in Rend2)
    drop erroneous "\n"s from some Error()-like calls (in Rend2)
    drop erroneous "\n" from a Com_Error() call (in vm_sparc.c)

2013-05-30-02 add some noreturn annotations
2013-05-30-03 remove some redundant exit() calls
2013-05-30-04 remove some unused stuff

2013-05-30-05 make the fread() success-check code in Sys_RandomBytes() more secure

2013-05-30-06 modified: when using the condump command, do not say "dumped console text" prematurely, before trying to open the file

2013-05-30-07 reduce the amount of compiler warnings for variable shadowing
2013-05-30-08 drop some useless return statements
2013-05-30-09 clean up return statements a bit more

2013-05-30-10
    fix some OOB enumerator usages

    (should be no-op with usual compiler workings)

2013-05-30-11
    Catch more bad shader syntax cases

    Use to only ignore file in cases where both { and \0 were missing after shader name. Now ignore file when either are missing, such as "}\0".

2013-05-30-12 Fix null model axis disappearing if sky is in view

2013-06-02-01
    Fix setting COM_Parse current line number

    Fix initial off-by-one error.
    Count lines in /* */ comments and multi-line strings.
    Fix counting some lines twice if text has Unix newlines.

2013-06-02-02
    Check for shaders without closing brace

    Shaders without closing brace can eat shaders in other files.
    Pass depth to SkipBracedSection instead of reparsing text as it messed up parse line numbers.

2013-06-02-03 Improve warning for shader missing opening brace

2013-06-03-01
    Make COM_ParseWarning report starting line number of multi-line tokens

    COM_ParseWarning use to show last line number of multi-line string tokens, now shows starting line number.

2013-06-04-01 Allow recording VoIP in SP for demo commentaries

2013-06-04-02 Allow adjusting VoIP gain and mute during demo playback
2013-06-04-03 Allow adjusting VoIP gain and mute during SP demo playback

2013-06-10-01 Rate limit getchallenge

2013-06-11-01
    Don't try to fog flares with fogNum 0

    fogNum 0 means no fog. Shaders don't try to apply fog color if fogNum is 0.

    This was done to make things more consistent and fix a crash in iortcw MP using a user made map on GNU/Linux x86_64.

2013-06-18-01
    Only allow model meshes to have SHADER_MAX_VERTEXES - 1 vertexes

    The last index is used to check for buffer overflows. See RB_CheckOverflow and RB_EndSurface.

2013-06-18-02
    Fix IQM tess buffer overflow

    Set the variables that use tess.numVertexes after calling RB_CHECKOVERFLOW() as it may set tess.numVertexes to 0!

    Could cause visual issues and error "RB_EndSurface() - SHADER_MAX_VERTEXES hit".


2013-06-20-01  Fix r_speeds 4 in OpenGL2 renderer

2013-06-20-02
    Fix r_nocurves in OpenGL2 renderer

    Check r_nocurves in surface cull.
    While r_nocurves is enabled, don't use merged surfaces because merged curves would be renderer. (note: surface merging is enabled by r_mergeLeafSurfaces)

2013-06-20-03
    Fix r_mergeLightmaps 0 crashing OpenGL2 renderer

    tr.fatLightmapStep was 0 and caused modulus division by 0.

2013-06-26-01 no (done differently):  Prevent the skip of the glyph if it does not fit

2013-06-26-02
    Merge pull request #5 from morturp/patch-1

    Prevent the skip of the glyph if it does not fit

2013-07-04-01
    Free Team Arena fonts/fontImage_X.dat buffer

    Caused temp memory to be present all the time, so Hunk_Alloc ignored memory
low/high preference.

    May have caused other issues as well.

2013-07-07-01
    Fix getting servers from and being listed on id's q3 master server

    Use q3 master protocol when com_gamename is Quake3Arena (the default), otherwise use dpmaster protocol.

2013-07-08-01 (bug #5984) Unload renderer lib

2013-07-09-01
    SDL Mouse Button clean up

    Make 'b' variable an int so that key values more than 255 will work (not currently an issue in ioq3 afaik).
    Use SDL_BUTTON_* for easier transition to SDL2.
    (SDL2 doesn't have SDL_BUTTON_WHEELUP or SDL_BUTTON_WHEELDOWN, X1/X2 are different values.)

2013-07-11-01 Remove unused models from server_t

2013-07-12-01
    Initial Xcode workspace & project support (4.6.3).
    Updated .gitignore and ioquake3fe Xcode project.
    Added Retina-enabled QUAKE III logo icon files.
    Details in misc/xcode/xcode-readme.txt

2013-07-17-01 Fix the speex Xcode project since it was missing its header search path.

2013-07-17-02 Added "all game" and "all ioquake3" schemes to Xcode workspace so tha...

2013-07-17-03 no:  out seems to be unnecessarily large for one byte per pixel

2013-07-17-04
    Merge pull request #6 from morturp/patch-2

    out seems to be unnecessarily large for one byte per pixel

2013-07-17-05
    bug 5986 - Configure jenkins to spit out mac .app
    https://bugzilla.icculus.org/show_bug.cgi?id=5986
    Created make-macosx-app.sh to handle manually creating an app bundle from other scripts.
    Updated make-macosx.sh to create bundle with make-macosx-app.sh (TODO: make-macosx-ub.sh support).
    Updated Makefile to create bundle with make-macosx-app.sh and zip up the resulting ioquake3.app if ARCHIVE is defined.

2013-07-17-06 fix bug in make-macosx-app.sh with older shells
2013-07-17-07 make-macosx-app.sh using single '=' comparisons
2013-07-17-08 make-macosx-app.sh should use /bin/bash and not /bin/sh
2013-07-17-09 Updated Makefile to only build release OS X app bundles
2013-07-17-10 make-macosx-app.sh supports systems without libtool

2013-07-17-11 make-macosx-app.sh supports systems without libtool, part 2

2013-07-17-12 make-macosx-app.sh doesn't trust the output of 'which', so check for a hard-coded path

2013-07-18-01
    Another pass at the Mac OS X make scripts.

    Ironed out issues with generating an application bundle with universal
    binaries on supported systems. Fall back to bundling a single
    architecture when support for universal binary generation is not
    available. Tested on Mac OS X 10.5.8 (and 10.5 SDK).

2013-07-18-02 Fix make-macosx-app.sh to make bundle on non-Mac OS X platforms

2013-07-18-03 Makefile builds fall back to traditional archiving when Mac OS X application bundle generation fails

2013-05-06-01  Misc fixes to IBO code to correctly use sizeof(glIndex_t)

2013-07-21-01
    Fix Windows server history scrolling

    Update history position when CON_HistNext goes to input line, otherwise
    when going to previous a line is skipped.
    Don't let CON_HistPrev go to unused lines.

2013-07-21-02
    Add assignment below declarations otherwise compiling fails with msvc

    Signed-off-by: Zack Middleton <zturtleman@gmail.com>

2013-07-22-01
    Fix bind commands getting run when closing UI

    Introduced in commit "Add togglemenu command" bf2b04.

    Don't let UI key event changing key catcher affect bind parsing. Bind parsing itself will never change the key catcher.

    Example of issue: if mouse1 is bound to +attack when clicking Resume Game, player will shoot until releasing the mouse button.
    Mouse button should have to be released and pressed again before player will shoot.

2013-08-03-01
    Fix creating symlinks in make-macosx-app.sh

    Create symlink if arch name is found anywhere in info printed by file command, not only if arch name is the last word.

2013-08-03-02
    Fix text getting appended to vid_restart in command buffer

    I was getting unknown command "vid_restart-button2" warning on OSX when trying to use alt-return to toggle fullscreen.

2013-08-04-01 Remove 5 unused variables from make-macosx scripts

2013-08-16-01
    Fix OpenAL music stop issues using stream stop code

    S_AL_StopBackgroundTrack would sometimes generate AL errors.
    S_AL_MusicSourceFree needs to kill source or next track may have short looping buffer.

2013-08-16-02
    Fix "bind <key>" message for unbound keys

    "bind X cmd; unbind X; bind X" now says '"x" is unbound' instead of '"x" = ""'

2013-08-16-02
    Merge branch 'master' into sdl2

    Conflicts:
            code/sdl/sdl_input.c

2013-08-18-01 SDL2 libs for OSX, thanks to MAN-AT-ARMS
2013-08-18-02 Update prebuilt SDL2 libs for Windows

2013-08-19-01 More updates to SDL2 libs from MAN-AT-ARMS

2013-08-20-01 Update SDL2 headers... oops

2013-08-23-01  #6004: OpenGL2: Make any CGEN_LIGHTING_DIFFUSE stages use lightall shader.

2013-08-23-02  #5999: OpenGL2: Don't use lightall shader with deforms or adjustColorsForFog.

2013-08-23-03  Fix upside-down SSAO.

2013-08-25-01 Fix recursive crash when home path cannot be created

2013-08-29-01 Fix initial window position being top left

2013-09-01-01 Fix targetNum check in cgame's tcmd

2013-09-03-01
    Make cgame's tcmd use trap_SendClientCommand for "gc"

    gc command was forwarded to server after if wasn't recognized locally, but let's just send straight to server.

    (trap_SendConsoleCommand should of had a \n at end, but using trap_SendClientCommand makes more sense.)

2013-09-04-01 Bug #6021 Fix misuse of Sys_Mkdir (Joerg Dietrich)

2013-09-04-02
    Fix warning message in animation.cfg parsing functions

    Signed-off-by: Zack Middleton <zturtleman@gmail.com>

2013-09-04-03 Fix crash caused by too many surfaces in skin

2013-09-08-01
    Free bot client if cannot load bot

    Introduced by commit a57a5cfd9b5dcc51696777c67b275c55c5b4b452.

2013-09-15-01 Various fixes from Fuma

2013-09-16-01  #5979: Cubemap support for opengl2

2013-09-16-02  OpenGL2: Use RGBM instead of RGBE encoding for lightmaps.

2013-09-16-03  OpenGL2: Fix inaccurate RGBM calculation.

2013-09-16-03 Merge branch 'master' into sdl2
2013-09-16-04  OpenGL2: Speed up fog shader slightly.
2013-09-16-05  OpenGL2: Some shader cleanup

2013-09-17-01  OpenGL2: Fix for "unsupported framebuffer format" bug

2013-09-17-02  OpenGL2: reduce varying usage in lightall shader.

2013-09-19-01
    Fix UI parse message for menu files

    Missing a space after colon.

2013-09-20-01  OpenGL2: Disable GL_ARB_seamless_cube_map by default, caused huge frame drops on some hardware

2013-09-21-01
    Fix building sdl2 branch on travis-ci

    Install libsdl2-dev from a PPA.

2013-09-20-01 Don't set the window title twice
2013-09-20-02 Set com_minimized to 0 when the window is restored

2013-09-20-03
    Send key up events for the mouse wheel

    Previous versions of SDL would send SDL_MOUSEBUTTONUP events for the mouse wheel immediately following the corresponding SDL_MOUSEBUTTONDOWN event

2013-09-24-01  OpenGL2: Remove AGEN_FRESNEL(superceded by cubemap patch), and some small fixes and optimizations

2013-09-30-01
    Merge pull request #16 from cmf028/sdl2

    SDL2 fixes

2013-10-07-01  OpenGL2: default to RGBM lightmap, and add r_floatLightmap for old behaviour.

2013-10-08-01
    Revert "5097 - Menu corrupted on start (on IRIX)"

    Calling glClear( any bits ) in GL_SetDefaultState makes connect screen black using the proprietary NVidia driver on Windows and GNU/Linux.

    This reverts commit 92573270de98a20cd78842bd2043cfe07bc5b2e1.

2013-10-09-01
    Drop sounds starting with * before allocating sfx slot

    Causes handle 0 to be returned by S_RegisterSound.

2013-10-10-01  OpenGL2: Fix TCGEN_ENVIRONMENT stages not rendering correctly.

2013-10-14-01  OpenGL2: Clean up texmod calculations, and improve vertex animation handling.

2013-10-14-02  OpenGL2: Use an idea from ETXreal and separate world VBO into separate VBOs by shader.

2013-10-15-01  OpenGL2: Merge bsp surface structs into a single struct, and more cleanup.

2013-10-18-01
    Fix SDL2 losing event subsystem

    Quiting SDL Video or Joystick subsystem implies quiting the Event subsystem
in SDL2.
    SDL keeps track of number of init and shutdown calls for each subsystem.
    Shuting down video or joystick more or equal to number of times they're inited will lead to event shutdown.

    Toggling in and out of fullscreen or running in_restart twice causes SDL event subsystem to shutdown, making input not work.

    If the console is closed, IN_GobbleMotionEvents gets stuck in a loop. SDL_PeepEvents returns -1 when there is an error, but we assume non-0 means read more events.

    IN_ShutdownJoystick needs to check if joystick subsystem was inited before quitting it, otherwise we may cause SDL event subsystem to shutdown.

2013-10-19-01 Fix warning that SDL_GetKeyboardState return value is used non-const

2013-10-19-02
    Ignore -psn* arguments on Mac OS X

    Mac OS X adds an argument starting with "-psn" when launched using Finder, Dock,
    or a terminal using open command and not specifying arguments.

    It caused the opening videos to be skipped.

    This change mimics SDL 1.2.

2013-10-19-03 Use bundle icon on Mac OS X instead of internal 32x32 window icon

2013-10-20-01 Check #ifdef MACOS_X not #if MACOS_X

2013-10-28-01
    Clear more variables in CL_InitServerInfo

    Have cls.localServers use CL_InitServerInfo.
    Don't set cls.localServers netType to from.type, it's the wrong value.

    Note: server->visible is not cleared in CL_InitServerInfo, as stated by a comment below a place where CL_InitServerInfo is used.

2013-10-29-01 Support IQMs with joints and no poses

2013-10-29-02
    Add support for IQM int blend indices and float blend weights

    Integer blend indices are converted to bytes at load, ioq3 doesn't allow more than 128 joints.

    Heavily based on code by @zippers.

2013-10-29-03 IQM int/float vertex arrays were already swapped

2013-10-29-04 Fix IQM comments refering to IQM_BYTE instead of IQM_UBYTE

2013-10-29-05 Initialize blendIndexesType and blendWeightsType
2013-10-29-06  Merge last two commits into renderergl2

2013-11-02-01 Remove unused shader state code from tr_local.h
2013-11-02-02 Remove vertexLightmap from textureBundle_t, it's never qtrue

2013-11-02-03 no (different) (check):  Fix video recording sync drift (patch refactored but original author unknown

2013-11-02-04 Merge branch 'master' into sdl2

2013-11-03-01  OpenGL2: Reduce glsl shader count by using a uniform to disable textures.

2013-11-04-01  OpenGL2: Revisit fragment tangent space calculation, and remove tangent space lighting.

2013-11-04-02  OpenGL2: Some small shader optimizations.

2013-11-05-01  OpenGL2: Reimplement soft overbright to avoid a framebuffer blit.

2013-11-05-02  OpenGL2: Prefer VBO/IBO sizes of around 4MB.

2013-11-06-01 no (different):
    Fix running if built on OS X 10.9

    strncpy with in == out causes signal 6 if built on OS X 10.9.
    (If built on older OS X versions, the game works on 10.9 though.)

    It was happening in COM_StripExtension during map load.

2013-11-07-01  OpenGL2: Small optimizations and comments in world VBO creation and surface merging.

2013-11-08-01  OpenGL2: Remove srfTriangle_t, and use glIndex_t instead.
2013-11-08-02 Fix VM FOpenFile( FS_READ ) files seeking twice in FS_Seek
2013-11-08-03 Remove unused variable baseOffset from fsh[]

2013-11-08-04
    Support FS_SEEK_END and negative offset for zipped files in FS_Seek

    Use FS_SEEK_END in sound code instead of working around it.
    If FS_SEEK_SET and going to current position, just return.

2013-11-08-05 Remove old comment that FS_Seek doesn't work on zipped files
2013-11-08-06 Remove function prototypes for non-existant Sys_* DLL functions

2013-11-08-07 Merge branch 'glindex_size_fixes' of https://github.com/inolen/ioq3 into inolgen-glindex_size_fixes

2013-11-09-01
    Fix flares being invisible after vid_restart

    flareCoeff was only set if r_flareCoeff cvar was set as modified.
    Cvars are set as modified when created or changed.

2013-11-10-01
    Make OpenAL buffer management work on OS X

    Don't assume we have unlimited OpenAL buffers.
    Detach buffers from sources by setting AL_BUFFER to 0. Cannot delete buffers on OS X immediately after alSourceUnqueueBuffers.
    Free unprocessed stream and music buffers.
    Free unused sfx buffers when sound file exists and fails loading into OpenAL (though I haven't seen it fail).

2013-11-10-02
    Fix restoring loop sound position on OS X

    The default OpenAL library on OS X errors AL_INVALID_VALUE for AL_SEC_OFFSET if source isn't playing.

2013-11-10-03
    Fix cinematics often being silent on OS X

    If OpenAL source isn't playing, often what happens is: queued buffers is 0 and processed buffers is non-0.
    S_AL_StreamUpdate won't play the steam if queued buffers 0.
    So start the stream in S_AL_RawSamples.

2013-11-10-04 Remove unused cvar_t variable cl_trn
2013-11-10-05  Fix comparing unsigned values to < 0 in gl2

2013-11-12-01  OpenGL2: Calculate bitangent in shader, and store normal/tangent as normalized byte arrays.

2013-11-17-01 Merge branch 'master' into sdl2

2013-11-19-01  OpenGL2: Match glsl data type names: matrix_t -> mat4_t, vec*i_t -> ivec*_t

2013-11-19-02  OpenGL2: Match glsl data type names: matrix_t -> mat4_t, vec*i_t -> ivec*_t

2013-11-19-03 Merge branch 'HEAD' of https://github.com/ioquake/ioq3.git

2013-11-20-01  #6059: OpenGL2: Read depths from resolve fbo when msaa is on in RB_TestFlare().

2013-11-20-02
    OpenGL2: Use RGBA16F format for HDR.

    RGB16F is not 4-byte aligned and not supported by certain hardware.

2013-11-20-03
    End current draw surface before drawing cinematic

    Fixes drawing StretchPic *before* CIN_DrawCinematic resulting
    in cinematic being drawn before the StretchPic.

2013-11-21-01
    Fix signal 6 in S_Base_StartBackgroundTrack on OS X 10.9

    In S_UpdateBackgroundTrack, s_backgroundLoop was passed to
    S_Base_StartBackgroundTrack and tried to copy to itself using Q_strncpyz.

2013-11-21-02
    Make kamikaze timer loops use level.num_entities instead of MAX_GENTITIES

    Optimization. Many other loops use level.num_entities, there was no
    special reason that MAX_GENTITIES was used for these.

2013-11-22-01
    Update and rename README to README.md

    adding analytics, I'm ready for DevHC to get upset.

2013-11-23-01 Improve github interperation of README.md
2013-11-23-02 Add header for standalone game licensing

2013-11-25-01  Silence warnings about unused static functions in opengl2

2013-11-25-02
    Updating the tracking code properly.

    Hopefully this new code will track properly.

2013-11-26-01 Merge branch 'master' into sdl2

2013-11-26-02
    Readd backspace char event for UI VM text fields

    UI VMs expect a backspace char event, but sdl2 branch only was only sending a key event.
    Revert cl_keys.c to master branch (it would cause backspace to happen twice in console).

2013-11-29-01 #6069: Remove md4 model support.

2013-11-30-01
    OpenGL2: Remove redundant GLS_* enum.

    Thanks Xycaleth for pointing out.

2013-11-30-02 Remove R_AddAnimSurfaces and R_MakeAnimModel prototypes

2013-12-01-01  Fix glsl DEFORM_BULGE calculation

2013-12-01-02
    Merge pull request #21 from cmf028/master

    Fix glsl DEFORM_BULGE calculation

2013-12-02-01
    Add cvar_modified command

    Based on cvarlist command, it only lists modified cvars.

2013-12-07-01
    Fix white flash levelshot bug in OpenGL1

    If you tried to draw the last loaded image, gl texture 0 (which is appearently white)
    was used because renderer thought the image was already bound.

    Why OpenGL1 renderer binds texture 0, I have no idea. It's been removed from OpenGL2.

2013-12-07-02 r_noborder changes require a restart
2013-12-07-03 Add latch to r_centerWindow and r_allowResize

2013-12-07-04 Support spatialized raw streams in base sound, e.g. for VoIP

2013-12-07-05 Have ui_test cmd in missionpack ui return qtrue

2013-12-08-01 Fix checking if MP dylibs exist in make-macosx-app.sh
2013-12-09-01 Fix some file paths for msvc 2008

2013-12-09-02  OpenGL2: Support GL_ARB_vertex_type_2_10_10_10_rev for normals/tangents/lightdirs

2013-12-09-03 Fix crash in OpenAL when no input devices are available

2013-12-13-01  OpenGL2: Small glsl shader optimizations, fixes, and cleanup.

2013-12-15-01
    Fix playback of stereo sounds in Base sound system

    Already works correctly in OpenAL.

2013-12-16-01  Don't forget to install the renderer2 binary if USE_RENDERER_DLOPEN=0

2013-12-17-01  #6077: OpenGL2: Add r_ignoreDstAlpha.

2014-01-10-01 Fix PNG tRNS length checks
2014-01-10-02  Make GL2 MDR code use R_VboPackNormal for normal

2014-01-11-01
    Remove extra client_t::csUpdated[] slot

    sv.configstrings[] is limited to 0 to MAX_CONFIGSTRINGS-1, make client_t::csUpdated[] the same.

2014-01-11-02
    fixed formatting of a few GLSL float constants
    remove unneeded version number from texturecolor shader
    call GLSL_VertexAttribPointers after attribute arrays have been enabled

2014-01-12-01 Fix music studder in base sound when starting silent cinematics

2014-01-12-02
    Fix demoName Com_sprintf size larger than buffer

    Maybe this is why demoName is a static global with the comment 'compiler bug workaround'?

2014-01-12-03
    Fix GL2 deluxemap 0,0,0 to 127,127,127

    Checked if first byte was 0 twice instead of checking second byte.

2014-01-12-04 Don't read clc.voipIncomingSequence until range checked sender

2014-01-12-05
    Remove unused code path from S_Base_StartBackgroundTrack

    We make sure intro isn't NULL. Then if loop is NULL, set it to intro.

2014-01-12-06
    Merge pull request #26 from andreyv/master

    Include opengl2 client in make copyfiles if USE_RENDERER_DLOPEN=0

2014-01-12-06   Don't create images/framebuffers that won't be used, and add checks before use.

2014-01-14-01  don't call va each frame in GLSL_VertexAttribPointers

2014-01-14-02
    Merge pull request #30 from inolen/nova_fix

    don't call va each frame in GLSL_VertexAttribPointers

2014-01-16-01
    Fix OpenGL2 non-HDR map surface over brighting

    Vertex lit map surfaces were saturating to white when
    r_mapOverBrightBits was increased and r_hdr was disabled.

    Now the color is normalized like lightmaps and lightgrid
    when r_hdr is disabled. Which is the same as OpenGL1.

    Noticeable on misc_model trisoup.

2014-01-23-01 don't clear screen during CA_LOADING and CA_PRIMED

2014-01-25-01 Check for buffer overflow for rail/lightning surfaces

2014-01-27-01 Fix check for jpeg_mem_ to work with libjpeg-turbo

2014-01-27-02
    Merge pull request #34 from robo9k/issue/libjpeg-turbo

    Fix check for jpeg_mem_ to work with libjpeg-turbo

2014-01-27-03 Try default OpenAL driver if user set one fails to load

2014-02-01-01 restart the renderer after the hunk mark has been set

2014-02-01-02
    Merge pull request #33 from inolen/widescreen_clear_fix

    don't clear screen during CA_LOADING and CA_PRIMED

2014-02-01-03
    Merge pull request #35 from inolen/no_renderer_restart

    don't restart renderer in SV_SpawnServer unless client running dedicated

2014-02-07-01 Upgrade opus 1.0.2 -> 1.1
2014-02-07-02 Upgrade opusfile 0.2 to 0.5

2014-02-07-03
    Upgrade libogg 1.3.0 to 1.3.1

    This is a minor bugfix release with few changes

2014-02-07-04 When cross compiling on mingw32, make sure it finds a CC

2014-02-07-05 Merge branch 'features/upgrade-opusfile-0.5' of https://github.com/xhairball/ioq3 into opus_update

2014-02-07-06
    Merge branch 'features/upgrade-opus-1.1' of https://github.com/xhairball/ioq3 into opus_update

    Conflicts:
            Makefile

2014-02-07-07
    Merge pull request #41 from xhairball/fixes/check-cc-when-cross-compiling-mingw32

    When cross compiling on mingw32, make sure it finds a CC

2014-02-08-01 Merge branch 'master' into sdl2
2014-02-08-02 Add vorbis 1.3.4 build support

2014-02-08-03
    Upgrade from libcurl 7.15.5 (2006-08-07) to 7.35.0 (2014-01-29)

    Note: This uses the generic curlbuild.h because it is used by multiple platforms.
    A system curl would have a configure generated one.

    The libraries for win32 and win64 were cross compiled with these options:

      --disable-shared --enable-static --disable-ares --enable-http \
      --enable-ftp --disable-ldap --disable-ldaps --disable-rtsp \
      --disable-dict --disable-file --disable-telnet --disable-tftp \
      --disable-pop3 --disable-imap --disable-smtp --disable-gopher \
      --enable-ipv6 --without-ssl \
      --disable-manual --disable-libcurl-option

    This effectively enables only HTTP and FTP protocol support.

2014-02-08-04
    Remove unnecessary NEED_VORBIS since you have USE_CODEC_VORBIS

    Thanks zturtleman for catching this

2014-02-08-05
    Clear referenced paks when disconnecting

    After playing Team Arena, if you switch to Q3A and try to play a demo with
    cl_allowDownload enabled it would print "Need Paks: blah blah" and not play
the demo.

2014-02-09-01 Merge branch 'master' into features/upgrade-curl-7.35.0

2014-02-09-02
    Fix sending pk3 download error messages to clients

    Disabled in e52a492f615e1245d6d22a84d2cc100c6d2f9f88.

2014-02-10-01 Add support for x86_64 cross compiling in Travis CI

2014-02-13-01
    Merge pull request #45 from xhairball/features/upgrade-curl-7.35.0

    Upgrade libcurl to the latest release (7.35.0).

2014-02-13-02  OpenGL2: Set RGBM to use a multiplier of 1, and only use it with HDR lightmaps.

2014-02-14-01  OpenGL2: Fix bug in ColorToRGBM().
2014-02-14-02  OpenGL2: Oops, set lightmap alpha to 1.

2014-02-14-03
    Rebuilt Windows libcurl-7.35.0 static libraries

    Fix linking with mingw32.
    Enable FTPS and HTTPS.

2014-02-15-01  OpenGL2: Fix rendering when r_hdr = 0 and r_floatLightmap = 1

2014-02-18-01 Merge branch 'master' into sdl2
2014-02-20-01  OpenGL2: Remove and force r_softOverbright.

2014-02-22-01 Replace deprecated alDopplerVelocity with alSpeedOfSound per OpenAL 1.1 spec

2014-02-22-02
    Remove references to alDopplerVelocity

    Let's load driver even if it doesn't have the deprecated alDopplerVelocity.

2014-02-22-03  OpenGL2: Fix pshadows for MDR models

2014-02-22-04 Fix colored name padding and allow IPv6 address to fit in output of 'status' command

2014-02-22-05 Release netowrk bindings on shutdown

2014-03-02-01 Fix native trap_BotMutateGoalFuzzyLogic
2014-03-02-02 Fix s_alDopplerSpeed default value

2014-03-03-01  OpenGL2: Minor GLSL shader improvements.

2014-03-04-01  OpenGL2: Add normalScale and parallaxDepth stage keywords and helper cvars.

2014-03-04-02  OpenGL2: Set default normal/specular in RE_RegisterShaderFromImage

2014-03-04-03
    Merge pull request #57 from MAN-AT-ARMS/specularScale

    OpenGL2: Set default normal/specular in RE_RegisterShaderFromImage

2014-03-07-01
    Don't wash out HDR vertex lite surfaces in OpenGL2

    Vertex lite surfaces being brighter than light maps looks bad,
    they're meant to look the same. Especially in ET, which mixes
    them fequently. It's noticeable in Q3 too though.

    BSP lightmaps (i.e. not external HDR lightmaps) use
    R_ColorShiftLightingBytes, now *Floats (used by vertex colors)
    has the same behavior.

    This may be a problem for HDR lightmaps, as the RGB will always be
    scaled to 0.0 to 1.0 range.

    I had enabled this for non-HDR before, but now HDR needs it too.

2014-03-08-01 Merge branch 'master' into sdl2
2014-03-08-02 Update SDL2 to 2.0.2

2014-03-09-01 Update SDL 1.2.15 to Revision 8040

2014-03-10-01
    Fix error handling in R_ParseSpawnVars

    When R_GetEntityToken returns qfalse it resets pointer for parsing, by
    R_ParseSpawnVars not returning qfalse it could cause an infinite loop.

    Also add newlines to printfs.

2014-03-10-02  Don't say cubemap is outside lightgrid 6 times

2014-03-10-03 no (different - double check):
    Fix R_GetEntityToken ending prematurely

    If spawn var key or value is "" it caused R_GetEntityToken (available to
    cgame, used by opengl2) to stop parsing, whereas game VM would continue.

    Changed it to match parsing used for game VM
    (see G_GET_ENTITY_TOKEN in code/server/sv_game.c).

    The map poq3dm5 has a "wait" key with value "".

2014-03-10-04 Fix typo in animMap and videoMap warnings

2014-03-11-01
    Parse q3map_sunExt in OpenGL1 too

    Used for drawing sun, which is supported by both OpenGL1 and OpenGL2.
    OpenGL2 already parses it.

2014-03-11-02
    Don't mix sfx with NULL soundData

    Caused a crash. Already done for looping sounds.

2014-03-11-03
    DMA 44100Hz needs more memory for sound buffers

    It doubles the size of the data compared to the default (22050),
    so increase the buffer automatically. Likewise, decreasing speed
    doesn't need as much (though that doesn't really matter).

2014-03-12-01 Bunch of comment fixes

2014-03-12-02
    Merge pull request #60 from smokin-guns/master

    Bunch of comment fixes

2014-03-15-01 Don't crash when fail to create SDL window

2014-03-16-01  OpenGL2: Parallax corrected cubemap (cheaper trick)

2014-03-17-01
    Fix multisampling on X11

    Setting SDL_GL_ACCELERATED_VISUAL was disabled for ioq3 SDL 1.2
    for other reasons. However, it causes creating GL context to fail
    if multisampling is enabled on X11 for both SDL1.2 and SDL2.

    Tested using nVidia proprietary driver on Debian 7.

2014-03-18-02 Fix ctrl-c etc codes for edit fields

2014-03-18-03
    Revert "DMA 44100Hz needs more memory for sound buffers"

    This reverts commit 0e6632f464c08dcb76f26a52f33d97228e64fda1.

    Cause crashes if com_soundMegs is 32.

2014-03-18-04
    Fix FS_FOpenFileReadDir non-zero file handle when file not found in pk3

    If a pk3 search path is passed to FS_FOpenFileReadDir, a non-zero
    file handle is returned if file is not found. This causes incorrect
    behavior in FS_ReadFileDir (when a pk3 search path is passed in)
    which only checks file handle, not length, for seeing if file exists.

    I don't know of any issues in ioq3 caused by this.

2014-03-19-01  #6095: OpenGL2: Use areamask and leaf cluster for PVS when VIS is missing.

2014-03-24-01
    Merge pull request #59 from MAN-AT-ARMS/sdl_1215_hg

    Update SDL 1.2.15 to Revision 8040

2014-03-24-02
    Merge pull request #55 from MAN-AT-ARMS/status_command

    Fix colored name padding and allow IPv6 address to fit in output of 'status' command

2014-03-24-03
    Merge pull request #44 from xhairball/features/add-vorbis-1.3.4

    Add vorbis 1.3.4 support

2014-03-24-04
    Merge pull request #56 from MAN-AT-ARMS/net_stop

    Release network bindings on shutdown

2014-03-24-05
    Remove unused extern qboolean charSet

    No variable even exists.

2014-03-24-06
    Remove -falign-loops and -falign-jumps from Makefile

    Clang warns and errors because of them on various platforms.

    Based on pull request #43 by @xhairball.

2014-03-24-07 Fix compiling game VM with OBSTACLEDEBUG defined
2014-03-24-08 Merge branch 'master' (early part) into sdl2
2014-03-24-09 Skip merging sdl1.2 commit into sdl2
2014-03-24-10 Merge branch 'master' into sdl2
2014-03-24-11 Update SDL2 to 2.0.3

2014-03-24-12
    Merge pull request #65 from MAN-AT-ARMS/sdl2_203

    Update SDL2 to 2.0.3

2014-03-24-13 Add misc/msvc12/ to support Microsoft Visual Studio 2012 Express Edition

2014-03-24-14
    Merge pull request #63 from kungfooman/visualstudio

    Add misc/msvc11/ to support Microsoft Visual Studio 2012 Express Edition

2014-04-07-01 Add MSVC SDL 1.2.15 Revision 8040 import libs

2014-04-16-01  OpenGL2: Remove sRGB support, replace with gamma cvars.

2014-04-16-02 Rebuilt MSVC SDL 1.2.15 Revision 8040 import libs

2014-04-22-01  OpenGL2: Remove misleading documentation for gamma cvars.

2014-05-01-01
    Fix cg.skulltrails out of bounds access in Team Arena Harvester mode

    In Team Arena's Harvester mode, players corrupt your memory from beyond
    the grave. Gib the players to stop the corruption!

    CG_PlayerTokens is called for player entities, including corpses.
    The entity number is used for the index in cg.skulltrails which only has
    MAX_CLIENTS elements. This results in incorrect memory being overwritten
    for corpse entities (as the entity number is >= MAX_CLIENTS).

    So limit skull trails to valid entities (entity number < MAX_CLIENTS).

2014-05-06-01
    Make R_LerpTag return qfalse if MDR tag does not exist

    Elite Force SDK has trap_R_LerpTag return void, so this shouldn't cause issues for iostvef.
    Allows new games to check if a tag exists in a MDR model.

2014-05-07-01 Switched runtime library to Multithreaded DLL to fix build on VS2012.

2014-05-07-02
    Merge pull request #69 from RobertoEstrada/master

    Switched runtime library to Multithreaded DLL to fix build on VS2012.

2014-05-12-01
    Don't install libvorbis-dev on Travis

    The in-tree copy of vorbis is used. No reason to install the package anymore.

2014-05-12-02 Merge branch 'features/add-x86_64-travis-ci-support' of github.com:xhairball/ioq3

2014-05-18-01
    Fix always switching back to mgun in Q3 controls menu

    Caused by 120e296a74b0317f29d7f516d904bdc70f71b006.

2014-05-18-02
    Fix Gauntlet barrel axis in UI

    UI's PositionRotatedEntityOnTag is different than CGame's and
    UI has switched pitch/roll for Gauntlet/BFG axis to get it to
    look like /close to/ how it looks in CGame.

    Making UI use the same *PositionRotatedEntityOnTag and axis as
    CGame fixes the Gauntlet blade being wobbly in controls menu.

2014-05-19-01
    Disable key repeat if key catcher is 0

    SDL1.2 branch disables key repeat when key catcher is 0.
    Presumably to prevent binds from executing multiple times.

    SDL2 replaced being able to disabled key repeat using SDL_EnableKeyRepeat
    with a non-zero repeat value in the key event.

2014-05-19-02
    Try to fix Travis CI MinGW builds

    Listing i686-w64-mingw32-gcc as a compiler stopped working.
    Travis tries to print version before installing it.

    $ i686-w64-mingw32-gcc --version

    /home/travis/build.sh: line 201: i686-w64-mingw32-gcc: command not found

    The command "i686-w64-mingw32-gcc --version" failed and exited with 127 during setup.

2014-05-25-01
    Fix potential out of bounds access caused by CM_GridPlane

    Coverity doesn't care if there is a warning, out of bounds access is bad.

2014-05-25-02
    Don't use memset with non-zero value to fill ints

    Coverity reported using value -2 as a bad memset. Really doesn't make sense
    when filling ints and not bytes too.

2014-05-25-03
    Fix potential buffer overflow in PS_ReadPrimitive

    Found by Coverity.

2014-05-25-04
    Fix unchecked buffer size issues in l_script.c and l_precomp.c

    Found by Coverity.

2014-05-25-05
    Fix max bans range check in SV_AddBanToList

    Adding too many bans would write out of bounds. Found by Coverity.

2014-05-25-06
    Have OpenGL2 "map $lightmap" check for NULL tr.lightmaps too

    Zero length lightmap lump will have NULL tr.lightmaps.

    OpenGL1 already has this check, because r_vertexLight 1
    would crash Team Arena. OpenGL2 does not disable loading lightmaps
    when r_vertexLight is 1 though, so it does not have that issue.

2014-05-25-07
    Fix potential buffer overflow caused by long tcMod args

    Found by Coverity.

2014-05-25-08
    Fix OOB access in CM_EdgePlaneNum without erroring in CM_GridPlane

    I changed warning to error in 9d74227559d46b85d0c43d395cd280d3de7ae8f4,
    which broke JA's mp/ctf4 map and probably others.

2014-05-27-01
    Fix potential OOB in Windows Dedicated TTY CON_Show

    Found by Coverity.

2014-05-27-02  OpenGL2: Reimplement MD3 tangent space calculation.

2014-05-27-03  OpenGL2: Really obvious optimization to previous commit.

2014-05-29-01 Fix an invalid null deref check in the slider code.

2014-06-03-01 Merge branch 'master' (early part 1) into sdl2
2014-06-03-02 Skip merging a SDL 1.2 commit into sdl2
2014-06-03-03 Merge branch 'master' (early part 2) into sdl2
2014-06-03-04 Skip merging a SDL 1.2 commit into sdl2

2014-06-03-05
    Merge branch 'master' into sdl2

    Conflicts:
            .travis.yml

2014-06-10-01
    OpenGL2 don't try to dlight surfaces that had all dlights culled

    In the renderers, dlightbits are never cleared from world surfaces.
    The dlight image does not repeat, so if it draws on extra surfaces it's
    not visible.

    However if using a repeating image (tr.defaultImage instead of tr.dlightImage);

      * In OpenGL1 image is only drawn on surfaces close to dlight origin.
      * In OpenGL2 image is draw on surfaces clearly outside the dlight radius, including past non-dlighted surfaces.

    It seems there was a similar issue with pshadowBits. So update surface
    dlightBits even if 0, like already done for pshadowBits. This causes
    only surfaces close to origin to be affected. (Though it is a little
    farther than in OpenGL1.)

    I have no idea why this isn't a problem in OpenGL1.

2014-06-17-01
    Fix SkipRestOfLine going past end of string

    If string data starts with a 0 (string terminator), don't skip over it at p++.

    Not causing any problems in ioq3 as far as I know.

2014-06-19-01 Remove unused array joy_pressed

2014-07-03-01 Remove unused cvar in_joystickDebug
2014-07-03-02 Fix overstrike/insert logic being reversed in q3_ui

2014-07-12-01
    Don't draw client console buffer past top of screen

    Thanks @Pan7.

2014-07-13-01
    Restore drawing a cut off client console line in 1920x1080

    The text lines don't meet at top of the sceen in 1920x1080, restore
    drawing a cut off line across the top. In 640x480 this line isn't seen
    at all. This is still better then trying to draw twice as many lines
    than are actually seen (the way it was before the last commit).

2014-07-15-01
    Fix fast-math optimize flag for MinGW x86_64 build

    Found by /dev/humancontroller.

2014-07-18-01 sayto cmd with player name completion

2014-07-20-01 -ffast-math for msvc

2014-07-20-02
    Merge branch 'pkg-config' of github.com:smcv/ioq3 into master

    Conflicts:
            Makefile

2014-07-20-03 Fix up vorbis handling in Makefile

2014-07-20-04
    Allow overriding external opus libs/cflags in Makefile

    Pointed out by @MAN-AT-ARMS.

2014-07-20-05 Fix compiling on Linux Mint
2014-07-20-06 Allow user override of cURL, OpenAL, and SDL libs/cflags

2014-07-22-01  OpenGL2: Replace R_MipMapsRGB() with faster version.

2014-07-26-01
    Don't load external GLSL files by default

    External GLSL should probably only be used for development testing,
    not released products. The GLSL files are tied to the code, and the
    code changes some what often.

    Fixes using OpenArena 0.8.8 which has incompatible GLSL files in a pk3.

2014-07-26-02
    Don't use -mwindows with Clang on Windows

    Thanks to stigmha for pointing out this doesn't work in Windows.

2014-07-31-01 guard against out-of-bounds jump table targets

2014-08-01-01  OpenGL2: Add fourth cascade for sun shadows, and adjust sun shadow cvar defaults.

2014-08-02-01  OpenGL2: Remove R_MipMap() and R_MipMap2(), and fix gamma conversion in R_MipMapsRGB()

2014-08-02-02  OpenGL2: Fix a glsl compile error on old hardware with r_shadowFilter 0.

2014-08-25-01 Fix assorted warnings

2014-08-25-02
    Merge branch 'master' into sdl2

    Conflicts:
            Makefile
            code/renderergl2/tr_image.c

2014-08-25-03 Fix OSX build

2014-08-26-01 Add SDL libraries to the builds
2014-08-26-02 added systemd unit for easier server-deployment

2014-08-26-03 removed a few defaults to make it completely usable out of the box

2014-08-26-04
    Fix binding KP_NUMLOCK

    Restore mapping SDL numlock to quake3 numlock.

2014-08-27-01
    Get clipboard data from SDL

    This makes pasting in client console and UI edit fields work on X11 and OS X.

    Sys_GetClipboardData is only used by client, so returning NULL in dedicated is fine.

2014-08-27-02 Bullshit change to test jenkins configuration
2014-08-27-03 Fix some warnings

2014-08-27-04 There have been 0 days since the last compiler warning

2014-08-27-05 removed absolute path to binary, removed sv_pure parameter
2014-08-27-06 Add cppcheck stage to jenkins script
2014-08-27-07 Link instead of copy
2014-08-27-08 Show environment variables from jenkins
2014-08-27-09 Use scan-build when invoking clang

2014-08-27-10
    Merge pull request #80 from dictvm/master

    added systemd unit for easier server-deployment

2014-08-27-11 Moved the systemd to /misc/linux

2014-08-27-12
    Remove unused functions from null_main.c and null_input.c

    Sys_mkdir is suppose to have a capital M, which is also in null_main.c.

2014-08-27-13 Fix incorrect strncat usage in CL_ServerInfoPacket

2014-08-27-14
    Fix incorrect rgbGen const reading uninitialized memory

    If ParseVector fails, color isn't fully set.

2014-08-27-15
    Remove a numIboIndexes=0 that is not read from GL2 tr_bsp.c

    numIboIndexes is set to 0 inside the loop for each surface. Does not need to be set before loop.

2014-08-28-01 Only run scan-build on one of the clang builds

2014-08-28-02
    Don't scale cinematic time by timescale twice

    Reported by Ensiform.

2014-08-28-03
    Add ColorIndexForNumber macro replacing '& 0x07'

    Makes it easier to add more colors.

2014-08-28-04 SDL 2 scroll/caps/num lock keys send KEYUP event when key is released

2014-08-28-05 Port COM_ParseExt fixes to CommaParse

2014-08-29-01 Use ColorIndexForNumber in Con_DrawSolidConsole

2014-08-29-02
    Fix 6155: OpenGL2: some shader stages remains visible through fog volumes

    Fix CalcFog in generic_vp.glsl to fog fogged surfaces.
    Now it's the same as CalcFog in fogpass_vp.glsl.

    Fixes shaders that use adjustColorsForFog. Impact wallmarks, blood sprites, flame textures and so on.

2014-08-30-01 Fix a few warnings

2014-09-01-01 Fix cgame warnings
2014-09-01-02 Fix ui warnings
2014-09-01-03 Fix game warnings
2014-09-01-04 Fix client warnings

2014-09-01-05 Suppress warning of (deliberate) null pointer deference

2014-09-01-06 Fix renderergl1 warnings
2014-09-01-07  Fix renderergl2 warnings
2014-09-01-08 Fix more warnings

2014-09-01-09 Actually, that's not suppressing, that's changing behaviour

2014-09-01-10 Coverity travis integration experiment
2014-09-01-11 Fix .travis.yml indentation

2014-09-05-01 Add USE_RENDERER_DLOPEN note to README
2014-09-05-02 Fix screwed up whitespace in README

2014-09-09-01 Fix possible division by zero in S_PaintChannelFrom16_altivec

2014-09-09-02
    Merge pull request #81 from MAN-AT-ARMS/sndmix_altivec

    Fix possible division by zero in S_PaintChannelFrom16_altivec

2014-09-09-03 Change default value for s_alDopplerSpeed
2014-09-09-04 Fix building with curl on Linux PPC and Sparc

2014-09-09-05
    Merge pull request #85 from MAN-AT-ARMS/curl_fixes

    Fix building with curl on Linux PPC and Sparc

2014-09-09-06
    Merge pull request #84 from MAN-AT-ARMS/openal_speedsound

    Change default value for s_alDopplerSpeed

2014-09-09-07
    Merge pull request #29 from inolen/shader_tidying

    misc shader fixes

2014-09-11-01
    Fix binding 'context menu' key using SDL2

    SDL 1.2 converted Windows' VK_APPS and X11 XK_Hyper_R to SDLK_MENU.
    SDL2 has it as a separate SDLK_APPLICATION key, so convert it to K_MENU too.

2014-09-11-02
    Fix Windows key bind name on non-Mac using SDL2

    SDL 1.2 sends SDKL_*META (command) and SDLK_*SUPER (windows key).
    SDL2 sends SDLK_*GUI for both.

2014-09-20-01
    Don't add duplicate resolutions to r_availableModes

    SDL can give the same resolution with different refresh rates.
    The refresh rate isn't used, so only add resolution to mode list once.

2014-09-26-01 Use correct type for thinktime
2014-09-26-02 Add facility to describe cvars

2014-09-27-01 Add function for clearing global shader instead of duplicating the code

2014-09-29-01
    Remove r_softOverbright from opengl2-readme.txt

    The cvar was removed and forced enabled.

2014-09-29-02  OpenGL2: Don't segfault if r_ext_multitexture is disabled

2014-10-03-01 Add mingw prefix for cygwin32 and mingw32

2014-10-07-01  OpenGL2: Better BSP surface merging.

2014-10-13-01  Correct too many parameters in q3gl2_sun description in docs.

2014-10-14-01  OpenGL2: VBO cleanup.
2014-10-14-02  OpenGL2: Vertex array object support.
2014-10-14-03  OpenGL2: Reduce redundant GL calls.

2014-10-15-01  OpenGL2: Fix invalid texture parameter.
2014-10-15-02  OpenGL2: Interleave vertex data for static MD3s.

2014-10-15-03  OpenGL2: Fix missing surfaces with r_mergeMultidraws 2.

2014-10-15-04  Fix a bug in previous commit.

2014-10-16-01  OpenGL2: Bit of multidraw optimization.

2014-10-23-01  OpenGL2: Fix corrupt models.

2014-10-23-02 a VM for ARMv7l

2014-10-26-01 qcurl_multi_add_handle error check

2014-10-27-01  OpenGL2: Speed up tonemap shader.

2014-10-28-01  OpenGL2: Change normal/tangent vertex encoding.

2014-10-27-01
    Add missing EV_USE_ITEM15 cases

    Add EV_USE_ITEM15 to cg_event.c and ai_dmq3.c for consistency.

2014-10-27-02
    Fix pid file ignoring user set fs_homepath

    Create pid file in fs_homepath instead of (always) default homepath.
    If not manually set, fs_homepath is set to Sys_DefaultHomePath().

2014-10-29-01
    Always use GL_Cull to change cull state

    Manually changing cull state can cause later GL_Cull calls to not change
    the cull state.

2014-11-03-01  OpenGL2: Support half floats for texcoords and vertex colors.

2014-11-04-01  Remove accidentally added increment.

2014-11-07-01
    Clear window buffer when it's created

    When starting the game in windowed mode, the window buffer used whatever
    was on the screen before running the game. Kind of like you could see
    through the window, but it doesn't update what happens behind it.

    It makes it look like something is broken or non-responsive.

    So clear the window opengl buffer to black.

    Credit to theinvsblman for the code.

2014-11-11-01
    OpenGL2: remove lightmap support from generic glsl shader.
    This path was barely used and doing this compiles fewer shaders.

2014-11-11-02  OpenGL2: Add support for parallax occlusion mapping.

2014-11-14-01  OpenGL2: Bit more parallax optimization.

2014-11-16-01
    Correct a few OpenGL variable types

    Affectly no change for desktop OpenGL.
    Use correct types for OpenGLES support.

2014-11-16-02
    Remove unfinished OpenGL display list code

    It seems unlikely anyone is going to do anything with this aside from stub
    it out in OpenGLES ports.

2014-11-16-03
    Don't set fog image border color

    GL1's R_CreateImage sets GL texture to 0 before it ends, so border color is not
    applied to the fog image. GL_CLAMP is not used for fog image (in either renderer),
    so it would presumably not be used even if applied to the fog image.

2014-11-16-04
    Fix stencil shadows not drawing if has 500 or more vertexes

    Stencil shadow is not drawn if a mesh, or multiple meshes with the same
    entity and shader, have more than 500 vertexes. The issue is caused by storing
    the projected positions in the tess vertex buffer. Use a new array instead.

2014-11-21-01  OpenGL2: Ensure tess VAO is bound before using it.

2014-12-01-01  OpenGL2: Fix face culling.

2014-12-01-02 no (different) check:
    Fix saving/loading glyph 255 in RegisterFont

    The glyph for character 255 (lower case y with two dots above it) was
    rendered, but it's glyph information was not stored in fontInfo_t and
    not saved into .dat file (including the ones in Team Arena).

    Attempting to load it from existing .dat font files is fine because
    shader name is "" and gets 0 handle. The handle was already 0 anyway.

2014-12-01-03
    Fix negative glyph index in Team Arena text functions

    Team Arena's text functions cast signed char values to int and use as an array index.
    This works fine for values 0 to 127, but not for -128 to -1 which are a negative array index.
    Instead use "character & 255" like client and original Q3 ui/cgame string drawing code.

2014-12-04-01
    Fix bot's teamleader name field being too short

    Players using names with 32 to 35 characters could not be recognized as
    the team leader.

    Reported by Razor.

2014-12-06-01 Fix compile error with ml64 assembler

2014-12-10-01
    Fix weapon barrel angle on Gauntlet and BFG items in Team Arena

    The barrels were rotated 90 degrees from what they should be.
    Used barrel code from CG_AddPlayerWeapon to fix them.

2014-12-10-02 Add weapon barrel to gauntlet/mg/bfg items in baseq3 too

2014-12-19-01 Fix reading 4 byte UTF-8 text input

2014-12-19-02
    Don't use dead view angles after stop following a dead player

    If ps.stats[STAT_HEALTH] is less or equal to 0, cgame uses fixed view angles.
    When stop following a player, make sure health isn't less or equal to 0.

2014-12-19-03
    When player stops following a player, keep view angles

    Now player keeps looking the same direction instead of facing somewhere else
    which is slightly disorienting.


2014-12-26-01 Renaming outp to outbufp because outp() is an existing function
2014-12-26-02 Windows header files for q3lcc

2014-12-27-01
    Fix cg.intermissionStarted only being enabled at first intermission

    Game sets CS_INTERMISSION to 1 at intermission, but does not clear it at
    map_restart so it's only sent the first time. CG_MapRestart manually clears
    cg.intermissionStarted (which is set to value of CS_INTERMISSION when it's
    modified). So subsequent intermissions do not have cg.intermissionStarted
    enabled.

    Now CS_INTERMISSION is cleared and sent each time intermission is started
    and cg.intermissionStarted is enabled each time.

    This makes subsequent intermissions not play sounds in CG_CheckLocalSounds
    during the 1 second between intermission starting and switching to scoreboard
    (PM_INTERMISSION) and makes Team Arena voice chats not play.

2014-12-28-01 Fix warning
2014-12-28-02 Unfix warning

2014-12-28-03
    Merge pull request #94 from wombat23/asmfix

    Fix compile error with ml64 assembler

2014-12-28-04
    Include stdint.h instead of inttypes.h in libmumblelink.c

    MSVC 2010 has stdint.h but not inttypes.h.
    Debian (GCC, MinGW) and OS X (Clang) can compile using stdint.h.

2014-12-28-05
    Make travis do all the builds again

    Travis was only using the last env section, not merged them and was only doing
    one build using gcc instead of six builds (gcc, clang, mingw, ..).

2014-12-29-01
    Fix case where interval overflows (thanks jackeri)

    [17:58] <Jacker> hey, you might be interested in checking out this
    https://github.com/etlegacy/etlegacy/commit/4da5a397b5994bfe5fddb9dad35bef5ddbea64c9#diff-acaedc9d8b492f9af8966ae68597392cR615
    [17:58] <Jacker> its related to the ddos protection code you wrote
    [17:59] <Jacker> in continuation to:
    ab9b08e5845b0ff19814c996ad0cfb1dccab2790
    [17:59] <Jacker> in a case if the client has in the past connected to
    the server days/weeks earlier and time wraps the client wont be able to
    connect
    [18:00] <Jacker> since in that case if the bucket of that clients ip
    still exists it wont get checked correctly

2015-01-02-01 rephrase SSE availability message

2015-01-06-01 q3lcc option -lcppdir and -lrccdir

2015-01-07-01
    Stop LCC from warning about null pointer conversion to function pointer

    Fixed LCC to correctly diagnose expressions with NPC. It no longer reports messages such as

        warning: conversion from `pointer to void' to `pointer to void function(void)' is compiler dependent

2015-01-07-01 Have custom intro cinematics for standalone game

2015-01-07-02
    Ensure that mbstowcs does not overflow its buffer

    Similar to one of the changes by Tim Angus in fd986da: mbstowcs' third
    argument is the number of wchar_t available in dest, not the number
    of bytes.

    This does not appear to be exploitable, because ioquake3 does
    not actually call mumble_set_identity() or mumble_set_description()
    anywhere, but it might be relevant to derivatives.

    Spotted via compiler warnings.

2015-01-07-03 Don't crash if more than 128 modes are available

2015-01-07-04
    Merge pull request #104 from smcv/mbstowcs

    Ensure that mbstowcs does not overflow its buffer

2015-01-07-05
    Merge pull request #97 from Pan7/outp

    Renaming outp to outbufp because outp() is an existing function

2015-01-07-06
    Merge pull request #98 from Pan7/lcc

    Windows header files for q3lcc

2015-01-07-07
    Use MSVC mode marcos for creat in q3cpp on Windows

    Using unix mode 0666 for creat was causing crashes when compiled with MSVC.
    So use the marcos recommended by MSDN. MinGW also has the marcos, so apply
    to Windows builds in general.

2015-01-07-08
    Merge pull request #100 from Pan7/q3lcc

    q3lcc option -lcppdir and -lrccdir.

    Enabled using `q3lcc -Wo-lrccdir=/path/to/dir -Wo-cppdir=/path/to/dir`.

2015-01-07-09
    Merge pull request #22 from zturtleman/cvar_modified

    Add cvar_modified command

2015-01-12-01
    Set float rounding mode on non-Windows platforms

    Sys_SetFloatEnv in sys_unix.c existed but was not called. It sets the
    rounding mode to "to nearest" which is the default on Linux. Might be
    required on other platforms, I don't know.

2015-01-12-02 Fix off-by-one range checks in Team Arena UI
2015-01-12-03 Fix possible string buffer overflows in Team Arena UI
2015-01-12-04 Fix handling too many characters or aliases in Team Arena UI

2015-01-12-05
    Fix (unused) "orders" menu script logic

    "orders" menu script is not used by Team Arena.

    The same C format string was given an int or string argument depending on if
    ordering a single person or everyone. Make it always use int.

2015-01-12-06 Make Window_Paint check if w is NULL before dereference
2015-01-12-07 Remove logically dead code from UI_GetServerStatusInfo

2015-01-12-08
    Fix parsing bots in arena info with trailing spaces

    q3_ui would shown bot at index of number of bots in list.
    game would send empty name to addbot command and command would think skill
    (i.e., 2.000000) was the bot name.

2015-01-12-09 Fix possible levelPicNames buffer overflow in q3_ui
2015-01-12-10 Make barrel/flash model name buffer safe

2015-01-14-01
    Fix crash in MSVC x64 qsnapvectorsse, bug #5905

    Make MASM x64 qsnapvectorsse the same as the inline version.
    Remove leftover OP code, see commit 8a500d71daaadf199957309f5ee4d8c0fc2157da.

2015-01-17-01 No unix memmove for msvc

2015-01-18-01 SIGABRT is in ANSI and POSIX.1, and SIGIOT isn't.

2015-01-26-01 (already added):  Fix Team Arena tauntGauntlet command

2015-01-26-02
    Move Event processor call down below the mouse checks.

    Only send mouse events if both values are non-zero.

    Hopefully this helps with the event overflow spam that can sometimes
    happen on loads or laggy situations.

2015-01-26-03 Add arrow key support for win32 console
2015-01-26-04 Inform how many shader stages the max is in the warning message

2015-01-27-01
    Fix compiling lcc using mingw under cygwin

    Also have 'make' under cygwin automatically use mingw.

2015-01-30-01 added mingw64 (msys2) platform support

2015-02-05-01
    Fix incorrect strncpy in S_AL_StartBackgroundTrack

    Error is loop argument is NULL.
    Ensure that s_backgroundTrack is a null terminated string.

2015-02-07-01  OpenGL2: Remove unused function prototype from tr_fbo.c

2015-02-08-01
    Fix AAS_Reachability_Grapple's sky surface check

    Surface flags are stored in bsptrace.surface.value not flags.

2015-02-08-02
    Set bsp_trace_t::surface.flags to surfaceFlags in server and game

    Revert last commit so that grapple sky check is compatible with BSPC
    BotImport_Trace in (removed from repo) code/bspc/be_aas_bspq3.c.

    Set bsp_trace_t::surface.flags instead of surface.value to trace_t::surfaceFlags.
    surface.flags is only used for the sky check for grapple AAS reachability.
    surface.value is not used at all.

    bsp_trace_t is not part of the game VM API, so this does not affect VM compatibility.
    BotAI_Trace in game was changed to match server. surface.value/flags are not used in game.

2015-02-28-01 Don't run vid_restart when "resized" to current size

2015-03-13-01  OpenGL2: Fix culling again.

2015-03-15-01
    Use pkg-config for a system libjpeg if available: libjpeg-turbo has it

    Bug: https://github.com/ioquake/ioq3/pull/116

2015-03-18-01
    unzip: comment why there is no USE_INTERNAL_MINIZIP boolean option

    Bug: https://github.com/ioquake/ioq3/pull/116

2015-03-20-01
    Fix Com_RandomBytes weak-random case

    255 is valid for unsigned char too.

2015-03-20-02 no (not needed):
    Clean up CG_DrawProxWarning design

    Hopefully fixes the following warning
    cg_draw.c:2315 assuming signed overflow does not occur when assuming that (X + c) < X is always false [-Wstrict-overflow]

2015-03-23-01
    Fix crosshair drawing not clearing color

    The renderer color is set to health color when drawing crosshair. After
    drawing the crosshair, the renderer color was not cleared and could affect
    other things. With cg_draw3dicons 0 and cg_drawCrosshairNames 0 it affected
    the attacker icon.

2015-03-23-02
    Fix attacker icon being default image if attacker left

    With cg_draw3dicons 0 if attacker is kicked or disconnects, the
    attacker icon becomes the default image.

2015-03-23-03  OpenGL2: Fix shadow cubemap size

2015-03-23-04
    Fix return values in nested system calls from QVMs

    When the engine is compiled with Clang it appears that the return value
    is being written to the WRONG address, either due to the vm_ variables being
    changed (unexpectedly) elsewhere, or as a result of bad assembly assumptions;
    having a stack variable pointing to where to write the return value seems
    to do the trick.

    This fixes the case where, for a trap_Register()-like call, weird numbers
    are being returned when, during the process, an error message is printed
    (which in Tremulous results in a QVM call and (nested) system call).

2015-03-23-05 Add a comment about non-functional bot code

2015-03-24-01
    OpenGL2: Fix shadow cubemap segfault

    Changed image size to 512, but 'data' buffer is only 16x16 resulting
    in libGL segfault. Use NULL instead like other dynamic images.

2015-03-25-01
    Fix MDR surface indexes overflow check

    Also, use the check overflow macro like everywhere else.

2015-04-06  OpenGL2: Use signed value in case value goes below 0.

2015-04-12-01
    Merge pull request #116 from smcv/system-minizip

    Enhancements for system libraries

2015-05-31-01 Let's not ifdef MISSIONPACK inside of ifdef MISSIONPACK

2015-03-20-01 fix buffer overflow in CL_CheckForResend

2015-04-30-01
    Save bot accompany distance across map change or restart

    If a bot is accompanying someone before map change or restart, the bot would
    continue accompanying them but press up against them and orbit around them.
    This is caused by the bot's formation distance being 0.

    Save the formation distance so they maintain proper distance and do not
    orbit around the player.

2015-05-29-01 Horizontal scroll should not cause K_MWHEELDOWN key press

2015-06-01-01
    s/.txt/.md/

    Initial pass at moving the opengl readme from plaintext to markdown.
    Probably screwed up a lot of stuff.

2015-06-06-01 clang gets upset by some of these compiler options (and they're probably pretty pointless in 2015 anyway)

2015-06-06-02 Fix cppcheck warning
2015-06-06-03 Commit newly generated gram.c

2015-06-07-01 use osxcross compilers

2015-06-12-01
    Merge pull request #110 from zsoltm/mingw64

    added mingw64 (msys2) platform support

2015-06-12-02
    Merge pull request #105 from smcv/sdl-modes

    Don't crash if more than 128 modes are available

2015-06-12-03 Remove erroneous new line from error message

2015-06-12-04
    Move image load function prototypes to tr_common.h

    The functions themselves are in code/renderercommon/tr_image_*.c

2015-06-12-05 Sort tr_image_*.c filenames in Makefile

2015-06-18-01
    Merge pull request #118 from jkent/master

    fix buffer overflow in CL_CheckForResend

2015-06-18-02
    Merge pull request #89 from bostick/master

    Add mingw prefix for cygwin32 and mingw32

2015-06-18-03
    Merge pull request #108 from Pan7/memmove

    No unix memmove for MSVC

2015-06-18-04
    Merge pull request #109 from Pan7/SIGABRT

    SIGABRT is in ANSI and POSIX.1, and SIGIOT isn't.

2015-06-18-05
    fix a stupid use of strcpy()

    strcpy() arguments may not overlap !

2015-06-18-06
    Merge pull request #125 from jkent/master

    fix a stupid use of strcpy()

2015-06-28-01 Check SDL_GetNumDisplayModes return value for errors

2015-06-28-02 Fix variable declaration for C89 compilers

2015-06-28-03
    Remove check for cg_recordSPDemoName.string array address

    It will always be true.

2015-06-28-04 no (we do use it):  Remove unused function WRITE_1BYTES from cl_avi.c

2015-06-28-05
    Make cinematic times be int like CL_ScaledMilliseconds

    Cinematic's startTime and lastTime are always set from CL_ScaledMilliseconds
    which returns int and are converted back and forth to int and unsigned int.

    This fixes a warning that abs() is used on an unsigned int.

2015-06-28-06 Fix abs() being used for long int in l_precomp.c
2015-06-28-07 Fix abs() being used for float in cl_input.c

2015-06-30-01
    Add support for Aarch64 (ARM64)

    Add support for Aarch64, the 64-bit ARM architecture.

2015-06-30-02
    Merge pull request #128 from tbm/master

    Add support for Aarch64 (ARM64)

2015-06-30-03
    Merge pull request #4 from smcv/hurd

    Add support for the GNU/Hurd architecture

2015-07-04-01
    Fix CG_WaterLevel() checks for waterlevel 2 and 3

    CG_WaterLevel() added lerpOrigin to itself instead of adding view height
    when checking for waterlevel 2 and 3. This did not cause issues because
    ioq3 only compared the calculated waterlevel to more or equal to 1.

2015-07-04-02
    Fix CGame CG_WaterLevel() comparisons

    My last commit made it so that CGame "waterlevel 1" is feet in water,
    but before it was erroneously about waist deep in water. The places
    where it is checked it is suppose to be view position underwater.

    Change comparisons to use correct value for view position underwater.

2015-07-04-03 Apply greyscaling to fog blocks
2015-07-04-04 Don't fog 3D crosshair sprite

2015-07-04-05
    Fix Windows file list extension check

    Windows' Sys_ListFiles would add files that contain the extension anywhere,
    not only at the end of the file name.

    Example: "word.pk3omghacks" use to be loaded as a pk3 file.

2015-07-06-01
    server_compile.sh & start_server.sh for Linux ioq3 sysadmins

    If your distribution doesn’t include such niceties, these could help a
    newbie get started with a compiled build of ioquake3 for servers and a
    short script to get started.

2015-07-06-02
    Fix server_compile.sh to exit after completed

    Also, convert '\n's to real new lines because the literal '\n's were
    printed.

2015-07-09-01
    Remove unused fpucw from snapvector.asm

    It's usage was removed in commit 8a500d71.

2015-07-09-02
    Fix OpenGL2 ignoring last light grid point on each axis

    Also change light grid bounds clamping to make it more clear what invalid
    values are.

2015-07-12-01
    Backport ignoring values outside lightgrid to OpenGL1

    Fixes possibly of reading memory past end of lightGridData or reading
    wrong light grid data (wrapping around to next row).

2015-07-12-02
    Fix range checks for numBorders in CM_AddFacetBevels

    Found by Coverity.

2015-07-12-03
    Make more vm_x86 macros use braces so they work with if blah run macro

    MASK_REG in EmitMovEDXStack would incorrectly emit asm if 'andit' was 0.
    'andit' would never be 0 though so it wasn't causing issues.

    Found by Coverity.

2015-07-12-04 Don't segfault in FS_CreatePath when there are no path seperators

2015-07-12-05
    Remove logically dead code in R_CheckFBO

    Found by Coverity.

2015-07-12-06
    Fix alloc size for default skin and single shader skin

    Found by Coverity.

2015-07-12-07 no (different):
    Fix cgs.teamVoteString buffer overflow in CG_ConfigStringModified

    Found by Coverity.

2015-07-12-08
    Remove logically dead code from CL_GetServerStatus

    Found by Coverity.

2015-07-13-01 Fix handling too many teams in Team Arena UI

2015-07-14-01
    Makefile: confine $(LIB) to the one platform that needs it, namely irix64

    It isn't mentioned anywhere else, and deleting it from the Linux code
    path means we don't need to maintain an exhaustive list of 64-bit
    architectures.

2015-07-14-02
    build: canonicalize all ARM variants to "arm", matching q_platform.h

    The ARCH in the Makefile must match the ARCH_STRING in q_platform.h;
    otherwise, ioquake3 will install (for instance) uiARCH.so but look for
    uiARCH_STRING.so, which isn't going to go well (particularly for
    the modular renderer).

    Like i386, but unlike most (all?) other Linux platforms, uname -m on
    32-bit ARM machines can have various results starting with "arm",
    depending on the specific CPU version (e.g. Raspberry Pi is armv6l,
    RPi2 is armv7l). Again similar to the x86 family,
    it's appropriate for them to share an architecture suffix;
    q_platform.h has traditionally used "arm" so let's use that.

    64-bit ARM makes a clean break from this, much like 64-bit x86 does:
    uname -m produces a string not starting with arm (specifically
    "aarch64"), and gcc predefines __aarch64__ instead of __arm__.
    As a result, it is unaffected by this change.

2015-07-14-03
    build: define ARCH_STRING in Makefile on Linux and other GNU platforms

    GNU platforms (Linux, kFreeBSD, Hurd) have endian.h to determine
    endianness, so all architectures except x86_64 are in fact treated
    identically, except that their ARCH_STRING is different.
    The ARCH_STRING must always be identical to the ARCH from the Makefile,
    otherwise the engine will not find its cgame, game and ui plugins
    under their expected names and startup will fail. If we pass it in
    from the Makefile, then an identical value is guaranteed, and we can
    get rid of an increasingly long list of defined(__some_cpu__) tests.

    The one remaining quirk is that we test __x86_64__ to determine
    whether to define idx64; I've kept that, but separated it from
    the ARCH_STRING.

    On non-Linux platforms we only support a few architectures anyway,
    so keeping the list up to date is less of a burden; *BSD porters
    could probably use the same technique to get support for lots of
    architectures with little effort, but I have not done that here,
    because I cannot test it.

    Windows must continue to support preprocessor-based architecture tests
    in any case, so that the MSVC solutions (which do not use the Makefile)
    can continue to work. However, Windows only runs on a few CPU families,
    so this shouldn't be a significant burden in practice.

    When cross-compiling, the tools are compiled for the build architecture
    (COMPILE_PLATFORM, COMPILE_ARCH) rather than the host architecture
    (PLATFORM, ARCH), so define ARCH_STRING to COMPILE_ARCH on a GNU
    COMPILE_PLATFORM.

2015-07-15-01
    Merge pull request #129 from smcv/generic-platform

    Implement Linux architecture support generically

2015-07-22-01
    build: if tput fails, fall back to a reasonable text width

    If TERM is not set (which can happen in autobuilders and other
    batch environments), or if tput cannot determine the number of
    columns for some other reason, then it can fail and not produce
    any output. Prior to this change, that would result in passing
    field width -4 to fmt, which is an error and causes fmt to
    produce no output.

2015-07-22-02
    Merge pull request #131 from smcv/tput

    build: if tput fails, fall back to a reasonable text width

2015-07-24-01 SDL_Init zero check

2015-07-25-01
    Merge pull request #132 from Pan7/SDL_Init

    SDL_Init zero check

2015-07-25-02 SDL_FALSE/TRUE for SDL_SetWindowGrab
2015-07-25-03 SDL_SetWindowGammaRamp check

2015-07-26-01 SDL_GetWindowDisplayIndex check
2015-07-26-02 SDL_CreateWindow NULL check
2015-07-26-03 Added SDL_GetError()
2015-07-26-04 Added SDL_GetError()

2015-07-26-05
    Merge pull request #133 from Pan7/SDL_bool

    SDL_FALSE/TRUE for SDL_SetWindowGrab

2015-07-26-06
    Merge pull request #134 from Pan7/GammaCheck

    SDL_SetWindowGammaRamp check

2015-07-26-07
    Merge pull request #135 from Pan7/SDL_Index

    SDL_GetWindowDisplayIndex check

2015-07-26-08
    Merge pull request #136 from Pan7/SDL_NULL

    SDL_CreateWindow NULL check

2015-07-26-09 SDL_GetWindowDisplayIndex() check2
2015-07-26-10 SDL_GL_SetSwapInterval() check

2015-07-26-11
    Merge pull request #92 from Pan7/curl_error

    qcurl_multi_add_handle error check

2015-07-26-12
    Merge pull request #137 from Pan7/SDL_display

    SDL_GetWindowDisplayIndex() check2

2015-07-26-13
    Merge pull request #138 from Pan7/SDL_Swap

    SDL_GL_SetSwapInterval() check

2015-07-26-14 Fix 'Invalid architecture' message in make-macosx-app.sh

2015-07-27-01 qcurl_multi_remove_handle check
2015-07-27-02 qcurl_multi_strerror not curl_multi_strerror

2015-07-28-01
    Merge pull request #140 from Pan7/qcurl_remove

    qcurl_multi_remove_handle check

2015-07-28-01 qcurl_easy_setopt dev warning

2015-07-29-01 qcurl_multi_cleanup check

2015-07-29-02
    Merge pull request #142 from Pan7/qcurl_warn

    qcurl_easy_setopt dev warning

2015-07-29-03
    Merge pull request #143 from Pan7/qcurl_cleanup

    qcurl_multi_cleanup check

2015-07-29-04 Return the result from qcurl_easy_setopt_warn
2015-07-29-05 Add missing qcurl handle cleanup

2015-07-29-06
    Merge pull request #144 from Pan7/qurl_handle2

    Add missing qcurl handle cleanup

2015-07-30-01 Fix va_list warning

2015-07-30-01
    Merge pull request #145 from Pan7/va_list

    Fix va_list warning

2015-07-30-02 Fix (unused) watertype checks in PM_WaterMove

2015-08-18-01 Remove MSVC user configuation files

2015-08-18-02
    Ignore MSVC non-project files

    Ignore auto generated or user configuration for MSVC projects.
    Note: .user is ignored in Xcode section but applies to MSVC too.

    Patch by @shearer12345.

2015-08-18-03 Update msvc10 renderer filenames (copied from msvc11)
2015-08-18-04 Fix msvc11 x86_64 runtime
2015-08-18-05 Fix mscv11 libcurl include path
2015-08-18-06 Copy msvc11 build changes to msvc10

2015-08-18-07 Make msvc10/11 use UseOfMfc false and CharacterSet "NotSet"

2015-08-18-08
    Update msvc10/11 for SDL2

    update AdditionalIncludeDirectories to use SDL2
    update AdditionalDependencies to use SDL2
    add AdditionalLibraryDirectory to SDL2 libs
    set sub-system as console

2015-08-18-09 add post-build event for msvc10/11 to copy SDL2.dll to build folder

2015-08-18-10 Make msvc10/11 x86_64 copy SDL264.dll

2015-08-19-01
    Update headers in VS (10 and 11) projects

    So VS doesn't always want to rebuild.

    Reported by @shearer12345.

2015-08-25-01 Remove unused define CG_FONT_THRESHOLD

2015-08-25-02
    more helpful error message

    Can't find your pak0.pk3? Here's where we tried looking.

2015-08-25-03 Githalytics seems to have stopped being a thing.

2015-08-25-04 Moving large chunks of README to wiki step 1
2015-08-25-05 Point to the moved information
2015-08-25-06 Removing more large chunks of outdated text
2015-08-25-07 Better language, less tense

2015-09-07-01
    Fix Cvar_Unset not notifying cvar_modifiedFlags

    Upstream: JACoders/OpenJK@9a5e9e87ff2d1302261978fa3f1adafb851bd6d6

2015-09-07-02
    Ensure reads from /dev/urandom are unbuffered

    Upstream: JACoders/OpenJK@de6a9dfd40065ae9a5a2b0b3ef701feee8dac867

2015-09-07-03
    Merge pull request #153 from dionrhys/read-urandom-unbuffered

    Ensure reads from /dev/urandom are unbuffered

2015-09-07-04
    Merge pull request #152 from dionrhys/cvar-unset-notify

    Fix Cvar_Unset not notifying cvar_modifiedFlags

2015-09-09-01 Fix wonky va_list usage
2015-09-09-02 Fix the wonky fix to the wonky va_list usage

2015-09-14-01
    Fix glyph width calculation in Text_Paint_Limit

    Text_Width's scale argument will be multiplied by glyphScale, so don't
    pass useScale that is already multiplied by glyphScale as this makes
    the scale too big.

2015-09-16-01
    Make add bots menu use standard menu drawing

    Make add bots menu draw banner and background like remove bots menu.

2015-09-17-01 Add Steam's Quake 3 Arena dir to game dirs on Windows.
2015-09-18-02 Use correct array size for facets in cm_patch.c

2015-09-20-01
    Early out of Cmd_CompleteArgument and Cmd_SetCommandCompletionFunc

    Reported by Ensiform.

2015-09-22-01 Align indent of defines at top of q_shared.h to 4 space tabs

2015-09-22-02 Make steam path optional at compile time for standalone games

2015-09-24-01 A mac dedicated server script

2015-09-24-02 Fixed the os x path and now both scripts will take arguments

2015-09-24-03 Don't quote me.

2015-09-25-01 Search for mods in steam path as well as home and base paths.

2015-09-25-02
    Use Windows uninstall path to find Steam Quake 3 install.
    Thanks Pan- and Ensiform for pointing this out.

2015-09-25-03 Effectively revert c2e146c

2015-09-26-01 Now with less infinite recursion
2015-09-26-02 Fix compiling on Windows without Steam path/appid

2015-10-04-01 Fix check for empty rconpassword in CL_Rcon_f

2015-09-28-01 Remove unused define MAC_EVENT_PUMP_MSEC

2015-09-30-01
    Maybe fix old MSYS when there is an empty for loop

    Based on ioquake3 svn r1485.

2015-10-16-01 Add support for uncompressed image upload flag to OpenGL1

2015-10-16-02
    Fix not swapping buffers because out of cmd buffer space

    Reserve space for end of list and swap buffer commands. These are absolutely
    required and cannot be dropped. Dropping swap buffer command causes screen
    to not update and possible crash from drawsurf buffer overflow if not enough
    cmd buffer space for many continous frames.

2015-10-16-03
    Fix crash from reading past end of tr.refdef.drawSurfs

    The number of draw surfaces was range checked against number of surfaces for
    the current view but needs to check total for the frame otherwise can read
    past the end of the tr.refdef.drawSurfs array when there are multiple views.

2015-10-16-04 Fix reserved size for swap buffer command being too small on x86_64

2015-10-17-01 Replace 4 with sizeof( int ) in R_GetCommandBufferReserved

2015-12-02-01 Access 32-bit registry key from 64-bit Windows correctly.

2015-12-02-02  OpenGL2: automatically load textures with a _s suffix as specular.

2015-12-03-01  OpenGL2: Remove some rendering options for simplicity.

2015-12-08-01  OpenGL2: Add option in code for alternate overbright method.

2015-12-09-01  OpenGL2: Add r_glossIsRoughness.

2015-12-09-02  OpenGL2: Parse radius entries from misc_cubemap entities.

2015-12-09-03  OpenGL2: Forgot a multiply.

2015-12-09-04  OpenGL2: Use correct sunlight color for sunlight specular.

2015-12-15-01
    OpenGL2: Switch to RGTC from LATC for normal maps.
    Also added a RGTC compressor as a workaround on Intel graphics.

2015-12-16-01  OpenGL2: Some tr_image.c cleanup.

2015-12-18-01  OpenGL2: DDS (compressed textures) support.

2015-12-18-02  OpenGL2: Add null dereference checks to DDS loader.

2015-12-20-01 Make jpeg loading errors non-fatal.

2015-12-21-01 Fix error handling in RE_SaveJPGToBuffer().
2015-12-21-02  OpenGL2: Support picmip for DDS textures.

2015-12-22-01  OpenGL2: Add r_exportCubemaps for saving cubemaps on map load.

2015-12-23-01  OpenGL2: Replace r_exportCubemaps cvar with exportCubemaps command.

2015-12-24-01  OpenGL2: Add r_cubemapSize.

2015-12-28-01
    Merge pull request #103 from openmoh/ioq3-intro

    Have custom intro cinematics for standalone game

2015-12-28-02
    Merge pull request #73 from Pan7/sayto

    sayto cmd with player name completion

2015-12-10-01
    Use Opus for VoIP

    Server/client VoIP protocol is handled by adding new cvars
    cl_voipProtocol and sv_voipProtocol, sv_voip and cl_voip
    are used to auto set/clear them. All users need to touch
    are cl/sv_voip as 0 or 1 just like before.

    Old Speex VoIP packets in demos are skipped.
    New VoIP packets are skipped in demos if sv_voipProtocol
    doesn't match cl_voipProtocol.

    Notable difference between usage of speex and opus codecs,
    when using Speex client would be sent 80ms at a time.
    Using Opus, 60ms is sent at a time. This was changed because
    the Opus codec supports encoding up to 60ms at a time.
    (Simpler to send only one codec frame in a packet.)

2014-01-14-01
    Fix some opus_decode issues

    It was able to fail the assert before. I was using opus_decode wrong.

2016-01-07-01
    Merge pull request #42 from zturtleman/opus_voip_2

    Use Opus for VoIP [updated]

2016-01-15-01  OpenGL2: Remove specular ambient.
2016-01-15-02 Add msvc12 project files.

2016-01-18-01  OpenGL2: Direct state access, part 1: Texture binds

2016-01-19-01  OpenGL2: Direct state access, part 2: Uniforms.

2016-01-20-01  OpenGL2: Direct state access, part 3: Framebuffers.

2016-01-22-01  OpenGL2: Some FBO related cleanup/fixes.

2016-01-28-01  OpenGL2: Load existing per-map cubemaps.

2016-01-29-01
    Fix frame_msec possibly being zero in cl_input.c.

    This fixes a mouse freezing bug.

2016-02-02-01
    OpenGL2: Merge several cvars into r_pbr.

    r_glossIsRoughness, r_specularIsMetallic, r_framebufferGamma, r_tonemapGamma, r_materialGamma, r_lightGamma

2016-02-10-01  OpenGL2: Add named cubemaps and per-map env.json parsing.

2016-02-12-01  OpenGL2: Typos.

2016-02-17-01  OpenGL2: Fix some GL errors and no sun shadows on older OpenGLs.

2016-02-17-02  OpenGL2: Shader optimization, and add dither to tonemap.

2016-03-07-01  OpenGL2: Add r_shadowBlur.
2016-03-07-02  OpenGL2: Add r_glossType.

2016-03-08-01  OpenGL2: Speedup for SSAO & blur shaders, fix sunlight normals in lightall.

2016-03-09-01  OpenGL2: Create FBOs if target image exists, not cvar settings.

2016-03-10-01  OpenGL2: Fixes to depth blur and ssao.

2016-03-11-01  OpenGL2: More ssao/depth blur improvements.

2016-03-14-01  OpenGL2: Fix r_lightmap.

2016-03-15-01  OpenGL2: Fix horribly broken metallic shader.

2016-03-27-01 Sys_GetProcessorFeatures() didn't check for 3DNow! or Altivec.

2016-03-27-02 Fix typo of SDL_Has3DNow() in Sys_GetProcessorFeatures()

2016-03-29-01  OpenGL2: Improve cubemap outside error.

2016-04-04-01
    Remove incorrect documentation from q3a.service

    rate, snaps, and cl_maxpackets cvars only affect client.

2016-04-05-01  OpenGL2: Render metals as nonmetal on cubemaps, and some ComputeShaderColors cleanup.

2016-04-05-02  OpenGL2: Some FBO cleanup, and add non-depth blur to blur shader.

2016-05-08-01
    Cross-compiling using mingw should only pick one gcc executable

    If multiple mingw toolchains are installed, the Makefile set CC to all
    present gcc executables. Pick only the first one instead of passing the
    others as arguments.

    "CC: /usr/bin/i686-w64-mingw32-gcc /usr/bin/i686-pc-mingw32-gcc"

2016-05-09-01 Fix warnings that names passed to Name_PlayerNameCompletion is not const

2016-05-09-02  OpenGL2: Fix specularScale override not being used in RB_IterateStagesGeneric

2016-05-16-01
    Explicitly set cull type for skybox

    Explicitly set cull type for skybox to front, instead of using whatever
    cull type the previous shader used (which could result in the skybox
    not being visible due to only drawing back faces). The sky cloud stages
    set the cull type so they are not affected by previous cull type.

2016-05-19-01  OpenGL2: Speed up surface merging.

2016-05-23-01
    Improve keyboard/joystick input in Team Arena UI

    Make Yes/No, Multi, Slider, and Bind items allow enter key to change
    value without mouse over item. Add support for left and right arrow keys
    and joystick button 1-4 to Yes/No, Multi, and Slider and many item
    specific 'ownerdraw' key handlers.

    Listbox still requires mouse hover and Team Arena main menu requires
    mouse hover to get anywhere...

    Enabling K_JOY1-4 to select in default key handler also caused additional
    mouse button (K_AUX1-16) to select, which is done in q3_ui as well. Both
    handle K_AUX equally badly (not treated as a mouse button and not handled
    by item specific key handlers), so it's probably fine.

2016-05-23-02 Fix iamamonkey printing 'levels' instead of 'awards'

2016-05-27-01
    Include SDL2 dll from repository in NSIS installer

    Before it required manually copying SDL 1.2 dll into misc/nsis/ which the
    engine no longer uses.

2016-06-08-01  OpenGL2: Set cubemap mip selection to match output from ggxcc.

2016-06-12-01
    Fix Makefile for OSX
    Bump base SDK from 10.5 -> 10.7
    Just use the builtin __APPLE__

2016-06-12-02
    Merge pull request #190 from wtfbbqhax/OSX_64bit_builds

    Fix Makefile for OSX

2016-06-15-01 Add temporary backup text files to .gitignore
2016-06-15-02 Erroneously removed that line in .gitignore

2016-06-10-01  OpenGL2: Remove loading (unused) glDrawBuffersARB

2016-06-10-02
    OpenGL2: Remove duplicate textureFloat = qfalse

    glRefConfig.textureFloat is set to qfalse near wrong extension and then
    farther down by the correct extension. Removing this has no effect.

2016-06-15-01
    Prevent CL_RunCinematic from reading cinTable[-1]

    At the end of CL_RunCinematic, RoQShutdown sets currentHandle to -1.
    This causes the return at the end to be return cinTable[-1].status.
    Use return FMV_EOF when RoQShutdown is called.

    I think FMV_EOF should be returned instead of FMV_IDLE which is set in
    RoQShutdown because RoQShutdown is clearing out state so it can be reused
    for a new cinematic.

    The return value isn't actually read by the ioq3 client, renderers,
    cgame, or ui.

2016-02-04-01 Remove note that r_allowResize requires SDL backend

2016-06-15-01 Only play logo/intro if their filenames have been defined in q_shared.h

2016-06-15-02 Missed this Cvar_Get() on com_introPlayed

2016-06-27-01 Fix typo of empty in ai_main.c

2016-07-10-01
    Fix bot team order to kill last player it killed

    Bot's lastkilledplayer was set to -1 after carrying out an ordered kill.
    Later in BotChat_Random() the PlayerName function was passed -1 which
    caused a "Error: PlayerName: playernum out of range" message.

    I think the reason it was set to negative one is so that if the bot is
    ordered to kill the player again, the bot will not say it's done and
    drop the goal. Though, if the bot killed the player based on it's own
    decision, it will just say it's done and drop the goal (bug?).

    Let's check the time of the last kill to see if it happened since the
    team order was received instead of setting lastkilledplayer to -1
    after completing the team ordered kill. This fixes bot dropping goal
    if target player was the last player they killed and the PlayerName
    out of range error.

2016-06-15-01
    Make using Yacc optional, disabled by default

    A built-in GNU Make rule causes code/tools/lcc/lburg/gram.y to replace
    gram.c if gram.y has a newer modified time. This causes git diff to
    pick up changes to gram.c, which seems to have been manually modified
    to fix warnings and may vary by Yacc used to create it. It also
    requires installing a program to generate a file that already exists
    in a usable state in the code repository.

    So replace the built-in rule so it is only used if USE_YACC is 1
    (defaults to 0). The Yacc executable name can be overriden using
    `make YACC=yacc` like before.

    I preferred to touch gram.c instead of installing Yacc because of the
    problems it causes. It doesn't really seem like a good idea to recommend
    others do that instead of disabling Yacc the Makefile though.

2016-07-11-01  Fix OpenGL2 readme missing text in md

2016-07-25-01  OpenGL2: Require OpenGL 2.0

2017-07-25-01  OpenGL2: Add new GL function loader.

2016-07-25-02 Remove 'abs(unsigned)', which is unnecessary and potentially wrong

2016-07-26-02 [tools/asm/q3asm.c] Remove 'abs(unsigned)', which is unnecessary and potentially wrong

2016-07-25-03 [botlib] Use floating point absolute value rather than truncate to integer

2016-07-25-04
    Merge pull request #195 from tkoeppe/intfix

    Fix signedness and float/int issues with abs()

2016-07-25-05  OpenGL2: Use loader for all extension funcs.
2016-07-25-06 [null/null_glimp.c] Fix up bitrot in null impl

2016-07-25-07
    Merge pull request #197 from tkoeppe/null

    [null/null_glimp.c] Fix bitrot in null impl

2017-07-26-01 Remove dead variables
2017-07-26-02 Fix some typos in comments

2016-07-28-01  OpenGL2: Fix GL_EXT_direct_state_access function names.

2016-07-29-01  OpenGL2: Let unlit materials use parallax maps.

2016-08-04-01  OpenGL2: Fix shader error logs.

2016-08-05-01
    Better defaults for joystick axes.

    These changed from SDL1->SDL2 afaict.

2016-08-05-02 Controller hot plug support.

2016-08-05-03
    Minor updates to README.md

    Removed some language about the old mailing list, pointed to forums,
    and more accurately to the
    wiki, updated reference to SDL.
    Zardoz speaks to you, His chosen ones.

2016-08-08-01 Better gamepad support.
2016-08-08-02 Fix stricmp usage in previous commit.
2016-08-08-03 Minor URL change.

2016-08-11-01 Fix black screen when in_joystick disabled but controller connected.

2016-08-15-01  OpenGL2: Preallocate grid surfaces like other BSP surfaces.

2016-08-15-02  Missing bit of previous commit.
2016-08-15-03 Update SDL2 to 2.0.4

2016-08-16-01
    Merge pull request #207 from MAN-AT-ARMS/sdl204

    Update SDL2 to 2.0.4

2016-08-16-02 Add stripped SDL2 reference dll's to repo

2016-08-16-03
    Merge pull request #212 from MAN-AT-ARMS/sdl204-stripped

    Add stripped SLD2 reference dll's to repo

2016-08-16-04 Fix joystick w/o controller mapping not working with SDL update.

2016-08-23-01 [game/ai_main.c] Use floating-point fabs() for floating-point values

2016-08-23-02
    Merge pull request #213 from tkoeppe/abs

    [game/ai_main.c] Use floating-point fabs() for floating-point values

2016-09-01-01  [renderergl2/tr_main.c] Use floating-point fabsf() for floating-point

2016-09-06-01  OpenGL2: Store normals/tangents as int16_t[4].

2016-09-06-02  OpenGL2: Fix missing bounds calculation when loading BSP surfaces.

2016-09-07-01  OpenGL2: Make R_FreeSurfaceGridMeshData() static.

2016-09-07-02
    Fix undefined behavior when shifting left by 32.

    https://bugzilla.icculus.org/show_bug.cgi?id=6432

2016-09-11-01  OpenGL2: Fix reversed VectorCopy4() usage.

2016-09-12-01 [qcommon/msg.c] Remove dead code (which had undefined behaviour)

2016-09-12-02
    Merge pull request #220 from tkoeppe/shift

    [qcommon/msg.c] Remove dead code

2016-09-13-01  OpenGL2: Fix more reversed VectorCopy4() usage.

2016-09-13-02
    Merge pull request #216 from tkoeppe/abs

    [renderergl2/tr_main.c] Use floating-point fabsf() for floating-point values

2016-09-13-03 [code/botlib/l_precomp.c] Fix string buffer overflow

2016-09-13-04
    Merge pull request #221 from tkoeppe/strncpy

    [code/botlib/l_precomp.c] Fix string buffer overflow

2016-09-14-01
    OpenGL2: Remove map color scaling and r_forceSunMapLightScale.

    Also simplify overbright code in ComputeShaderColors().

2016-09-14-02  OpenGL2: Remove per fragment tangent space calculation code.

2016-09-14-03  OpenGL2: Clamp entity lighting to more resemble OpenGL1.

2016-09-21-01
    Fix mis-spellings of "separating" as "seperating"

    Found by Debian's Lintian tool.

2016-03-21-01
    Introduce NOTSHLIBLDFLAGS, used to link executables only

    This can be used for LDFLAGS that would be inappropriate for shared
    libraries, such as the "-fPIE -pie" used to link position-independent
    executables. PIEs make it more difficult to exploit various classes
    of security vulnerability.

2015-04-02-01
    Pick up date from SOURCE_DATE_EPOCH, for reproducible builds

    The goal of reproducible builds is that a rebuild of the same source
    code with the same compiler, libraries, etc. should result in the same
    binaries. SOURCE_DATE_EPOCH provides a standard way for build systems
    to fill in the date of the latest source change, typically from a git
    commit or from metadata like the debian/changelog in Debian packages.

    This does not change anything if SOURCE_DATE_EPOCH is not defined;
    the intention is that a larger build system like a Debian package
    will define it.

    Please see https://reproducible-builds.org/ for more information about
    reproducible builds.

2016-09-23-01  OpenGL2: Some tr_image refactoring/cleanup.

2016-09-25-01
    snd_wavelet: avoid undefined pointer below array bounds

    Given an array b[] of length n, pointers to &b[0]..&b[n] are defined
    (where only &b[0]..&b[n-1] can be validly dereferenced). &b[-1], or
    equivalently b-1, is not something we can use in valid Standard C.

    gcc 6 diagnoses this as:

    code/client/snd_wavelet.c:33:9: warning: array subscript is below array bounds [-Warray-bounds]

    and might take this undefined behaviour as permission to emit
    "more efficient" object code that is not what the author expected,
    for example nothing at all. Use a macro to fake a 1-based array instead.

2016-09-25-02
    UI_BuildFindPlayerList: avoid array underflow

    This function is used in the Team Arena menus

    I don't think it's actually possible to reach this line with
    foundPlayerServerNames < 1, because by the time we get here we have
    set it to 1 + the actual number of servers; but if we did, it would
    clearly underflow into foundPlayerServerNames[-1], which would be
    undefined behaviour. gcc 6 diagnoses this with a warning:

    code/ui/ui_main.c: In function ‘UI_BuildFindPlayerList’:
    code/ui/ui_main.c:4138:16: warning: array subscript is below array bounds [-Warray-bounds]

    Also correct the sizeof() invocation to make it more obviously
    correct (in fact the buffers for names and addresses happen to both
    be of size MAX_ADDRESSLENGTH, so it was fine, but it's good to be
    obvious).

2016-09-25-03
    UI_BuildFindPlayerList: make a sizeof() more obviously correct

    As with the other branch of the if/else, each element of
    foundPlayerServerNames is in fact the same size as each element of
    foundPlayerServerAddresses, so it was fine; but it's better to make
    it obvious that we are using the right array sizes.

2016-09-27-01
    Merge pull request #223 from smcv/seperating

    Fix mis-spellings of "separating" as "seperating"

2016-09-27-02
    Merge pull request #224 from smcv/notshlib

    Introduce NOTSHLIBLDFLAGS, used to link executables only

2016-09-27-03
    Merge pull request #225 from smcv/reproducible-date

    Pick up date from SOURCE_DATE_EPOCH, for reproducible builds

2016-09-27-03
    Merge pull request #226 from smcv/underflow

    Fix array underflow compiler warnings

2016-10-02-01  Default cl_renderer to opengl2.

2016-10-09-01
    reset samplefrac to 8-bits, to prevent overflow

    issue: https://github.com/ioquake/ioq3/issues/106

2016-10-09-02
    Offer post-crash safe settings on a per-mod basis

    Offer to restore settings when loading a mod that crashed, not the first
    mod that gets loaded after a crash. Before the first mod loaded (usually
    baseq3) would get the option even if missionpack or some other mod crashed.

    - Make pid files separate for each fs_game.
    - Remove/write pid every time switching fs_game.
    - Create path before writing pid file otherwise it fails on first run.
    - Show mod description.txt or fs_game instead of engine name in abnormal
      exit message.
    - Check com_fullyInitialized in Com_Error before removing PID,
      otherwise "ioquake3 --version" segfaults when accessing fs_gamevar->string
      (plus not fully initialized isn't really a normal shutdown).

2016-10-09-03 Avoid shuting down opus voip codec multiple times

2016-10-09-04
    Handle ERR_DROP during Com_GameRestart

    If ERR_DROP during Com_GameRestart after shutting down client, Com_Error
    needs to restart the client otherwise there is just a black window. Also,
    clear the game restarting flag in Com_Error otherwise it's not possible to
    run Com_GameRestart again later.

    I don't know of a way to trigger ERR_DROP, in FS_Restart for instance,
    without engine changes however.


2016-10-10-01  OpenGL2: Non-square merged lightmaps.

2016-10-10-02  OpenGL2: Store vertex colors and hdr lightmaps/lightgrid as RGBA16.

2016-10-11-01
    OpenGL2: Workaround for multiple deforms on MD3 mesh.
    https://github.com/ioquake/ioq3/issues/122

2016-10-13-01  OpenGL2: Fix fog color.

2016-10-20-01
    OpenGL2: Remove half float support.

    Not enough accuracy for textures larger than 1024x1024, such as merged light maps.

2016-10-21-01
    OpenGL2: Remove check for GL_ARB_texture_non_power_of_two.

    Core in OpenGL 2.0.

2016-10-21-02  OpenGL2: Faster mipmap generation.

2016-10-27-01  OpenGL2: Load images with "_nh" suffix as parallax normalmaps.

2016-10-27-02  OpenGL2: Prioritize loading .png images over all others besides .dds.

2016-10-27-03  OpenGL2: Add more ambient to lightmapped materials.

2016-10-27-04 Fix removing/creating PID file for base game when switching to/from mods

2016-09-29-01
    Avoid 'register' declarations

    gcc 6 with -Wall -Wextra warns:

    code/botlib/l_precomp.c: In function ‘PC_NameHash’:
    code/botlib/l_precomp.c:551:2: warning: ‘register’ is not at beginning of declaration [-Wold-style-declaration]
      int register hash, i;
      ^~~

    Modern compilers either ignore the register storage class when
    generating code, or generate better code without it, so just remove
    most of them.

    The remaining uses are in third-party bundled libraries (libjpeg, zlib),
    and in a PowerPC-specific inline function consisting of inline
    assembler (because I'm not 100% confident that it doesn't have
    some practical use there).

2016-11-01-01 Prefer mingw-w64 for cross-compiling

2016-11-01-02
    Allow overriding platform in NSIS installer

    MSYS2 and some mingw builds use mingw64 instead of mingw32. If you run
    `make installer` from the top-level, PLATFORM should be set correctly
    when building the installer.

2016-11-25-01  OpenGL2: Don't interleave texCoords and lightCoords in tess.

2016-11-25-02
    OpenGL2: Don't draw viewmodels in portal views.

    Thanks Cyrax for pointing out, should fix https://bugzilla.icculus.org/show_bug.cgi?id=6363.

2016-11-25-03
    OpenGL2: glGetIntegerv -> qglGetIntegerv

    Thanks to Cyrax for pointing this out.

2016-05-16-01 Don't have clients use private slots when sv_privatePassword is unset

2016-12-07-01  OpenGL2: Don't bind null framebuffers when not using framebuffers.

2016-12-08-01
    OpenGL2: Detect Intel graphics and avoid/use certain operations there.

    Also use qglCopyTextureSubImage2DEXT instead of qglCopyTextureImage2DEXT.

2016-12-10-01 GLimp_HaveExtension() -> SDL_GL_ExtensionSupported()

2016-12-12-01  OpenGL2: Fix bug in generating normal maps for non-square textures.

2017-01-24-01
    OpenGL2: Render dlights only when r_lightmap is 0.

    https://github.com/ioquake/ioq3/issues/246

2017-01-25-01
    Merge pull request #227 from smcv/old-style-declaration

    Don't use mostly obsolete 'register' keyword (Merge or get off the pot.)

2017-01-25-02
    Merge pull request #91 from lnussel/master

    a VM for ARMv7l (Thank you, Ludwig -zjs)

2017-01-25-03
    Merge pull request #99 from openmoh/ioq3-SSE-msg

    rephrase SSE availability message (thanks)

2017-01-25-04
    Merge pull request #230 from fmwviormv/patch-1

    reset samplefrac to 8-bits, to prevent overflow

2017-01-25-05
    Correct test for GL_EXT_texture_env_add support

    The test string is missing the initial "GL_" so it is always failing the test even when supported on newer hardware.

2017-01-26-01
    OpenGL2: Generate less shaders when r_sunlightMode is disabled.

    Original patch by https://github.com/inolen in https://github.com/ioquake/ioq3/pull/36

2017-02-01-01
    Redundant #ifndef MISSIONPACK block

    MISSIONPACK define is already required for this file or else it triggers an #error at the top of the file - removing redundant test that will never occur.

2017-02-02-01 ...too much MISSIONPACK ifdeffery.

2017-02-19-01
    Fix source filename/includepath length in l_precomp.c

    source_t filename and includepath are 1024 but MAX_PATH is 64. As far as
    I know the paths don't exceed that so this probably doesn't fix anything.
    Similar changes were already made to l_script.c so this makes things
    consistent. This was found because it was fixed in RTCW's code.

2017-02-22-01
    Fix command line variables not being set correctly

    +seta, +sets, and +setu were ignored because Com_AddStartupCommands
    thought Com_StartupVariable handled it.

    +set didn't allow value to be multiple tokens which due to Unix shell
    unintuitively removing quotes causes the variable to only be set to
    the first token. This could be worked around by escaping quotes

        ioq3ded +set g_motd \"hello world\"

    but it doesn't match behavior of other start up commands (which now
    includes seta, sets, and setu) that use all tokens.

2017-02-27-01
    Fix swapping AAS bboxes

    Found in RTCW SP.

2017-03-12-01
    Don't include (mission)pak_checksums in standalone build

    Avoids a compiler warning

2017-03-13-01 Don't load .pk3s as .dlls, and don't load user config files from .pk3s.

2017-03-13-02 Don't open .pk3 files as OpenAL drivers.

2017-03-13-03
    Merge some file writing extension checks from OpenJK.

    Thanks Ensiform.
    https://github.com/JACoders/OpenJK/commit/05928a57f9e4aae15a3bd0
    https://github.com/JACoders/OpenJK/commit/ef124fd0fc48af164581176

2017-03-17-01
    Remove FS_Read2().

    Functionally the same as FS_Read().
    Streaming functionality was removed in https://github.com/ioquake/ioq3/commit/672cfbf16f83fb67f6ce9bb1d3571dc32a5b3083 but flag remained.

2017-03-23-01 Makefile: using generic windres if specific one is not present in mingw patform

2017-03-23-02
    Merge pull request #277 from em92/master

    Fallback to generic a windres if a cross compiler one cannot be found

2017-03-27-01
    Fill in filename in Com_WriteConfig_f() before checking extension.

    Thanks BartoCH for pointing out.

2017-03-27-02 Do not pull CFLAGS into BASE_CFLAGS on FreeBSD
2017-03-27-03 Use -On level from CFLAGS on FreeBSD

2017-03-28-01
    Merge pull request #279 from lonkamikaze/freebsd-build

    Freebsd build

2017-03-30-01
    Fix build when cloned as submodule

    Steps to reproduce:

        git init
        git submodule add -b master git://github.com/ioquake/ioq3.git
        cd ioq3
        make USE_GIT=1

2017-03-30-02
    Merge pull request #282 from h3xx/fix-git-dependency

    Fix build when cloned as submodule

2017-04-07-01 Add missing RegCloseKey to Sys_SteamPath
2017-04-07-02 Detect GOG install path

2017-04-07-03
    Merge pull request #286 from maxcrofts/install-path

    Update install path detection

2017-04-12-01
    Improve FS_GetModList

    - Paths to search for mods are now specified in an array

    - Mods can now consist solely of ".pk3dir" folders and still be
    considered valid

    - The function now has a consistent style

2017-04-12-02
    Merge pull request #288 from maxcrofts/list-pk3dir-mods

    Improve FS_GetModList

2017-04-12-03
    Don't start a vote after vote passed for map change

    Processing a callvote command after a vote passed to change maps but
    has not been executed yet will result in 1) map change immediately
    happening 2) after new map loads players have vote HUD messages but
    Game VM doesn't have a vote in progress. The phantom vote status will
    only be removed if players start a new vote or run vid_restart.

    The underlying issue is that a second callvote sets vote config
    strings but a map change is executed before they are sent to clients.
    Resulting in clients getting "cs" reliable commands with the config
    string changes _after_ the map change. Out of sync config strings.

    Even if the underlying issue was fixed, the second vote would be lost.
    So it's best to not force a map change to happen immediately anyway.

    Reported by Tobias Kuehnhammer.

2017-04-20-01
    Delete BUGS

    This was a thing?

2017-04-20-02
    Delete NotToDo

    This is also an antiquated notion.

2017-04-28-01
    Add vao cache for static surfaces

    Remove support for draw range elements, multi draw arrays, world vao creation, surface merging.

2017-05-23-01 no (still using speex for demo playback):  Remove libspeex from README

2017-05-23-02 no (still using speex for demo playback):  Remove unused libspeex

2017-05-23-03 Update libogg from 1.3.1 to 1.3.2

2017-05-23-04 Rename (already updated) libogg-1.3.1 to libogg-1.3.2

2017-05-23-05 Update libvorbis from 1.3.4 to 1.3.5

2017-05-23-06 Rename (already updated) libvorbis-1.3.4 to libvorbis-1.3.5

2017-05-23-07
    Update opus from 1.1 to 1.1.4

    Define FLOAT_APPROX in Makefile and misc/msvc12/quake3.vcxproj.

2017-05-23-08 Rename (already updated) opus-1.1 to opus-1.1.4
2017-05-23-09 Update opusfile 0.5 to 0.8

2017-05-23-10 Rename (already updated) opusfile-0.5 to opusfile-0.8

2017-05-24-01 Fix compiling when KEY_WOW64_32KEY is missing from system headers

2017-05-24-02
    Don't load libraries with non-standard file extensions

    Also don't allow writting files ending in a library extension such
    as ".so.0" or ".dylib.0".

2017-05-24-03
    Check for truncated paths in Sys_LoadDll

    Check for truncated paths which could allow loading a library with
    a non-standard extension. Also provides a better message for why a
    valid library with a long path would fail to load.

2017-05-24-04
    Merge pull request #270 from mickael9/unused-warning

    Don't include (mission)pak_checksums in standalone build

2017-05-24-05
    Save connect and playdemo argument before calling CL_Disconnect()

    Save argument instead of using a pointer to cmd token memory that
    might be overwritten when Cmd_TokenizeString() is called.

    No known method for causing the issue without engine changes.
    Cmd_TokenizeString() is called by FS_PureServerSetReferencedPaks()
    in CL_Disconnect() but it's not an issue because the string is
    blank.

    Thanks @mickael9.

2017-05-24-06
    Merge pull request #198 from UniQP/deadvariable

    Remove dead variables

2017-05-24-07
    Merge pull request #199 from UniQP/typos

    Fix some typos in comments

2017-05-24-08
    Merge pull request #254 from WolfWings/patch-1

    Redundant #ifndef MISSIONPACK block

2017-05-24-09
    Merge pull request #256 from WolfWings/patch-4

    ...too much MISSIONPACK ifdeffery.

2017-05-24-10
    Fix compiling Mac OS 10.5 Universal App Bundle

    Need to be able to specify minimum Mac OS X version outside of the
    Makefile to avoid conflicting CFLAGS.
    Moved -mmacosx-version-min LDFLAGS into the Makefile.
    Moved -arch x86_64 from OPTIMIZEVM to CFLAGS to fix linker errors
    (previously make-macosx-ub.sh passed it to CFLAGS manually).

2017-05-25-01
    Allow unaligned load/store in QVM interpreter/x86 compiler
     constructions like (dataMask & ~3) was used to protect against out-of-bound load/store when address is 4-byte closer to dataMask
     but at the same time it effectively cut low address bits for ALL load/store operations which is totally wrong in terms of conformance to ALLOWED (i.e. generated by q3lcc from C sources) low-level operations like packed binary data parsing

2017-05-25-02 Fix comment

2017-05-25-03 Initial shot at writing an ioquake3 autoupdater.

2017-05-25-04 autoupdater should build with $(CC), not $(TOOLS_CC), in Makefile.

2017-05-25-05 Removed extraneous '\' in Makefile in autoupdater source file list.

2017-05-26-01 Fix dllHandle possibly being uninitialized in Sys_LoadDll

2017-05-29-01 Fix compiling debug code for writing VoIP data

2017-05-29-02
    Don't repeat alt+enter key event

    Holding alt+enter should not continuously toggle fullscreen mode.

2017-05-30-01 Fixed -Wstrict-prototypes warning.

2017-05-30-02 Fixed failure to link libcurl on some platforms.

2017-05-30-03 Cleanup in failures a little better.

2017-05-30-04
    Refresh master server address cache every 24 hours

    Resolve master server addresses every 24 hours instead of keeping
    result forever. Don't clear sv_master[1-5] cvar if the address fails
    to resolve; it might work later.

2017-05-30-05
    Don't link directly to libcurl.

    Lots of Linux distros have different names (libcurl-gnutls.so vs etc), and
    version the symbols (curl_global_init@@CURL_LIBSSL_3), so it's more compatible
    to just dlsym the basic entry points we need and just demand that libcurl is
    installed at all.

    Alternately: we'll use our own libcurl build, but we'll probably have to dump
    SSL support to make this sane to do.

2017-05-30-06 Don't fclose(NULL) if a file doesn't exist.

2017-05-31-01
    Initial Windows autoupdater support: the ioq3 internal bits.

    This is just the piece that will launch the autoupdater; the autoupdater
    itself will be a separate commit.

2017-05-31-02 Fix tabs vs spaces.

2017-05-31-03
    Move the autoupdater launcher into its own public domain source file.

    So other games can steal this piece if they want.

2017-05-31-04 Fixed up some types in sha256.*

2017-06-01-01 ioquake3 calls this arch "x86" and not "i386".

2017-06-01-02 Fully initialize ManifestItems (rollback, etc, was uninitialized before!).

2017-06-01-03
    Make server browser default to Internet

    The default use to be local. In q3_ui you have to press spacebar or
    wait for scan to time out before you can switch to Internet.

2017-06-01-04
    Automatically get initial Internet servers in Team Arena UI

    Having to manually request the list, with two buttons (get new
    list, refresh list) is somewhat confusing. Also since it looks
    like there are no servers, users might not try to figure out
    how to get the server list.

    The first time viewing a master server list in Team Arena UI,
    automatically request a new server list. After that the cache
    will be available with a timestamp of the last refresh time.
    I think this will make it easier to understand how the menu
    works.

    This may cause unneeded updating of the server cache because the
    last refresh timestamp is per-fs_game but the server cache is
    shared by all games. This will only occur once for each game
    though so it's not a big concern.

2017-06-01-05 Replace constant value with UIAS_GLOBAL1

2017-06-01-06
    Make Team Arena server list sub-sort clients by max clients

    The player column in Team Arena UI lists clients and max clients
    in format of "clients [maxclients]". When sorting by clients the
    max clients is ignored which results in player column being
    disorganized.

    When servers have the same number of clients, sort based on max
    clients. Otherwise client sort is sub-sorted based on order of
    getinfo responses (ping).

2017-06-01-07
    Fix filtering favorite servers in Team Arena UI

    Filter favorite servers based on cached server info and new info
    instead of only the cached info.

    If cached server info is filtered out, don't add it to server list
    but wait for getinfo response before marking server as invisible.

2017-06-01-08
    Fix favorite servers player count message in Team Arena UI

    The console message "1 servers listed in browser with 2 players."
    would count clients multiple times when viewing favorite servers.

    When viewing favorite servers in Team Arena UI, servers are added
    to list before getting ping response. Each time UI checked pings
    and inserted server it incremented the player count.

2017-06-01-09
    Fix levelshot displayed in Team Arena server browser

    Levelshot was not updated when server list was initially loaded or
    server list was sorted.

2017-06-01-10
    Fix hitch when opening Team Arena find friend menu

    Opening the find friend menu in the Team Arena server browser
    hitches due to trying to resolve blank host names.

    In UI_BuildFindPlayerList() status requests that are initial or
    completed state or have timed out get reset. This means it starts
    with MAX_SERVERSTATUSREQUESTS (16) blank host names. So just ignore
    them in UI_GetServerStatusInfo().

2017-06-02-01 Working Windows port of the autoupdater!

2017-06-02-02 Use stdint.h on Visual C if >= Visual Studio 2010.

2017-06-02-03 Don't fail if the game process went away before we were ready to wait for it.

2017-06-02-04 Fixed linking on things that need -ldl, and compiler warnings.

2017-06-02-05 Disable the autoupdater; enable only if intentional, like for official builds.

2017-06-02-06 Fixed comment typo: s/until/under

2017-06-02-07
    Fix joining team when starting local team play server

    AKA fix joining team in Team Arena single player. Though it also
    affects starting Q3 skirmish in team dm or ctf modes.

2017-06-02-08
    Make Team Arena win logic handle more game types/blue team

    The Team Arena menu uses red team for single player but q3_ui
    (and mods could) use blue. Also handle all the game types, not
    just the ones used by Team Arena. Fixes FFA and Team DM.

2017-06-02-09
    Fix spawn/freed entity logic (specifically harvester skulls)

    - Actually use the second 'force' pass in G_Spawn when out of
    available slots.
    - Make G_EntitiesFree return qtrue if we can open a new slot.
    (Only used when spawning Harvester skulls.)

    Fixes not spawning Harvester skulls when there are no 'open freed
    slots', but we have other slots available to open.

2017-06-02-10
    Fix "brought in 1 skulls" Harvester message

    Use correct singular/plural form of skulls for Harvester's brought in
    skulls message.

    Reported by Tobias.

2017-06-02-11
    Enable tourney scoreboard in Team Arena

    "/team score" draws an oversized scoreboard in Q3. In Team Arena
    it draws nothing. They probably intended to replace it with the
    new .menu UI. But since it didn't happen, go ahead and use the Q3
    tournament scoreboard.

2017-06-02-12
    Draw disconnect icon over lagometer in Team Arena too

    The blinking disconnect icon is drawn over lagometer in Q3.
    Team Arena moved the lagometer location. Now let's draw the
    disconnect icon over lagometer in Team Arena too!

2017-06-03-01
    Merge pull request #290 from rcgordon/autoupdater

    Initial shot at writing an ioquake3 autoupdater. Thank you icculus, and everyone who contributed to his patreon! https://www.patreon.com/icculus

2017-06-03-02 autoupdater: Fixed up GCC/clang printf function attribute.

2017-06-03-03
    Remove unneeded code from OpenGL2's RB_RenderDrawSurfList

    Make it more similar to OpenGL1.

2017-06-03-04
    Only auto update empty Team Arena internet server cache

    Previously tested a mod cvar which may be wrong when multiple
    mods are involved or config is reset. Let's check the server
    cache's internet server count directly.

2017-06-03-05 no (partial, mouse wheel already acts like arrow up/down, added to ui/ui_shared.c with this patch)
    Add mouse wheel support to UI list boxes

    Allows scrolling server browser list and some other lists.

2017-06-03-06
    Initial add of rsa_tools.

    This is just a simple RSA public key digital signature thing built on
    libtomcrypt. The gist:

    Some admin will generate a public/private key with rsa_make_keys, keeping the
    private key secret. Using the private key and rsa_sign, the admin will sign
    the autoupdater manifests, generating manifest.txt.sig.

    The public key ships with the game (adding 270 bytes to the download), the
    .sig is downloaded with the manifest by the autoupdater (256 bytes extra
    download), then the autoupdater checks the manifest against the signature
    with the public key. if the signature isn't valid (the manifest was tampered
    with or corrupt), the autoupdater refuses to continue.

    If the manifest is to be trusted, it lists sha256 checksums for every file to
    download, so there's no need to sign every file; if they can't tamper with the
    manifest, they can't tamper with any other file to be updated since the file's
    listed sha256 won't match.

    If the private key is compromised, we generate new keys and ship new
    installers, so new installations will be able to update but existing ones
    will need to do a new install to keep getting updates. Don't let the private
    key get compromised. The private key doesn't go on a public server. Maybe it
    doesn't even live on the admin's laptop hard drive.

    If the download server is compromised and serving malware, the autoupdater
    will reject it outright if they haven't compromised the private key, generated
    a new manifest, and signed it with the private key.

    libtomcrypt is sort of a big pile of source code, so instead of putting it
    in revision control, we have a script to download it. Most things don't need
    it. It lives on GitHub, so we _could_ do a git submodule, but most people
    don't need it, so why waste their disk and bandwidth? That said, when compiled
    you end up with a few hundred kilobytes of binary code to verify a signature
    and no external dependencies, so it seems like a win.

2017-06-04-01 Verify libTom source archives aren't tampered with.

2017-06-04-02 Wire up libTom stuff to build system.

2017-06-04-03 Replace sha256.c with libTomCrypt equivalent, since we'll be using it anyway.

2017-06-04-04 Autoupdater now checks RSA digital signature for manifest.

2017-06-04-05 Updated autoupdater-readme.txt with manifest signing details.

2017-06-04-06 build-rsa-tools.sh now works on Linux.
2017-06-04-07 Added .gitignore for rsa_tools directory.

2017-06-04-08 Windows support for autoupdater manifest signatures.

2017-06-04-09 Add a log message if manifest is valid.

2017-06-04-10 Use "x86_64" and not "x86-64" like everything else in ioq3.

2017-06-04-11 Removed unnecessary trailing backslash.

---- sync 2017-08-17  (rend2?) ----

2017-06-07-01 Use const char pointers when possible in botlib's libvar code
2017-06-07-02 Stop caching sv_maxclients in bot code

2017-06-07-03
    Don't use uninitialized ps from BotAI_GetClientState

    If BotAI_GetPlayerState returns qfalse, ps is untouched and in
    some cases means uninitialized. So don't use it if not valid.

2017-06-07-04 Fix 'missing token' in parsers for animations.cfg
2017-06-07-05 Unify checks for missing COM_Parse() token
2017-06-07-06 Fix comment for CG_SetInitialSnapshot

2017-06-07-07 Fix (unused) check for map restart in CG_TransitionSnapshot

2017-06-07-08 Fix Coverity warning that endVelocity is uninitialized
2017-06-07-09 Don't build score info for bots, they don't parse it

2017-06-07-10
    Fix score info being dropped by server

    Server drops reliable command string if it's length is more than 1022.

2017-06-07-11
    Show client's name in callvote clientkick vote display message

    Make callvote always kick by client num so player can't rename to
    avoid being kicked. Don't allow calling a vote to kick host or
    non-existent players.

2017-06-07-12 Don't start game entity loops at index 1
2017-06-07-13 Range check client number for trap_BotUserCommand

2017-06-07-14
    Fix overdraw in CG_DrawRect

    It was noticeable in the corners when alpha was less than 1.

2017-06-07-15 Fix comment in BotAIPredictObstacles
2017-06-07-16 Remove unneeded 'angles' variables/clearing in ai_dmq3.c
2017-06-07-17 Don't copy p->org to itself in cg_particles.c
2017-06-07-18 Remove unused define MAX_COMMANDARGUMENTS from be_ea.c

2017-06-07-19
    Make bots stop attacking player after disconnect

    Bots did not notice player disconnected, so they kept attacking
    the last known position.

    Checking if entity is valid in BotEntityVisible might fix other
    similar issues too.

2017-06-07-20
    Fix notarget cheat

    Bots no longer target players in 'no target mode'.

2017-06-07-21
    Fix strncpy usage in botlib

    All usage of strncpy in botlib should now either set string
    terminator or use Q_strncpyz.

2017-06-07-22 (not con_autochat, have cl_consoleAsChat):  Add con_autochat and con_autoclear cvars

2017-06-10-01
    Only allow connectionless print/echo from server/rcon address

    Reported by Ensiform.

2017-06-10-02 Merge pull request #293 from rcgordon/autoupdater-rsa-signature

2017-06-16-01 OpenGL2: Remove SF_VAO_MESH.

2017-06-22-01
    Fix g_teamAutoJoin and g_teamForceBalance

    There are various issues caused by not knowing the initial team for
    the local client and bots when they connect. This is can be reproduced
    by starting a team game from the main menu.

    When g_teamAutoJoin is enabled, bots and local client join a random
    team at connect and then execute their team command a few frames
    later. This may result in the player being killed if they specify a
    different team. In Team Arena's Harvester mode this causes harvester
    skulls to be spawned at the beginning of the game.

    When g_teamForceBalance is enabled, the local client and bots may not
    be able to join their desired team. This may result in them being
    spectators. If g_teamAutoJoin is also enabled they may be left on
    the opposite (red/blue) team they were meant to join.

    There is a hack for including bot's team in their player info string
    (used by cgame for which team skin to use) before the bot joins
    their desired team. Bots aren't guaranteed to join their desired team
    (as may happen when both g_teamAutoJoin and g_teamForceBalance are
    enabled) so clients may see them as being on the wrong team!

    ----

    Add teampref userinfo option for team preference. If teampref is set
    it will be used for attempting to join the team immediately at connect.

    Bots now join team at connect using teampref userinfo. So remove
    the hack for setting bot's team in player info string before the bot
    joins the team.

    To avoid the client sending teampref userinfo to all network servers,
    the local client uses a g_localTeamPref cvar. The g_localTeamPref
    cvar is cleared after it's used so it doesn't get used when starting
    another server later. Another reason not to use a teampref userinfo
    cvar is there isn't a reliable way to clear it in CGame/UI which are
    likely loaded from baseq3 pk3.

    Make it so g_teamAutoJoin doesn't affect clients who specify
    teampref. If teampref is invalid, the client will join a random team
    like g_teamAutoJoin.

    Don't apply g_teamForceBalance to the local client or bots. Otherwise
    they may be left as spectators when starting team game from menu.

    The start server menus use team command and g_localTeamPref to set
    the human player's team. This way it's compatible with vanilla Q3
    game VMs and the new setting team at connect feature.

2017-06-24-01
    Fix Team Arena team base models not dropping to floor

    Team Arena's Overload gametype has red and blue team Obelisk base
    objects. It uses separate entities for visual and damage. Only the
    damageable entity was dropped to floor. Leaving model floating off
    the ground.

    Team Arena's Harvester base has the same problem. Model entity
    floats in air but trigger entity drops to floor.

    Drop all Team Arena team base models to floor. Fixes CTF, 1Flag,
    Overload, and Harvester base models.

2017-06-24-02
    Make cg_teamChatsOnly only affect team gametypes

    Also made it so that 'tell voice chats' are always allowed for
    consistancy with 'tell chat'.

    Reported by Tobias Kuehnhammer.

2017-06-24-03
    Check for unlimited time power up using INT_MAX

    It is possible for a power up to exceed 999 seconds without it being
    unlimited time.

2017-06-24-04 no:
    Have spectator always be in first person

    Flying around in third person with no body is weird.

2017-06-24-05 Allow spectators to use noclip cheat

2017-06-24-06
    travis-ci: Don't run coverity_scan on master branch

    Once the weekly limit for Coverity scan is reached all builds exit
    success without compiling.

2017-06-24-07 travis-ci: Upgrade to docker build system

2017-06-29-01 Split G_AddRandomBot into multiple functions

2017-06-29-02
    Make 'addbot random' command select a random bot info

    It reuses the random bot selection code for bot_minplayers cvar.

2017-06-29-03
    Fix random bot not looking for bots by funname

    Quake 3's Anarki bot has a 'funname' with colors in it.
    This commit fixes Anarki not being detected as in use.

2017-06-29-04 Fix bot_minplayers passing delay as team to addbot in non-team gametypes

2017-06-29-05
    Fix not adding random bot when all bot info are in use on team

    If there are two bot infos in scripts/bots.txt then each team can
    only add two random bots via bot_minplayers or addbot random.

    Pick random bot info from least used bot infos instead of only ones
    that are used by zero players. That way a random bot can always be
    added to the game.

    This rarely affected Quake 3 since there is 32 bot infos. It could
    easily affect new games though.

2017-06-29-06
    Check delayed bot's team when counting bots for bot_minplayers

    note: This requires my previous commit that added teampref userinfo
    so that bots choose correct team in ClientConnect.

2017-06-29-07
    Fix duplicate (delayed) random bots being choosen

    Count delayed bots when looking for least used bot infos for deciding
    which bot to add.

2017-06-29-08
    Don't pick duplicate random bots until all bot types are added

    Don't add the same bot to multiple teams until there are as many
    bots on the server as there are bot types.

    Previously each team would have unique bots until all bot types
    were added to the team but other teams may have the same bot. Now
    there will not be any duplicate bots until there are more bots than
    bot types.

    Now Quake 3 (32 bot types) in 16 vs 16 bot CTF will not contain
    duplicate bot types. (You have to increase memory in code/game/
    g_mem.c in order to add 32 bots though.)

    I had to change G_AddRandomBot() to use 'addbot random' or else the
    same bot could be added to red and blue teams. The bot was selected
    and stored in console command buffer so game doesn't know not to
    select the bot again.

2017-06-29-09
    Add range check for bot skill in addbot command

    Adding a bot with skill of 0 doesn't show icon on hud.

2017-06-29-10 Add 'addbot random' to README

2017-06-29-11 OpenGL2: Fix checking r_shadowCascadeZFar pointer instead of value

2017-06-30-01
    OpenGL2: Fix black planar projection shadows (cg_shadows 3)

    Restore MD3 code for cg_shadows 2 and 3 like other model formats.
    Fix planar projection shadow deform (cg_shadows 3) to use correct
    light direction. I fixed light direction for stencil shadows
    (cg_shadows 2) but it's still broken.

2017-06-30-02
    OpenGL2: Draw sun shadows for first person IQM player models

    This makes IQM have the same behavior as MD3 and MDR.

2017-07-01-01 Fix q3_ui cursor going off screen in widescreen
2017-07-01-02 Make Team Arena UI aspect correct in widescreen

2017-07-01-03
    Make UI continue searching for local servers until found

    When refreshing local servers, Team Arean UI never changed the status
    message when it timed out. This gave a false impression it was still
    looking for servers.

    Let's continue looking for local servers in q3_ui and Team Arena UI
    until one is found.

2017-07-01-04
    Allow changing q3_ui server source during refresh

    This makes it easier to scroll through the list, especially since
    "Local" source now refreshes until a local server is found.

2017-07-01-05
    Fix nonresponsive favorites in q3_ui having no hostname

    ArenaServers_InsertFavorites() fails to do anything because favorites
    are added to the server list even if nonresponsive.

    Set nonresponsive favorite server hostname to address.

2017-07-02-01 OpenGL2: Remove two unused cvars and update readme
2017-07-02-02 Add warnings for animMap and videoMap shader keywords

2017-07-04-01
    Allow more than 32 surfaces in skin files

    Models don't have a surface limit; skins shouldn't either. Some player
    models require more than 32 surfaces since vanilla Quake 3 did not
    enforce the limit.

    Skins are now limited to 256 surfaces because having no limit would
    require parsing the skin file twice. The skin surfaces are dynamically
    allocated so it doesn't increase memory usage when less surfaces
    are used.

2017-07-04-02 Improve warning for too many skin surfaces

2017-07-08-01
    Fix set-but-not-used variable warnings in vm_armv7l.c

    offsidx and const_value were set but not used.

2017-07-09-01 (done: using Q_fabs() instead of fabs()):  Fix warning about using abs() with floats (#222)
2017-07-09-02 Fix more maybe-uninitialized warnings in opusfile
2017-07-09-03 (done):  Fix misleading-indentation warnings in cl_cin.c

2017-07-13-01 OpenGL2: Use an OpenGL 3.2 core context if available.

2017-07-13-02
    OpenGL2: Remove GLSL_ValidateProgram().

    https://stackoverflow.com/questions/39761456/why-does-glvalidateprogram-fail-when-no-vao-is-bound

2017-07-14-01 OpenGL2: Don't do MSAA resolve/shadow mask/SSAO on shadow views.

2017-07-14-02 OpenGL2: "Fix" cg_shadows 4.
2017-07-14-03 whoops, left a bit of debugging enabled

2017-07-14-04
    Fix score bonus for defending the flag carrier in CTF

    Fix copy-paste error in the original Quake 3 code. The wrong values
    are used for v1 and v2. v2 was previously set to distance of attacker
    to flag base; which should be handled already.

    The game now gives defense score bonus to player when they frag an
    enemy near their team's flag carrier while the player is more than
    1000 units from the flag carrier.

    This may also fix not giving defense bonus when near carrier due to
    checking if carrier and enemy (instead of attacker) are in PVS.

    Found by @Razish.

2017-07-14-05
    Restore not giving defense score bonus to flag carrier

    The Team Arena code for giving defense bonus for fragging player
    who recently damaged a skull carrier unintentionally applied to
    the flag carrier.

    The skull carrier case would of been handled by the flag carrier
    block above it. However, Harvest mode doesn't call
    Team_CheckHurtCarrier() so the skull carrier defense bonus does
    not work.

    This restores the pre-Team Arena behavior of not giving defense
    score bonus to flag carrier.

2017-07-14-05
    Add score bonus for defending the flag carrier in 1 Flag CTF

    Set flag_pw to neutral flag instead of using CTF value for red or
    blue flag so that flag carrier is detected correctly.

2017-07-14-06 Move CON_Init ahead of Com_Init to avoid Windows dedicated server crash

2017-07-20-01
    Make 'globalservers 0' fetch all masters

    This commit fixes the vanilla Q3 UI VMs not displaying a server list
    when id Software's master server is down.

    Originally master 0 for the globalservers command was Internet and
    master 1 was MPlayer (defunct). In 2008 ioquake3 changed it so that
    master 0 to 4 were five separate master servers with no affect on
    original Quake3/Team Arena UI VMs; they continued to get the server
    list from master.quake3arena.com.

    id Software's master server (master.quake3arena.com) goes down
    occasionally. Using ioq3's UI VM additional master servers can be
    accessed but players using the original UI VMs are unable to get a
    server list.

    In order to fix the original UI VMs in Quake3/Team Arena's pk3s this
    commit makes 'globalservers 0' fetch all master servers. So players
    get a combined list of id Software's and ioquake3's master list. Or
    just ioquake3's list if id Software's master is down.

    Getting lists from individual master servers using globalservers has
    changed from 0 through 4 to 1 through 5 to accommodate using 0 for
    other purposes. This commit modifies ioq3's UI code to support the new
    values for globalservers command.

    A side affect of these changes is that UI VMs based on ioq3 since 2008
    will have Internet1 fetch all master servers and Internet2 request
    sv_master1 instead of sv_master2 and so on. It may be worth noting that
    getting server list from masters 3-5 could not be done using ioq3's UI
    before 2011.

2017-07-20-02
    Escape quotes for sv_dlURL in shell so it doesn't become "http:"

        q3ded +set sv_dlURL "http://example.org"

    The shell removes the quotes but makes the content be a single argument
    for progam args. Quake 3 concatenates all the program args and splits
    lines at + or newlines. Then Quake 3 parses them using a tokenizer
    that skips unquoted C comments beginning with //. This results in
    the cvar being set to "http:".

    Escape the quotes so they are passed to the program and the tokenizer
    knows not to skip C comments.

        q3ded +set sv_dlURL \"http://example.org\"

2017-07-24-01
    OpenGL2: Don't use initialized arrays in glsl shaders.

    Unsupported in GLSL 1.20 (Mac OS X 10.6)

2017-07-24-02 Echo server say/tell/sayto message to console

2017-07-27-01
    Don't try to remove non-existant command 'shaderstate'

    Remove commands in the order they are added because the different
    orders is annoying.

2017-07-28-01 Update internal curl to 7.54.0
2017-07-28-02 Workaround Travis-CI MinGW builds failing with new cURL

2017-07-28-03
    Silence g_util.c warning about set but not read variable

    Probably caused by my commit on June 2 2017.

      commit 4006358492b800db0602ed0eca600166caec22e4
      Fix spawn/freed entity logic (specifically harvester skulls)

2017-07-30-01 Remove unused imgFlag_t value IMGFLAG_SRGB

2017-07-31-01
    Make warmup in Team Deathmatch wait for players to join both teams

    Reported by Cyrax.

2017-08-01-01
    Remove CVAR_PROTECTED from cl_renderer

    Setting cl_renderer isn't a security concern and valid behavior for
    a menu to provide. Sys_LoadDLL ensures only libries are loaded and
    engine prevents QVMs from writing them.

2017-08-02-01
    Fix/improve buffer overflow in MSG_ReadBits/MSG_WriteBits

    Prevent reading past end of message in MSG_ReadBits. If read past
    end of msg->data buffer (16348 bytes) the engine could SEGFAULT.
    Make MSG_WriteBits use an exact buffer overflow check instead of
    possibly failing with a few bytes left.

2017-08-02-02
    Fix friction in AAS_ClientMovementPrediction

    Ground and water friction were reversed.

2017-08-02-03
    Fix floating point precision loss in renderer [part 1]

    Patch for https://bugzilla.icculus.org/show_bug.cgi?id=5931 by
    Eugene C. from 2013 plus recent fix for tcMod rotate.

    I merged the changes into the OpenGL2 renderer though the fix for
    tcMod turb doesn't translate.

2017-08-02-04

    Fix floating point precision loss in renderer [part 2]

    Fix floatTime using float precision instead of double using GCC.
    Fix R_BindAnimatedImage to be in sync with function table.
    Fix vertexDeform bulge, vertexDeform normals, noise wave function
    at high level time.

    Revert unnecessary float -> double conversions.

2017-08-03-01 Reject OpenGL contexts w/ software renderer when core context requested.

2017-08-07-01 Update arch in misc/setup for ioq3 changing from i386 to x86

2017-08-07-02 OpenGL2: Use extension functions with OpenGL versions before 3.0.

2017-08-08-01 OpenGL2: Force VAO usage on OpenGL 3.0+

2017-08-09-01 Add spawnflags to QUAKED for trigger_multiple

2017-08-09-02
    Check for all command separators in callTeamVote

    Make callTeamVote check for all command separators like in callVote.
    It's not exploitable as the only vote option (leader) always uses an
    integer argument.

    Also the ioquake3 engine remove command separators from client game
    commands in Cmd_Args_Sanitize().

2017-08-09-03
    Remove newlines from chat messages in Game VM

    This has no affect due to ioquake3 engine already removing command
    separators (which includes newlines) in Cmd_Args_Sanitize().

2017-08-09-04 Fix compiling Cmd_CallTeamVote_f

2017-08-16-01
    Only allow safe protocols for cURL downloads

    A malicious server could abuse dangerous protocols such as gopher:// to,
    for instance, send mail via SMTP.

----------------------

2017-08-19-01
    Fix crash when pmove_msec is 0

    When pmove_fixed is set to 1, setting pmove_msec to 0 would crash.

2017-08-21-01
    Combine mouse movement events in event queue

    Fixes 'Com_QueueEvent: overflow' spam after hitch / map load.

    Based on patch by @ec-.

2017-08-21-02
    Improve keys using international key layouts

    Always map number row to number keys for AZERTY.
    Map Unicode character keys to world keys using scan code.

    Based on patches by @mickael9.

2017-08-21-03
    Improve client input responsiveness

    Move sampling input to the other side of framerate limiter.

    Thanks to Alexander "wareya" Nadeau and Juraj "youurayy" Vitko for
    pointing this out.

2017-08-21-04
    Removing input functions from sys_local.h for last commit

    It helps to actually save files before making commits.

2017-08-21-05
    Make input events use earliest possible time

    SDL doesn't provide exact the exact time that input events happen
    so use the earliest possible time that an event could happen.

    This make sub-frame input actions such as walking take affect
    immediately instead of in the next frame.

    Based on patch by Alexander "wareya" Nadeau.

2017-08-26-01
    Make bots use crusher on other q3tourney6 maps

    Make bots activate crusher on q3tourney6_ctf and mpq3tourney6.

    Check if player is inside the crush bounds instead of below the
    crusher. There is a jumppad the goes under it in mpq3tourney6.

2017-08-26-02
    Make bots only use q3tourney6 crusher to kill their enemy

    Only use the crusher for killing the bot's enemy. This doesn't
    affect 1v1 very much but prevents the whole team of bots in CTF
    from suddenly shooting at the crusher button. Entering the crusher
    bounds was basically instant death.

2017-09-02-01
    Fix going to previous browser source in q3_ui

    It wasn't possible to go to previous source from favorites if
    sv_master5 cvar wasn't set.

2017-09-02-02
    Make map names in q3_ui map select menu be uppercase

    Makes map names match on both pages of start server menu.

2017-09-02-03
    Limit ui_smallFont/ui_bigFont/cg_noTaunt cvars to missionpack

    ui_smallFont and ui_bigFont are for missionpack HUD font size
    selection. cg_noTaunt disables missionpack taunt voice chats.

2017-09-02-04
    Fix team chat box for spectators

    Make spectators use green background for team chat box when following
    players. The team chat messages are from spectators not the team of
    the followed player.

    Make spectators draw team chat box even when not following a player.

2017-09-02-05
    Don't draw crosshair 0 in Team Arena setup menu

    Don't draw crosshair 0 in Team Arena setup menu. It isn't drawn
    in CGame. Wrap cg_drawCrosshair in missionpack menu like CGame
    instead of treating as index 0 which is no longer drawn.

2017-09-04-01
    Make client for Windows x86_64 use OpenAL64.dll by default

    ioquake3.x86_64.exe can't load x86 OpenAL32.dll. Using separate
    library names allows shipping OpenAL for both architectures.

    Though since the dll name is saved in the config file, using both
    clients on the same computer will cause one client arch to always
    try to load the wrong OpenAL dll and then fallback to the correct
    default OpenAL dll. I guess it could be fixed by using separate
    cvar names for s_alDriver.

2017-09-07-01
    Fix loading renderer DLLs on Windows x86

    After 'Fix floating point precision loss in renderer', Windows x86
    client won't load the renderer DLLs. The problem is a 64 bit modulus.
    I couldn't find any reports of this online. However, client with
    built-in renderer worked with the 64 bit modulus.

    Only tested with mingw-w64.

2017-09-07-02
    Add Windows application manifest

    - Use common controls 6 so error dialogs use correct visuals on
    Windows XP or later!
    - Specify running as invoker so Windows doesn't guess if it should
    prompt for admin permission on Vista or later.
    - Specify compatible with Vista through Windows 10. Tells Windows
    not to emulate Vista behavior, not sure if it affects anything.

    Makefile automatically runs windres when manifest changes.

2017-09-07-03
    Disable DPI scaling on Windows

    Windows DPI scaling prevents using full monitor resolution in
    fullscreen mode.

2017-09-10-01 ignore window resize event on fullscreen

2017-09-10-02
    Merge pull request #310 from em92/sceenlooping-bugfix

    ignore window resize event on fullscreen

2017-09-09-01
    Don't reload arenas.txt/*.arena files in Team Arena UI

    Entering Team Arena's start server or in-game callvote menu causes
    arenas to be reloaded. The existing memory is not freed so after
    a entering the menus a few times the UI runs out of memory and
    crashes.

    Just load arenas once when the UI loads like in q3_ui.

2017-09-09-02 Fix crash when out of memory in Team Arena's String_Alloc

2017-09-10-01
    Fix in_nograb not releasing the mouse cursor

    Disable SDL relative mouse mode when in_nograb is enabled. Relative
    mouse mode hides the cursor and it cannot exit the window regardless
    of the window's grab state.

    This wasn't always the case. SDL before 2.0.4 on GNU/Linux released
    the mouse cursor in relative mode. However, SDL 2.0.3/4 on Windows
    does not. (I did not test other Windows versions.) So I think SDL
    2.0.4 made GNU/Linux X11 behavior consistent with other platforms.

    This fixes mouse input being unusable when debuging client crashes
    in gdb.

2017-09-10-02
    Update UI player animation handling to match CGame

    Fix "Error parsing animation file" messages in UI. Caused by fixing the
    handling of missing tokens in animation.cfg parser in a past commit.
    Fix new Team Arena torso animation frame numbers in UI.
    Add support for fixedtorso and fixedlegs keywords.
    Add support for reversed animations (negative numframes).

2017-09-14-01
    Fix specifying minimum mac os version in make-macosx.sh

    Use newer method of telling Makefile instead of specifying CFLAGS
    and LDFLAGS which results in using both Makefile's and scripts flags.

2017-09-14-02
    Fix minimum macOS version not being set in AppBundle Info.plist

    make-macosx-app.sh reads MACOSX_DEPLOYMENT_TARGET variable but
    it wasn't ever set.

2017-09-15-01
    Fix listen server sending snapshots each client frame

    Running a server using the client engine would send server snapshots
    to loopback and LAN clients each client frame (com_maxfps).

    This causes excessive network traffic and likely does not provide new
    information to the clients because SV_Frame() won't have run between
    the extra snapshots.

    This commit restores the original behavior of respecting local/LAN
    client's snaps userinfo and sv_fps. The issue was introduced by the
    following commit:

        Commit ac30d86db01a43130d2c9ff6fe31d6135d8e2592
        From: Thilo Schulz
        Date: Wed, 13 Jul 2011 17:11:30 +0000
        Subject: - Improve snapshot rate and data rate control

    Reported by Eugene C.

2017-09-23-01
    Enable Ogg Vorbis support by default

    libvorbis is included in-tree so this doesn't require additional
    dependencies.

2017-09-26-01
    Statically link libgcc on Windows

    Fix for ioq3 test builds for Windows x86 (cross-compiled from Ubuntu
    using mingw-w64) requiring libgcc_s_sjlj-1.dll. I'm unable to reproduce
    the issue using mingw-w64 in Debian or Cygwin.

2017-09-29-01
    Fix hit accuracy stats for lightning gun and shotgun kills

    If a lightning bolt killed a player or the first shotgun pellet that
    hit a player killed them, the shot was not counted as accurate.

    Check if shot player is alive for hit accuracy before dealing damage.

2017-10-01-01
    Don't link to libGL at compile time

    Get all OpenGL functions using SDL_GL_GetProcAddress(). This makes it
    easier to cross-arch compile on Linux and add support for OpenGL ES
    in the future.

    Users still have to supply their own libSDL2 for cross-arch compiling
    on Linux. But now the user does not have to re-install libgl1-mesa-dev
    package for i386 or amd64 on Debian when switching between compiling
    ioquake3 for x86 and x86_64.

2017-10-01-02
    Add common OpenGL version parsing + OpenGL 3 fixes

    - Parse OpenGL version in sdl_glimp.c to share with both renderers.
    - Add GL_VERSION_ATLEAST(major, minor) macro.
    - Get address of glGetStringi if using OpenGL 3.
    - Fix glConfig.extensions_string when using GL3 core context in
    opengl2 renderer.
    - Make opengl1 renderer's gfxinfo support qglGetStringi too.

2017-10-01-03
    Support parsing OpenGL ES version strings

    The renderers don't support OpenGL ES though.

2017-10-02-01
    Fix setting cflags/libs from sdl2-config

    SDL_CFLAGS and SDL_LIBS assignment was "only if absent". However due
    to previously assigning them to "pkg-config sdl2" values, the values
    from sdl2-config were ignored.

2017-10-02-02 Load OpenGL ES 1.1 function procs

2017-10-03-01
    [qcommon] Use unsigned types where wrapping arithmetic is intended

    The use of signed types in these expressions lead to overflow, hence undefined behaviour. The "sum" aggregator in Com_TouchMemory isn't even used (and presumbably just exists to inhibit optimizations from removing the memory access).

2017-10-02-01
    OpenGL2: Fix brightness when r_autoExposure is disabled

    The game world is too dark when r_autoExposure is disabled. It can be
    fixed by setting (cheat) r_cameraExposure to 1 but then the game is
    too bright when r_autoExposure is enabled. So default r_cameraExposure
    to 1 and make auto exposure subtract 1 from r_cameraExposure value.

2017-10-04-01
    OpenGL2: Fix MD3 surface with zero shaders dividing by zero

    Reported by @DescX.

2017-10-05-01
    [botlib/be_aas_def.h] Change array size from MAX_PATH to MAX_QPATH

    The array is part of a structure and should have a fixed size that does
    not depend on inclusion order.

2017-10-04-01 Don't redefine MAX_PATH in bot code

2017-10-07-01 Fix memory leak in (unused) AAS_FloodAreas()

2017-10-07-02
    Fix compiling GLSL shaders under Windows.

    Now the `sed` command cope with files using Windows-style line endings.

2017-10-07-03
    Only draw cm_patch/bot debug polygons in world scenes

    Fixes debug polygons appearing in HUD head model scene.

2017-10-08-01 Fix reading crash log when log wraps around buffer

2017-10-08-02 Don't send team overlay info to bots

2017-10-16-01
    Fix a race condition in the makedirs target

    A race condition can happen when running "make all" with parallel jobs.

    The issue is that the build directory can be created by another
    concurrent job between the moment it was detected as missing and the
    moment mkdir is called (which fails if the directory already exists).

    This fixes the problem by always using `mkdir -p` which doesn't fail if
    the directory already exists.

2017-10-16-02
    Fix shader corruption on OpenBSD

    OpenBSD's sed (and possibly other platforms') interprets `\r` as a
    literal `r` rather than a carriage return, which leads to all `r`
    letters being stripped from the shaders' source.

    This fixes the issue by using the POSIX-compliant `tr -d '\r'` to remove
    carriage returns.

    Thanks to @ryan-sg for reporting the issue

2017-11-05-01
    OpenGL2: Use ri.Error instead of Com_Error in tr_vbo.c

    Com_Error is a wrapper for ri.Error. Use it directly.

2017-11-10-01
    Fix Team Arena server refresh time format

    Make minute less than 10 have a leading 0. Change '7:1' to '7:01'.

2017-11-10-02
    Fix -1 (unlimited) ammo decreasing ammo time remaining

    Gauntlet and Grappling Hook use -1 ammo. Gauntlet is excluded from
    the check ammo loop but Grappling Hook causes ammo time remaining
    to decrease 200 milliseconds.

    The out of ammo check tests time remaining is equal to zero. This
    means carrying Grappling Hook and out of ammo will have negative
    time remaining which results in the low ammo message being displayed
    instead of out of ammo.

2017-11-20-03 Fix my previous commit about -1 ammo

2017-11-22-01
    Improvements to the linux build script

    In no particular order:

    * Use `set -e`, because it prevents accidents, and means we can avoid
      lengthy &&-joined command chains.
    * Override defaults by setting env vars; this means people don't have to
      edit the script to change things.
    * Use an unpredictable and safely-created tmpdir for building; ain't nobody
      wants to cleanup from a tmpdir race condition attack.
    * Test for the presence of `git` and `make` *before* asking questions, and
      only prompt the user about them if they're missing.  No need to bother
      people with unnecessary reading.
    * Automatically clean up the build directory after use.
    * Tidy up some indenting that had come asunder.

2017-11-22-02 Correct spelling mistakes.

2017-11-22-03
    Correct spelling of two more words

    Thanks Undeference for pointing out abreviations.

2017-11-22-04
    Fix invalid model frame developer warnings in Team Arena

    Models for Team Arena's holdable medkit and invulnerability effects use
    the frames numbers from the player's torso but the actual models only
    have one frame (0).

2017-12-03-01 Fix GCC 6 misleading-indentation warning

2017-12-05-01 add SECURITY.md

2017-12-15-01
    OpenGL2: Restore adding fixed ambient light when HDR is enabled

    Use opengl1 renderer behavior of adding fixed amount of ambient light
    to all models regardless of HDR setting. It fixes the view weapon
    having zero ambient light on pillcity map.

2017-12-16-01 Few LCC memory fixes.

2017-12-16-02 fix a few potential buffer overwrite in Game VM

2017-12-16-03
    Enable compiler optimization on all macOS architectures

    It seems to improve framerate and still work on x86 and x86_64. I
    haven't tested ppc64 as I don't have the hardware. ppc64 isn't built
    into the universal bundle either.

    I noticed this because compiling opus warns it may be slow due to
    optimization being disabled.

2017-12-24-01 Don't allow qagame module to create "botlib.log" at ANY filesystem location

2017-12-23-01
    Make FS_BuildOSPath for botlib.log consistent with typical usage

    I don't think anywhere else uses "" to mean current game directory.
    Though it's only an issue for my fork where I removed that behavior.

2018-01-07-01 tiny readme thing

2018-01-14-01
    Remove extra plus sign from Huff_Compress()

    There was an extra plus sign in Huff_Compress(). It wasn't causing any
    issues as it does not affect the generated code. Removing it makes the
    source code the same as Huff_Decompress().

    The odd source code was brought to my attention by Tobias Kuehnhammer.

2018-01-16-01
    Change shift expressions to unsigned types. Shifting signed values to
    a result that is not representable has undefined behaviour.

2018-01-16-02
    Use standard offsetof facility. Dereferencing a null pointer results
    in undefined behaviour.

2018-01-21-01
    Fix VMs being able to change CVAR_PROTECTED cvars

    VM could use Cvar_Register to set a protected cvar as user created and
    was then able to use Cvar_Register with CVAR_ROM to change the value.

    Don't allow Cvar_Register to affect protected cvars and prevent VMs
    from adding internal flags to any cvars (creator, modified, protected,
    nonexistent).

    Reported by Noah Metzger (Chomenor).

2018-01-21-02 Don't register fs_game cvar everywhere just to get the value

2018-01-21-03 (reverted):
    Don't let VMs change engine latch cvars immediately

    If a VM increases sv_maxclients while a server is running the engine
    will crash. The value should be latched until engine decides to update
    the cvar; the same as when a user sets it.

2018-01-21-04
    Fix fs_game '..' reading outside of home and base path

    VMs could set fs_game to '..' at anytime to access files outside of home
    and base path. fs_game sent by server to clients could also be '..' to
    access files outside of home and base path.

    '..' was not caught by FS_CheckDirTraversal() as it expects filenames
    not a single directory.

    I've made fs_game be latched to prevent VMs from changing it with no
    good way to validate it before it's used. com_basegame and fs_basegame
    are now latched as well.

    Additionally, it's now possible to change com_basegame while the engine
    is running. game_restart or vid_restart will make it take affect.
    com_homepath is now CVAR_PROTECTED to prevent VMs from changing it
    to a directory traversal.

    This requires my two previous commits for preventing VMs from changing
    engine latch cvars and only Cvar_Get fs_game in FS_Startup (so CVAR_INIT
    isn't added in serveral other places).

    Reported by Noah Metzger (Chomenor).

2018-01-21-05 (reverted):
    Fix VMs forcing engine latch cvar to update to latched value

    A few commits ago I stopped VM's Cvar_Set() from instantly updating
    latched values. Now VM can't call Cvar_Register() afterword to force
    latched value to be used.

    Reported by Noah Metzger (Chomenor).

2018-01-21-06
    Revert my recent cvar latch changes

    My cvar latch system changes prevent the Game VM from changing
    g_gametype when the value is out of range due to it being registed in
    the engine. It's been pointed out as fragile method of security, which
    was still exploitable, by Noah Metzger (Chomenor). It doesn't seem like
    this is working out to be a good solution.

    The issue of fs_game '..' on server being relicated on client via
    systeminfo exploit is still fixed as it's not affected by latch.
    There are a few cases from current values of fs_game are used which
    ideally should use fs_gamedir char array which has been validated.

    Revert "Don't let VMs change engine latch cvars immediately"
    Partially revert "Fix fs_game '..' reading outside of home and base path"
    Revert "Fix VMs forcing engine latch cvar to update to latched value"

2018-01-30-01
    Fix building msvc12 project

    * Don't try to embed manifest (it causes build to fail because it's
      specified in win_resource.rc).
    * Fix curl include path.
    * Compile sys_autoupdater.c.
    * Make quake3 debug link to msvcrtd.lib instead of msvcrt.lib to fix
      unresolved external symbol __imp___CrtDbgReportW.
    * Fix q3_ui dll output directory.
    * Fix opus path filter.
    * Use UseOfMfc false and CharacterSet NotSet.
    * Fix header paths and remove non-existent files.

2018-01-30-02
    Fix exploit to bypass filename restrictions on Windows

    Windows API ignores all trailing spaces and periods which can get around
    Quake 3 file system restrictions. QVM opening 'uix86.dll.' actually
    opens 'uix86.dll' which allows QVM to write native code.

    This is done in the low-level Sys_FOpen() instead of the function
    directly used by VMs ( FS_FOpenFileByMode() ) in case there are engine
    commands now or in the future that can read or write arbitrary files.

    Reported by Noah Metzger (Chomenor).

2018-02-04-01
    Changes to systemd q3a.service

    Use an absolute path as required by systemd. Distro packages will need
    to change it. (Reported by @andreyv and @zeroxfourc.)
    Link to server documentation on the wiki instead of maintaining a subset
    in the service file.

2018-02-04-02
    Fix Q_vsnprintf for mingw-w64

    By default mingw-w64 uses Microsoft's broken _vsnprintf() in msvcrt.dll.
    It can be overriden by defining __USE_MINGW_ANSI_STDIO but let's just
    use the same behavior for both MSVC and mingw-w64.

    Reported by @birdstakes.

2018-02-04-03
    Fix timelimit causing an infinite map ending loop

    A negative timelimit value or a value that would overflow the
    multiplication by 60000 caused an endless map change/reload.

    Based on patch and description by @vloup.

2018-02-04-04
    Fix invalid access to cluster 0 in AAS_AreaRouteToGoalArea()

    Newer versions of BSPC such as 2.1h included with the Quake 3 GPL source
    code create AAS files containing areas in cluster 0 if the area has no
    reachabilities.

    The AAS files included with Quake 3 and Team Arena do not contain areas
    in cluster 0. It's apparent that BSPC would not create them. Instead it
    created clusters with no reachability areas.

    It seems the intention was to check if the areanum and goalareanum have
    reachable areas using AAS_AreaReachability(areanum) everywhere before
    calling AAS_AreaRouteToGoalArea(). This prevents adding cluster 0 to
    the routing cache and portal cache. However, it is not checked
    everywhere and including some places in the Game VM.

    Fix AAS_AreaRouteToGoalArea() instead of trying to wack-a-mole with all
    the places that call it.

    Cluster 0 access reported by Thomas Köppe (github @tkoeppe) as causing
    crashes in rare cases.

2018-02-04-05
    Fix negative frag/capturelimit causing an infinite map end loop

    Reported by @vloup.

2018-02-04-06
    OpenGL2: Fix dark lightmap on shader in mpteam6

    Team Arena's mpteam6 map has a shader textures/base_wall2/space_concrete
    that contains an opaque stage, two non-lightmap blendfunc filter stages,
    a blendfunc add stage, and a lightmap stage. The lightmap was attached
    to all four of the non-lightmap stages causing the filter stages to
    darken the lightmap multiple times.

    Change setting up the lightall GLSL shader to only use lightmap if it's
    the first stage or not a blendfunc filter stage. Now only the opaque
    and blendfunc add stages of the mpteam6 shader use the lightmap.

    Reported by Alexander Nadeau (wareya).

2018-02-04-07
    Make FS_InvalidGameDir() consider subdirectories invalid

    fs_game shouldn't be a subdirectory and it simplifies the code.

2018-02-05-01 [qcommon] Remove dead serialization code

2018-02-07-01 [qcommon] Make several zone variables and functions static.

2018-02-08-01
    Fix MAC_OS_X_VERSION_MIN_REQUIRED for macOS 10.10 and later

    Manually specifying MACOSX_VERSION_MIN=10.10 or later would use the
    wrong value for MAC_OS_X_VERSION_MIN_REQUIRED define. 1100 instead of
    101000.

2018-02-11-01
    Increase q3_ui .arena filename list buffer size to 4096 bytes

    Allow listing about 273 .arena filenames for loading in q3_ui instead
    of only about 136 that fit in a 2048 byte buffer (average 15 bytes per
    file name).

    The buffer for filename list runs out of space long before the buffer
    for arena file content does. There is no warning for file list out of
    space but there is a warning for arena file content.

    This was requested by a user with many maps.

2018-02-18-01
    OpenGL2: Fix crash when BSP has deluxe maps and vertex lit surfaces

    Reported by Mickaël Thomas (mickael9).

2018-02-22-01
    Support Unicode characters greater than 0xFF in cl_consoleKeys

    Unrelated: make '0x' value be -1 (invalid) instead of 0.

    Reported by MAN-AT-ARMS.

2018-03-04-01 Fix macOS app bundle with space in name

2018-03-13-01
    OpenGL1: Use glGenTextures instead of hardcoded values

    It's the proper way to use the OpenGL API. It's already done in the
    OpenGL2 renderer.

2018-03-13-02 Remove CON_FlushIn function and where STDIN needs flushing, use tcflush POSIX function

2018-03-16-01 Update libogg from 1.3.2 to 1.3.3

2018-03-16-02 Rename (already updated) libogg-1.3.2 to libogg-1.3.3

2018-03-16-03
    Update libvorbis from 1.3.5 to 1.3.6

    * Fix CVE-2018-5146 - out-of-bounds write on codebook decoding.
    * Fix CVE-2017-14632 - free() on unitialized data
    * Fix CVE-2017-14633 - out-of-bounds read

2018-03-16-04 Rename (already updated) libvorbis-1.3.5 to libvorbis-1.3.6

2018-03-16-05 Update opus from 1.1.4 to 1.2.1

2018-03-16-06 Rename (already updated) opus-1.1.4 to opus-1.2.1

2018-03-16-07 Update opusfile from 0.8 to 0.9

2018-03-16-08 Rename (already updated) opusfile-0.8 to opusfile-0.9

2018-03-12-01
    First swing at a CONTRIBUTING.md

    Thanks to Timbo for the suggestion. This one is mostly based on the one
    from Atom.

2018-03-19-01
    Feedback from the PR

    minor edits based on feedback to the PR

2018-03-22-01
    Allow loading system OpenAL library on macOS again

    In May 2017 the library loading was limited to *.dylib but the macOS
    system OpenAL framework does not have dylib extension. So allow loading
    files from /System/Library/Frameworks/ as libraries even without dylib
    extension.

    This is checked in Sys_DllExtension() so that QVM filesystem access will
    not allow writing files to /System/Library/Frameworks/ even if homepath
    is changed to include it. (Admittedly it doesn't fit the function name
    but fits the function description and current usage.)

2018-04-03-01 Remove duplicate setting of FREETYPE_CFLAGS in Makefile

2018-04-03-02
    Fix exploit to reset player by sending wrong serverId

    If client sends wrong serverId but is already active in the world
    (CS_ACTIVE) don't resend initial gamestate for the map. This isn't a
    valid situation. The player should be CS_CONNECTED or CS_PRIMED.

    Resending gamestate to an active player will cause them to respawn
    without dying or disconnecting. If the player had a CTF flag it gets
    lost until the map is changed or restarted.

    Reported by Ensiform at:

        https://bugzilla.icculus.org/show_bug.cgi?id=6324

2018-04-03-03
    Fix "Going to CS_ZOMBIE for [clientname]" developer message

    Client name was cleared before printing the message resulting in
    a blank name.

2018-04-04-01
    Fix MSG_Read*String*() functions not being able to read last byte from message

    This is exact root of q3msgboom bug http://aluigi.altervista.org/adv/q3msgboom-adv.txt
    Unfortunately, server still need this ugly '1022 char limit' hack to support unfixed clients in some degree.
    And as it affects MSG_ReadBigString() - unfixed clients can still be crashed by 8191-chars long configstrings that comes with gamestate

2018-04-08-01
    Fix nullptr dereference in front of nullptr check in FS_CheckPak0

    Found using LLVM sanitizer. Reported by Dominic "lonkamikaze" Fandrey
    and David "devnexen" CARLIER.

2016-11-26-01 Fix undefined behaviour due to shifting signed in snd_mem.c

2018-04-08-02
    Fix shifting bits out of byte in tr_font.c

    Found using LLVM sanitizer. Reported by Dominic "lonkamikaze" Fandrey.

2016-11-26-02 Fix shift into sign in cl_cin.c

2016-11-26-03 Fix signed bit operations in MSG_ReadBits

2016-11-26-04
    Add missing address operator in cm_polylib.c

    Also avoid nullptr dereference.

2016-11-26-05 OpenGL1: Decay float[8] to float * in tr_marks.c

2016-11-27-01 Avoid srcList[-1] in snd_openal.c

2018-04-09-01
    Fix the behaviour of CVAR_LATCH|CVAR_CHEAT cvars

    Fix the output/behaviour of CVAR_CHEAT flagged cvars in case they are
    also of type CVAR_LATCH (avoid the early latch case return to make it
    work as intended).

2018-04-09-02
    Maximize cURL buffer size

    Allows higher download throughput (from ~2 MB/s to ~60 MB/s at 120FPS)

    This has no effect for curl versions older than 7.53.0 (for which the
    buffer can only be shrunk below 16k)

2018-04-08-01
    Fix mouse grab after toggling fullscreen

    cls.glconfig.isFullscreen was not updated when changing r_fullscreen
    without a vid_restart. Starting in fullscreen and switching to
    windowed mode would not release the mouse.

    Mods calling trap_GetGlconfig() after a fullscreen toggle now get
    the correct value for isFullscreen. (Note: Mods already got the
    correct value at start up and after vid_restart.)

    Reported by Mickaël "mickael9" Thomas.

2018-04-09-01
    Fix q3history buffer not cleared between mods and OOB-access

    Loading a 1024-byte q3history file will fill the whole consoleSaveBuffer
    leaving no space for a string terminator. Com_Parse will read at least
    one byte beyond the end of consoleSaveBuffer. The written console
    history file can only be 1023 bytes (enforced by Q_strcat) so don't
    allow loading size of 1024.

    If switching to a mod with a shorter q3history file, the data in
    consoleSaveBuffer that isn't overwritten will be parsed. So always
    add a string terminator.

    String not terminated reported by David "devnexen" CARLIER.

2018-04-09-02
    Revert "Removed "Color Depth" from q3_ui system settings, it didn't control
    anything."

    The r_colorbits cvar still exists and gfxinfo reports it works on
    Debian Jessie in both git master and building the commit where I
    removed r_colorbits from q3_ui. So it does indeed control something.
    Maybe I expected 16-bit color to look different? I don't know.

    This reverts my commit 8e689739f426e01b696ff346b54a6eb9a198e42e
    from August 11 2011.

2018-04-11-01
    Fix displayed color/depth/stencil bits values

    The values passed to SDL are just the minimum required. Get actually
    values of colorbits, depthbits, and stencilbits from SDL instead of
    assuming that the engine got exactly what it asked for.

2018-04-11-02
    Restore setting r_colorbits in q3_ui

    In 2007 in ioquake3 unified-sdl branch (revision 1144) setting
    r_colorbits in q3_ui was removed but the Color Depth menu option was
    still kept. Setting r_colorbits was not removed from the Team Arena UI.

    In 2011 I removed the Color Depth menu option from q3_ui as it did not
    change any cvars. Yesterday I restored the option not realizing this
    and thinking that requesting 16-bit color depth worked.

    Add setting r_colorbits back to q3_ui so Color Depth menu option works
    again. I changed Color Depth options 'Default' to reset r_stencilbits
    instead of 0 and '32 bit' to use r_stencilbits 8 instead of not changing
    the value.

    However I discovered r_colorbits 16 does not actually work on my system
    (Debian Jessie x86_64 nvidia). ioquake3 was reporting the requested
    value instead of the actual obtained value. Fixed in my previous commit.

2018-04-11-03
    Make setting r_stencilbits more consistent in Team Arena UI

    I changed Color Depth options 'Default' to reset r_stencilbits instead
    of 0 and '32 bit' to use r_stencilbits 8 instead of not changing the
    value. (This matches my q3_ui changes in the previous commit.)

    Set r_stencilbits when changing graphics presets like when changing
    Color Depth.

2018-04-12-01
    Fix map list in Team Arena start server menu after entering SP menu

    In September 2017 I moved loading arenas.txt/*.arena files from entering
    start server menu to at startup to fix running out of memory in Team Arena
    UI after opening the start server menu several times.

    However, Team Arena completely replaces the uiInfo.mapList array when
    switching between single player and start server menus. So after my
    change, entering single player and then entering start server would only
    display single player maps. It caused SP endofgame menu to use MP map
    list for replay/next map since arenas were loaded after gameinfo.txt.

    Continue loading arena info at start up to avoid reallocating arena info
    but move setting up uiInfo.mapList to when entering the start server
    menu.

2018-04-13-01
    Support SDL audio devices that require float32 samples.

    Fixes missing audio when playing on Windows with SDL 2.0.7, which started
    using WASAPI, which demands floating point audio.

2018-04-13-02
    sdl_snd.c should just initialize SDL audio without checking SDL_WasInit().

    In SDL2, the initialized subsystems are referenced counted, so it's safe to
    initialize them twice, and it makes the SDL_QuitSubSystem during our shutdown
    correctly decrement the count. Before (as a probably-harmless bug), it would
    not increment the refcount if the subsystem was already initialized, causing
    problems when it decremented it later.

2018-04-13-03 There's no need to SDL_PauseAudio(1) before calling SDL_CloseAudio().

2018-04-13-04
    Added audio capture support to SDL backend.

    This lets you speak through VoIP when not using OpenAL. Previously you could
    listen but not speak.

2018-04-13-05
    Use the SDL2 audio device interface instead of the legacy 1.2 API.

    This is a little bit of future-proofing, but also gives us a little more
    flexibility in general; now we can add in the cvars to open a specific
    device, etc, that the OpenAL codepath does.

2018-04-14-01 Disable SDL audio capture until prebuilt SDL libraries are updated to 2.0.8.

2018-04-14-02 Update SDL2 to 2.0.8

2018-04-24-01
    Add SDL 2.0.1 headers for macOS PPC

    code/libs/macosx/libSDL2-2.0.0.dylib has 2.0.8 for x86 and x86_64 and
    2.0.1 for PPC. Add 2.0.1 headers for PPC with modifed SDL_platform.h to
    allow compiling using macOS 10.5 SDK. Using separate headers allows the
    engine to check the SDL version for enabling newer SDL features.

2018-04-24-02
    Enable SDL audio capture for SDL 2.0.5 and newer

    The version check is required for supporting macOS PPC with SDL 2.0.1
    and Travis-CI (Ubuntu Trusty) with SDL 2.0.2.

    The client now requires SDL 2.0.5 runtime if compiled against SDL 2.0.5
    or newer.

2018-04-24-03
    Make macOS Universal Bundle target 10.6 for x86 and x86_64

    SDL 2.0.5 dropped support for macOS 10.5 so target 10.6 instead. The
    PPC build uses SDL 2.0.1 so it still targets 10.5. macOS 10.5 (x86,
    x86_64) should automatically run the PPC build using Rosetta.

    Revert MAN-AT-ARMS' change to SDL 2.0.8 SDL_platform.h that allowed
    targeting macOS 10.5 for the sake of PPC. It also incorrectly allowed
    x86 and x86_64 to target 10.5 as well. (Also macOS PPC uses separate
    headers now.)

2018-04-21-01 Fix possible bot goal state NULL pointer dereference

2018-04-21-02 Fix uninitialized bot_goal_t fields

2018-04-22-01 Remove unnecessary NULL pointer check in Cmd_RemoveCommand

2018-04-22-02
    Make UI_DrawProportionalString handle NULL string

    This makes the function consistent with UI_DrawString.

2018-04-24-01 Fix compiling against macOS system OpenAL and SDL2 frameworks

2018-04-26-01
    Fix array index in CanDamage() function - discovered by MARTY

    The wrong array element was accessed. However the correct element is the
    same value so fixing it does not affect gameplay.

2018-04-26-02 Fix compiling Makefile (broke in macOS frameworks commit)

2018-04-26-03
    Fix clearing keys for control in Team Arena UI

    When a control is selected for binding a key, pressing backspace would
    clear the displayed keys in the menu but not actually unbind the keys.

2018-04-26-04
    Make s_useOpenAL be CVAR_LATCH

    After changing s_useOpenAL the sound needs to be restarted (snd_restart)
    for it to take affect.

2018-04-29-01
    Improvements for dedicated camera followers (team follow1/2)

    Switching to dedicated camera follower with no possible players to
    follow would spawn at the intermission point and display "connection
    interrupted" HUD message. Pmove() was not run for the client so
    ps.commandTime was too far behind. I made it so that dedicated camera
    followers and scoreboard run Pmove() but cannot move (PM_FREEZE).

    When all players possible to follow leave, the dedicated camera follower
    would continue to display the old player state of the player they were
    following (along with "connection interrupted" HUD message). Unlike the
    regular case of a spectator following a specific player, dedicated
    camera followers did not reset their player state to the intermission
    point after the followed player was no longer valid.

    Now a client can be set as 'team follow1' to automatically switch
    between displaying the intermission point and following a player when
    possible.

2018-05-03-01
    Fix not closing description.txt and fix path seperator

    0 length description.txt files were not closed.

2018-05-06-01
    Fix duplicate bots displayed in Team Arena ingame add bot menu

    The key handler allowed going 2 beyond the end of the bot list and the
    display function clamped to 0 causing the first bot to be shown 3 times.

    Attempting to add the bot in gametypes < GT_TEAM would fallback to
    Sarge in UI_GetBotNameByNumber() (who isn't the first bot) and gametypes
    >= GT_TEAM would access characterList past known values (typically NULL
    but if teaminfo.txt contained 63 characters it would access out of
    bounds memory).

2018-05-11-01
    OpenGL2: Fix parsing specularScale in shaders

    Fix specularScale <metallic> <smoothness> with r_pbr 1 which has been
    broken since r_pbr was implemented in 2016.

    Fix specularScale <r> <g> <b> <gloss> setting b to gloss and leaving
    gloss as 0 since it was implemented in 2014.

2018-05-12-01
    Don't allow SDL audio capture using pulseaudio

    When you start recording using SDL pulseaudio driver the client sends
    all audio captured while not recording. 240 milliseconds of audio is
    sent each frame until the capture buffer is empty. This is a problem for
    privacy and causes confusing to debug VoIP playback issues on other
    clients connected to server and when playing back demos.

2018-05-12-02
    Isolate the Altivec code so non-Altivec PPC targets can use the same binary.

    Moved all the code using Altivec intrinsics to separate files. This
    means we can optionally use GCC's -maltivec on just these files, which
    are chosen at runtime if the CPU supports Altivec, and compile the rest
    without it, making a single binary that has Altivec optimizations but
    can still work on G3.

    Unlike SSE and similar extensions on x86, there does not seem to be
    a way to enable conditional, targeted use of Altivec based on runtime
    detection (which is what ioquake3 wants to do) without also giving the
    compiler permission to use Altivec in code generation; so to not crash
    on CPUs that do not implement Altivec, we'll have to turn it off
    altogether, except in translation units that are only entered when
    runtime Altivec detection is successful.

    This has been tested on Linux PPC (on an Altivec-enabled CPU),
    but we may need further work after testing trickles out to other
    PowerPC devices and ancient Mac OS X builds.

    I did a little work on this patch, but the majority of the effort belongs
    to Simon McVittie (thanks!).

2018-05-12-03 Limit -maltivec to specific source files on OpenBSD too (untested)

2018-05-12-04
    Use SDL 2.0.1 headers for macOS ppc64

    The libSDL2-2.0.0.dylib in repo doesn't support ppc64 though.

    Based on patch by MAN-AT-ARMS.

2018-05-14-01
    Fix console offset while Team Arena voiceMenu is open

    Fix console text being on top of the Tema Arena voice chat head in
    screen resolutions higher than 640x480.

2018-05-14-02
    OpenGL2: Readd r_deluxeSpecular.

    https://github.com/ioquake/ioq3/issues/369

2018-05-22-01
    Fix client kicked as unpure when missing the latest cgame/ui pk3s

    In 2013 ioquake3 stopped referencing the pk3 file that qagame.qvm was
    loaded from. This had the unintended side affect of causing
    non-dedicated pure servers to no longer reference a pk3 that only
    contains the three QVM files.

    Non-dedicated pure servers did not reference the pk3 containing the
    latest cgame.qvm so if client did not have the pk3 file they were kicked
    as unpure instead of the client trying to download the pk3 file.

    Also make server touch ui.qvm since it's required to pass pure check and
    may be separate from cgame.qvm.

2018-05-28-01 Don't create multiple windows when GL context creation fails

2018-05-28-02 Require OpenGL 1.2 for GL_CLAMP_TO_EDGE

2018-06-03-01
    Fix Linux uninstaller requiring Bash

    Linux loki-setup uninstaller is failing on distros that have /bin/sh
    linked to Dash instead of Bash. Use standard shell method for
    redirecting stdout and stderr instead of a Bash specific method.

2018-06-03-02
    Fix Linux uninstaller redirecting stderr to stdout in preuninstall.sh

    Last commit accidently made stderr redirect to stdout tty instead of
    /dev/null.

    Reported by @illwieckz.

2018-06-10-01
    Fix in_restart causing fatal error while video is shutdown

    Connecting to a server running a different fs_game and using a
    autoexec.cfg containing in_restart would hit a fatal error in IN_Init().

        IN_Init called before SDL_Init( SDL_INIT_VIDEO )

    Reported by smokey2k on the ioquake3 forum.

2018-06-12-01
    Allow pkg-config binary to be overridden with PKG_CONFIG

    This is one of the de facto standard interfaces used in Linux
    distributions for cross-compilation (alongside overriding CC and
    similar variables), and in particular is used in Debian and its
    derivatives.

    Signed-off-by: Simon McVittie <smcv@debian.org>

2018-06-24-01 Make testgun command without argument disable test gun model

2018-07-20-01 Remove unused renderer_buffer variable

2018-07-20-02
    Fix renderer not clearing some GL extension variables at vid_restart

    If renderer is compiled into client (USE_RENDERER_DLOPEN=0) and after
    start up set r_allowExtension to 0 and run vid_restart, some extension
    were still used.

2018-07-20-03
    Don't upload 8 bit grayscale images as 16 bit luminance

    Using more color bits than the source image provides shouldn't improve
    the quality.

2018-07-20-04
    OpenGL1: Use RE_UploadCinematic() instead of duplicate code

    Already done in opengl2 renderer.

2018-07-20-05
    Don't load non-core GL functions for OpenGL 3.2 core context

    Also declare the GL functions in tr_local.h so there is compile error
    for non-core GL functions instead of SEGFAULT from dereferencing a NULL
    pointer.

    Disable the non-functional stencil shadow code that hasn't been updated
    to use OpenGL 3.2 core compatible drawing.

2018-07-20-06
    Load OpenGL ES 2.0 function procs

    Load functions procs supported by OpenGL ES 2.0, though there is not a
    compatible renderer yet. Change argument for GLimp_Init from coreContext
    to fixedFunction.

2018-07-20-07
    Don't check fixed function GL extensions when using shader pipeline

    GL_TEXTURE_UNITS_ARB is not part of OpenGL ES 2 API and sets GL error.
    It's not part of OpenGL 3.2 core profile either.

2018-07-20-08
    OpenGL2: Fix world VAO cache drawing when glIndex_t is unsigned short

    OpenGL ES is only required to support unsigned short for element buffer
    values.

    R_DrawElements() firstIndex argument was glIndex_t which caused element
    indexes to wrap around to 0 when glIndex_t is an unsigned short.
    (glIndex_t is an index into the vertexes buffer, not element buffer.)
    Change it to 'int' like tess.firstIndex which is passed to
    R_DrawElements().

    World VAO cache buffer size allowed storing more vertexes than unsigned
    short glIndex_t could reference. This resulted in the vertex indexes in
    the element buffer wrapping around to 0.

2018-07-20-09
    OpenGL2: Misc fixes and cleanup

    Fix two constants in GLSL shaders. Remove f suffix from float and fix
    int to float assignment. They were causing shader compile errors in
    OpenGL ES 2 context.

    Remove disabling clip plane. Clip plane is unused and never enabled in
    the opengl2 renderer. Remove disabling it to avoid causing a GL error
    when using OpenGL 3.2 core profile or OpenGL ES.

    Make VAO cache vertex stride be size of srfVert_t since that is what
    is uploaded to the GPU. No behavior change. There is a disabled debug
    id in srfVert_t though which if enabled changes srfVert_t size.

2018-07-27-01
    Fix IQM root joint backlerp when joint number is more than 0

    Backlerp for root joint (joint with no parent) was always applied to
    joint 0. This is an issue when a model has multiple root joints.

2018-07-27-02
    Improve IQM loading

    - Only allocate memory for vertex arrays that are present in the IQM
    file and are actually used (may not have colors or blend index/weights,
    don't load tangents in opengl1). (Colors is fixed to next commit.)
    - Explicitly handle loading IQM files without meshes (bones only).
    - Better IQM validation. Header data offset 0 mean data is not present
    in file. Check if required vertex arrays are present.

    This involved a lot of white space changes and moving code around.

2018-07-27-03
    Improve IQM CPU vertex skinning performance

    Only calculate vertex blend matrix for each unique bone indexes/weights
    combination once per-surface instead of recalculating for each vertex.
    For best performance the model surfaces needs to use few vertex bone
    indexes and weights combinations.

    Unroll loops so GCC better optimizes them.

    In my tests drawing animated IQM may take 50% as long in opengl1 and
    70% as long in opengl2. It will vary by model though and might not
    help much at all.

    Made unanimated IQM models skip matrix math altogether.

2018-07-27-04
    OpenGL2: Add GPU vertex skinning for IQM models

    Using GPU vertex skinning is significantly faster than CPU vertex
    skinning. Especially since OpenGL2 has to run R_VaoPackNormal() and
    R_VaoPackTangent() each vertex each frame which causes CPU vertex
    skinning to be significantly slower than OpenGL1 renderer.

2018-07-31-01
    Fix axis returned by IQM's LerpTag

    The axis returned for IQM tag was the animation's joint rotation without
    the base frame joint rotation. It only worked correct for models that
    did not rotate the base frame joints.

2018-08-02-01
    Calculate bounds for unanimated IQM models

    Bounds are optional for animated IQM models but are not possible to
    include with unanimated models (seems intended for use with separate
    model containing animations and bounds). Calculating bounds for
    unanimated IQM models fixes culling and head model on HUD which
    calculates position from model bounds.

2018-08-28-01
    Fix loading favorites as initial source in server browser

    When I added UIAS_GLOBAL0 in 2017 I missed changing ui_browserMaster
    range clamp from 6 to 7.

    Reported by cdev-tux.

2018-09-12-01
    Improve finding obelisk entitynum for bot AI

    BotSetEntityNumForGoal() was checking all entities that are not
    team_redobelisk (which is the obelisk visual entity) to find the
    untitled obelisk collision entity. This may fail in rare cases where
    there is an another entity within 10 units of the obelisk origin.
    Failing to find the correct entity may cause bots to not attack the
    obelisk.

    Instead add BotSetEntityNumForGoalWithActivator() for looking for the
    obelisk collision entity by activator classname (team_redobelisk) which
    should be less likely to find the wrong entity.

    This doesn't affect official Team Arena maps (unknown if it affects any
    others).

    Reversed strcmp check was reported by Thomas Köppe.

2018-09-13-01
    Fix SDL audio playback with surround sound

    If user has surround sound enabled, ioq3 would not play any sound.
    Fix painting sound buffer for 4/5.1 audio channels. Extra channels
    currently play no audio.

2018-09-15-01
    Fix predicting entity origin on rotating mover

    Based on G_TryPushingEntity() in code/game/g_mover.c.

2018-09-30-01 Allow binds to use hex values for all key codes

2018-09-30-02
    Disable pulseaudio capture regardless of SDL version

    SDL changed version to 2.0.9 but the pulseaudio capture bug isn't fixed
    yet. Remove my version check.

2018-10-01-01
    Fix SDL audio playback with 16-bit stereo sound

    My commit last month "Fix SDL audio playback with surround sound" broke
    16-bit stereo sound. S_TransferStereo16() still assumed that dma.samples
    was a power of two. I also cleaned up code related to the previously
    mentioned commit.

2018-10-01-02
    Make s_info command display channels instead of stereo

    channels-1 was displayed as '# stereo', affectively a boolean for
    mono or stereo. However '3 stereo' for quad surround sound doesn't
    make sense.

2018-10-01-03
    Don't use host pkg-config when cross-compiling

    Fix cross-compiling using mingw-w64 on Ubuntu 18.04.

    pkg-config --cflags libcurl is now pulling in a Linux include directory
    which breaks compiling.

2018-10-17-01
    Make Team Arena prevTeamMember command loop around player list

    Team Arena HUD's team member info box can be cycled through using
    nextTeamMember and prevTeamMember commands. nextTeamMember command loops
    around when end of list is reached but prevTeamMember command got stuck
    at last entry in list (team overview).

2018-12-14-01 Prevent Q_IsColorString from asserting on negative ascii chars

2018-12-14-02 Add .gitignore for misc/msvc12

2018-12-21-01 OpenGL2: r_cubemapping 2 for box cubemap parallax.

2019-02-06-01 Add r_parallaxMapShadows.

2019-04-16-01
    Fix PRINT_ERROR print level missing from CL_RefPrintf

    It's used for one message in the OpenGL2 renderer.

2019-04-15-01
    OpenGL2: Fix compiling lightall GLSL on OpenGL 2.1

    textureCubeLod() requires OpenGL 3.0 / GLSL 1.30. Added in
    2018-12-21 commit e5da13f14635b6accc5eefd6986de03d2cff9662
    "OpenGL2: r_cubemapping 2 for box cubemap parallax."

    Report by brugal and Simon McVittie.

    Bug-Debian: https://bugs.debian.org/923226

2019-04-15-02
    Add current (custom) resolution to Q3 UI video mode list

    Custom resolution is displayed when entering system options menu and
    settings can be changed without being forced to change video resolution.

2019-04-15-03
    Override video mode list in Team Arena UI

    Override the video mode list in the Team Arena data files with detected
    modes from SDL like in ioquake3's Q3 UI. Add the aspect ratio to the
    end of the video resolution (i.e., "640x480 (4:3)"). Add the current
    (custom) video mode to the list.

    Before when using a custom resolution in the menu you could not change
    the video mode using the mouse because the resolution text was blank.
    Now custom video resolution is displayed and can be clicked.

2019-04-16-01
    OpenGL2: Disable r_cubeMapping if not OpenGL 3.0+

    r_cubeMapping requires textureCubeLod() which is only in OpenGL 3.0
    (GLSL 1.30) and later. It's not in OpenGL ES 3.0 / GLSL ES 3.00.
    This needs to be checked before R_InitImages() so can't just check in
    GLSL_InitGPUShaders().

2019-04-29-01
    Fix rendering IQM models between model frames

    For lerped frames (refEntity_t frame not equal oldframe) IQM joint
    matrices may have incorrect axis scale. This can cause significant model
    distortion. The matrix lerp is linear causing each vector to move in a
    straight line between frames instead of arcing like a circle. Each joint
    frame can have a different scale so can't just normalize the joint
    matrix.

    Store joints as quaternions and spherical lerp between them and then
    convert to a matrix. For my test model, setting up the skeleton is four
    times slower now but it still seems to be fast enough to be usable.

2019-04-29-02 Fix warnings that IQM blendWeights may not be initialized

2019-05-28-01
    Fix IQM quat normalize fail case

    Should only happen with invalid models though.

2019-05-28-02 Remove erroneous newlines from Com_Error in sdl_glimp.c

2019-05-28-03
    Restore OpenGL 1.1 support (GL_CLAMP)

    GL_CLAMP (clamp to border) was changed to GL_CLAMP_TO_EDGE in 2008
    (f2baf359). In 2018 (ce1d5406) I made OpenGL 1.2 be required since
    GL_CLAMP_TO_EDGE is used.

    Restore support for GL_CLAMP in order to support OpenGL 1.1 like vanilla
    Quake 3 does. This should allow using the default Microsoft Windows
    GDI Generic OpenGL 1.1 driver (untested but it won't fail the version
    check at least).

    From gpuinfo.org, it looks like drivers stopped advertising support for
    GL_SGIS_texture_edge_clamp so use a version check in addition to the
    extension check.

    r_allowExtensions 0 disables using GL_CLAMP_TO_EDGE in the opengl1
    renderer. GL_CLAMP support wasn't added to the opengl2 renderer.

2019-07-10-01
    q3rcc: Allow to override build date

    Allow to override __DATE__ and __TIME__ with SOURCE_DATE_EPOCH
    in order to make builds reproducible.
    See https://reproducible-builds.org/ for why this is good
    and https://reproducible-builds.org/specs/source-date-epoch/
    for the definition of this variable.

    This behavior is what gcc already does.

2019-08-22-01 (skip .github)
    Create Funding.yml

    TODO: add more of these things https://help.github.com/en/articles/displaying-a-sponsor-button-in-your-repository

2019-10-11-01
    Fix lightning gun handling for corpses and single player podiums

    The lightning trail is fired from the real non-predicted entity for
    the local client so it can show the server location. The real client
    entity was always used to check if a player entity is firing the
    lighting gun. This potentially causes corpses and players on single
    player podiums with lightning gun to render the lightning trail if
    the real (living) client is firing the lightning gun.

    I'm not aware of this causing any issues without modifying the game
    logic. Corpses have no weapon and it's not possible to fire during
    single player intermission.

2019-10-11-02
    Fix for macOS Catalina screen resolution issue

    Issue #422

2019-10-26-01
    Several updates to xcode project files for Xcode 11

    A few more things to go

2019-10-28-01
    Fix team orders menu not listing clients with lower clientnums

    If bots join before the local client (dedicated server) the bots would
    not be listed in the Q3A team orders menu and so they could not be given
    orders using the menu.

    The Q3A team orders menu got local client's team while looping through
    all clients. Ignoring any bots with clientnum lower than the local
    client. Get local client's team before the loop so all bots are
    listed.

2019-11-16-01
    Fix duplicate team join center print for bots and g_teamAutoJoin

    My 2017 commit f7c3276 ("Fix g_teamAutoJoin and g_teamForceBalance")
    caused BroadcastTeamChange() to be run an extra time when bots connect.
    This caused a duplicate center print message to be sent to all clients.

    g_teamAutoJoin 1 sent an extra center print when any player or bot
    connects. Though that is the original behavior from Team Arena.

    Team set during connection no longer sends broadcast as it will be
    sent later in ClientConnect().

    Reported by Pascal Brochart (pbrochart) as causing clients to be
    kicked due to server command overflow if many bots join at the
    same time.

2019-11-17-01
    E2K: fixed build by MCST lcc compiler when using USE_CURL=1 option

# 2022-04-01 checking back with git log -p --topo-order --first-parent

2020-02-11-01
    Merge pull request #428 from tomkidd/master

    Additional updates to the Xcode project

2019-11-20-01
    Use `r_texturemode GL_LINEAR_MIPMAP_LINEAR` by default

    This improves visual quality without a noticeable performance loss,
    especially on maps that use textures with high-frequency details
    such as q3dm1.

2020-02-10-01
    Figured out method of referencing GLSL generated C files outside of code directory

2020-07-07-01
    Update README.md

    Added various sponsorships, I hope that hotlinking works fine!

2020-04-07-01  Add C syntax highlighting to readme

2020-08-29-01
    Simplify glsl -> C stringification

2020-08-29-02
    Make LCC path resolution more robust

2020-08-29-03 (ignore .github)
    GitHub Actions setup

2020-08-29-04
    Remove old CI system configurations

2020-08-29-05
    Add status badge to README

2020-09-08-01
    Fix shader stringify

2020-09-08-02 (ignore .github)
    Run apt-get update before installing deps

2020-09-08-03
    Avoid platform sed differences

2020-09-09-01 (ignore .github)
    Run actions on pull request too

2020-09-29-01
    Merge pull request #436 from Calinou/default-texturemode-mipmap-linear

    Use `r_texturemode GL_LINEAR_MIPMAP_LINEAR` by default

2020-11-17-01
    [sdl] Turn tentative definition into actual definition.

    There is no need for a tentative definition in this case. By providing
    an explicit initializer, the resulting definition has the same effect
    as before, but is no longer tentative. This avoids easy errors
    resulting from multiple tentative definitions in different translation
    units. (Previous compilers permitted those common errors, but GCC 10
    rejects them by default.)

2020-12-25-01
    Add TOOLS_CFLAGS to build preamble

2020-12-25-02
    Fix use of TOOLS_CC being reported as CC

2020-12-26-01
    Use the correct compiler for tools when cross building under cygwin

2021-02-26-01
    Allow using pulseaudio for SDL audio capture

    Pulseaudio audio capture didn't stop when paused on Debian 8 but works
    on Debian 9 when using the same manual SDL build. So it seems to have
    been an issue in pulseaudio, not SDL.

2021-02-27-01
    Restore bots crushing unseen player on q3tourney6 in non-CTF

    The affect of my 2017 commit c3e64d380685419f96f71035c961907b9dc09a9a

        "Make bots only use q3tourney6 crusher to kill their enemy"

    made it easier to beat the last map of the Quake 3 single player
    campaign. It was mainly intended for CTF and Team Arena gametypes
    variants of the map. (Team deathmatch is usually treated as deathmatch
    with teams rather than an actual team based gametype.)

    Restore original difficulty for non-CTF/Team Arena gametypes; bot will
    crush player even if bot hasn't seen the player since either they or
    player respawned. [This is not good in CTF where all five bots on the
    team suddenly flip around and shoot at the crusher trigger.]

    Team deathmatch still uses my added behavior of not triggering crusher
    if there is a teammate under the crusher.

2021-03-17-01
    Fix the number of weights in the IQM model calculation

    [The fourth bone influence of each vertex was ignored. --zturtleman]

    Patch by Romulo Fernandes (razor85).

2021-03-19-01
    Fixes a crash when compiling the project on windows in 64 bit mode.
    Not all non-volatile registers were actually saved and restored, leading to a few registers being trashed after calling the vm instructions.
    All non-volatile registers have been added.

2021-06-23-01
    Allow unwinding of qvmcall64 call-stub for msvc/masm
    qvmcall64 has its own custom calling convention due to pushing all non-volatile registers to the stack. The game uses set/longjmp which on Windows uses "RtlUnwindEx" to unwind the callstack. qvmcall64 cannot be unwound by default due to the custom calling convention. To allow unwinding, we need to add custom SEH unwind data to the function.

2021-07-05-01
    Add epsilon to avoid division by zero in CalcSpecular().

2021-07-05-02
    Add r_parallaxMapOffset.

2021-07-06-01
    Fix line not removed in previous commit.

2021-07-20-01
    OpenGL2: Flip normals for backfacing triangles.
    https://github.com/ioquake/ioq3/issues/513

2021-08-15-01
    Fix compiling against SDL 2.0.17

    KMOD_RESERVED was replaced with KMOD_SCROLL.

2021-09-25-01
    qsort cannot be called with NULL

    resolves #519

2021-09-27-01
    GHA deprecated Ubuntu 16.04 - update to 18.04

2021-10-02-01
    Addressed string concatenation issue and added dummy method for Mac/Linux

2021-10-02-02
    Added missing variable.

# 2022-04-01 from here using git log -p --topo-order --first-parent


# 2022-04-01 think this is the one that updates SDL way back in the history
# (now need --topo-order --first-parent)
# skipping SDL2 update portion:
#  * breaks SDL264.dll naming
#  * can't tell which version the headers are from (diff against 2.0.16
#    doesn't match)
#  * Windows *.a files are 2.0.14 instead of 2.0.16?
#    https://github.com/ioquake/ioq3/issues/529

2021-10-22-01 (skip SDL2 update)
    Merge pull request #481 from tomkidd/xcode

    Upgrades to Xcode project and Apple Silicon support


2021-10-22-02
    Merge pull request #482 from tomkidd/vs2019

    Upgrade to build and run from VS2019

2021-10-23-01
    OpenGL2: Fix r_grayscale 1 making everything solid black

    Using LUMINANCE with OpenGL 3.2 Core contex results in all images being
    solid black (in the menu, world, and the console). In the end the whole
    screen was solid black except the intro video.

    Store images in RGB and RGBA instead. This doesn't affect r_grayscale
    visually. If there is issues with it now possibly using compressed
    formats, then it would already be an issue for r_grayscale 0.9.

2021-10-23-02
    Print full GL_EXTENSIONS list for OpenGL contexts before 3.0

    Printing GL_EXTENSIONS list might be cut off for OpenGL contexts
    before 3.0 due to glConfig.extensions_string being a limited length.
    Instead get the full extensions list directly.

    This was already fixed for OpenGL 3.0 and later contexts.

2021-10-23-03
    Fix being unable to enter Team Arena CD key

    The CD key defaulted to spaces. Q3 UI uses text overwrite mode by
    default so typing the CD key writes over the spaces. Team Arena UI
    uses text insert mode by default so to enter the CD key the user
    had to delete the spaces or toggling overwrite mode by pressing
    the insert key.

    Now the CD key defaults to empty so in Team Arena you can just type
    it in.

2021-10-23-04
    OpenGL2: GL_DEPTH_TEXTURE_MODE was removed from OpenGL 3.0/Core

    GL_DEPTH_TEXTURE_MODE defaults to GL_LUMINANCE. Code sets it here as
    part of a workaround old nvidia drivers (apparently? the URL in comment
    is dead). GL_DEPTH_TEXTURE_MODE was removed in OpenGL 3.0 / 3.2 Core
    contexts and may be treated as an error.

2021-11-06-01
    Improve setting Microsoft Store path

    Respect configured Program Files directory and use MSSTORE_PATH for
    the directory name.

2021-11-06-02
    Update building for macOS in README

2021-11-06-03
    Make macOS arm64 default to target macOS 11 in Makefile

2021-11-06-04
    Fix error when cross-compiling for macOS arm64 using Makefile

    Fix "Architecture arm64 is not supported when cross compiling" and
    also be more be more flexible for manually specifying CC or the
    osxcross darwin version (which corresponds with a macOS SDK version
    to build against).

2021-11-19-01
    Fix passing arguments to VM dylib on Apple M1

    The engine function pointer to vmMain used variadic arguments but
    the vmMain function in the dylib has explicit arguments. Evidently
    the arguments are stored on the stack and/or registers differently.

    Found by fretn.

2021-10-24-01
    Fix compiling on older macOS

    ranlib errors on older macOS because of arm64 arch in code/libs/macosx/-
    libSDL2main.a. Use lipo to extract the library for the specific arch
    that is being linked.

2021-12-08-01
    Fix memory corruption in S_TransferPaintBuffer

    When using a non-default sound configuration (such as 6 channels), after
    a long time (about 4.5hours for 6 channels at 22050 Hz) an overflow will
    occur in `S_TransferPaintBuffer`, causing an out of bounds write into
    the dma buffer.

    The problematic line is:
    ```
    out_idx = (s_paintedtime * dma.channels) % dma.samples;
    ```

    With `s_paintedtime` large enough, the result of the multiplication will
    overflow to a negative number (since `s_paintedtime` is signed), and the
    index into the output buffer will be negative.

2022-02-05-01
    Fix memset

2022-02-05-02
    Fix hex digit

2022-02-05-03
    Fix uninitialized variable

2022-02-08-01
    some old URL and doc updates

    The installer building docs should probably go somewhere else but they don't need to be in the README

2022-02-08-02
    Update README.md

2022-02-12-01
    Update FUNDING.yml

2022-03-08-01
    code/curl: update ifdef condition for MCST-LCC compiler
    in mcst-lcc compiler => 1.25 added a new macro definition to determine compiler

2022-03-10-01 (skip)
    Revert "code/curl: update ifdef condition for MCST-LCC compiler"

    This reverts commit 56c83c8a72532749b6e652c7b9d3760d87e15563.

2022-03-10-02 (skip)
    Revert "E2K: fixed build by MCST lcc compiler when using USE_CURL=1 option"

    This reverts commit daae32ddfdab2172a628072ed3ff7dd1fc1563fe.

2022-03-21-01
    More predictable mesh normals generation

2022-01-04-01
    vm_x86.c: Add `defined(_M_IX86) || defined(_M_X64)` (fix for VS2019)

2022-09-22-01
    Add keys for SDL 2.0.14's new gamepad buttons

    This fixes the additional buttons triggering binds for ioq3 left
    and right joystick direction keys.

2022-09-22-02
    Fix in_availableJoysticks cvar not updating

    When in_restart is called or SDL controller added/remove event is
    received, IN_InitJoystick() tried to update the list but instead
    of updating the cvar Cvar_Get() just printed a developer message:

      Warning: cvar "in_availableJoysticks" given initial values:
      "first joystick
      ", "first joystick
      second joystick
      "

2022-11-23-01
    Fix (disabled) Wavelet sound decompression

    The first chunk of Wavelet sound was decoded as ADPCM and then
    following chunks were decoded as Wavelet. It played as static
    noise.

    Using Wavelet compression requires engine code changes to enable.

2022-09-02-01
    Update to SDL 2.24.0 and add separate macOS UB2 dylib

    Update mingw and macOS SDL libraries to 2.24.0. (MSVC .lib files and
    Xcode project haven't been updated.)

    There is now a separate SDL dylib for macOS Universal Binary 1 and 2
    because SDL 2.24.0 dropped support for macOS 10.6 (which is last to
    support x86). Documentation says SDL 2.24.0 also dropped macOS 10.7
    and 10.8 too. So UB2 is now 10.9 or later while 10.5 to 10.8 live in
    UB1.

    Compiled using osxcross with macOS 11.3 SDK. Ran "strip -x" on Windows
    and macOS libraries. Ad-hoc signed dylib using PyOxidizer rcodesign to
    fix digest checksums after strip.

2022-09-02-02
    Update macOS UB1 to SDL 2.0.22

    Fix crash when scrolling using touchpad on macOS 10.6 (I fixed it
    in SDL 2.0.18) and fix failing to start on x86 due to ioq3 SDL dylib
    having absolute path instead of "@executable_path/libSDL2-2.0.0.dylib".

    SDL 2.24.0 removed macOS 10.6 support (last with x86). Offically at
    least, they also dropped x86_64 on macOS 10.7 and 10.8. So ioq3 UB1
    is limited to SDL 2.0.22.

    - Update x86 and x86_64 to SDL 2.0.22. Compiled with 10.13 SDK as
      10.14 SDK dropped running on older than macOS 10.9 and I ran
      "strip -x" on the libraries. Ad-hoc signed with PyOxidizer rcodesign.
    - PPC is still MAN-AT-ARMS' SDL 2.0.1 build but I ran "strip -x"
      on it to reduce the file size.
    - ARM64 build was removed from UB1 as UB2 with SDL 2.24.0 should
      be used instead.

2022-09-03-01
    Fix running make-macosx{,-ub2}.sh on Linux

    osxcross doesn't support ppc so it's not possible to compile Universal
    Binary 1.

2022-09-08-01
    Update MSVC .lib files to SDL 2.24.0

    Built with Visual Studio 2022 with PlatformToolSet v141_xp.
    x64 built with TargetName SDL264 / SDL264main to use SDL264.dll.

2023-04-02-01
    Document USE_INTERNAL_VORBIS in README

2023-04-17-01 (ignore .github)
    Update CI to Ubuntu 20.04

2023-04-18-01
    Update SECURITY.md

2023-04-19-01
    Add protocol handler support

    This lets the user click a link in a web browser to very easily join a Quake 3 multiplayer game. As browser-based matchmaking websites become more popular, this makes it a lot more convenient and simple to play Quake 3 with others.

    The links have the following URI format: quake3://connect/example.com:27950. The format has been designed to be flexible to allow more types of links in the future and avoiding having to make a breaking change. At the moment, "connect" is the only supported command.

2023-04-18-02
    Fix bad client reliableAcknowledge DOS exploit

    Having a reliableAcknowledge of 0x7FFFFFFF causes a massive
    loop to be executed in SV_UpdateServerCommandsToClient due to the + 1 overflow.

2023-06-07-01 (ignore .github)
    Update CI to macOS 11

    macOS 10.15 is not available anymore.

2023-06-07-02 (ignore .github)
    Update CI actions version

    checkout and upload-artifact v2 are deprecated.

2023-06-10-01
    Fix macOS client/server failing to start from terminal

    The macOS client and server were completely unusable when run from a
    terminal. They blocked forever in `[NSApp run];` which was called by
    Sys_InitProtocolHandler(). `applicationDidFinishLaunching` was never
    called to exit the NSApp run loop.

    Use SDL's SDL_DROPFILE event to receive URLs to handle on macOS instead.
    This also handles URLs while the game is running (connect to new server)
    instead of nothing happening when clicking a link while the game is
    running.

2023-06-11-01
    nsis: Remove Speex library

    The game doesn't support it anymore.

2023-06-11-02
    nsis: Require installing SDL

    It's required to run and unlikely to be installed system wide.

2023-06-11-03
    nsis: Display ioquake3 version

    Display version in the installer and add/remove software.

2023-06-11-04
    nsis: Add better descriptions for OpenAL and libcurl

2023-06-11-05
    nsis: Fix CustomUrlArguments for protocol handler

2023-06-11-06
    nsis: Only uninstall protocol handler for this installation

2023-07-06-01
    Don't list mod directories at Windows drive root

    The mod list on Windows would search the root of the drive if
    fs_basepath, fs_homepath, fs_steampath, or fs_gogpath are blank ("")
    (which is usually the case).

    The issue is in the low-level Sys_ListFiles() but it only affects the
    mod menu, on Windows. It cannot be abused by console commands to
    list system files outside of the virtual filesystem.

    ---

    If a directory at the root of the drive of the working directory
    contained a pk3 file, the directory was listed in the mods menu. The
    virtual filesystem doesn't add blank directory names to the search path
    so it cannot load mods from the drive root. (Unless of course you set a
    fs_*path cvar to "C:\".)

    Sys_ListFiles() with blank directory caused Windows to use "\*" for the
    search path and "\" prefix means root of drive. Unix opendir("") failed
    so nothing was listed for blank directory.

    Sys_ListFilteredFiles() with blank directory _and_ specifying subdirs
    could access any directory (on Windows and Unix-like) but no code uses
    this or makes it accessible.

    These functions are only used for initializing the virtual filesystem
    and listing mods. They are not accessible by anything else such as a
    console command. Only the mods menu, on Windows, is affected.

2023-07-25-01
    Add AppStream metadata

2023-08-07-01
    Update org.ioquake3.ioquake3.metainfo.xml

    fixed the case of the filename and removed the hotlinked screenshots of original quake 3.

2023-08-12-01
    Merge pull request #397 from rawr51919/master

2023-08-15-01
    Improve AppStream metainfo

2023-08-17-01
    Build QVMs even if there is no QVM JIT

    The QVM interpreter works on all platforms. If building QVMs is an
    issue, that should probably be handled separate from whether there
    is a QVM JIT compiler.

    This enables building QVMs by default on Linux arm64.

2023-11-18-01
    OpenGL2: Fix border for cg_viewsize using HDR/FB-MSAA w/postProcess

    If using renderFBO (r_hdr 1 or r_ext_framebuffer_multisample > 0) and
    r_postProcess 1, the viewport border (cg_viewsize < 100) which is drawn
    before the world scene was drawn to the renderFBO but not copied to the
    default framebuffer.

    Now 2D before the world scene is drawn to the default framebuffer
    directly for r_postProcess 1 like 2D drawn after the world scene.

2023-11-18-02 (skip removed in later patch)
    OpenGL2: Fix r_clear when using HDR/FB-MSAA

2023-11-20-01
    OpenGL2: Fix FB-MSAA on AMD Windows driver

    Fix r_ext_framebuffer_multisample > 0 causing the screen to always be
    solid black when using AMD Windows driver.

    The AMD Windows driver requires binding renderbuffer for it to be valid.
    The OpenGL2 renderer uses GL_EXT_direct_state_access that shouldn't
    require this. It would be required for Core/GL_ARB_direct_state_access.
    It seems like a driver bug.

2023-11-22-01
    OpenGL2: Fix updating the loading screen with r_cubeMapping 1

    Generating cubemaps set backEnd.viewParms.isMirror = qtrue while the
    loading screen said 'loading... maps/q3dm1.bsp' and it just stayed like
    that until done loading (no additional messages or item icons) because
    all 2D drawing was culled due to flipped culling for isMirror.

    This was noticed because a recent commit fixed RB_ShowImages() to be
    drawn to the screen instead of draw into renderFbo and never blit to
    the screen. Now the loading screen draws over it as expected.

    Mentioned commit: a81df34905fab89ad478237c269fc26bb1262489
    "OpenGL2: Fix border for cg_viewsize using HDR/FB-MSAA w/postProcess"

2023-12-20-01
    OpenGL2: Fix q3map2 lightstyles effects

    Fixes World of Padman wop_trashmap.

    For r_mergeLightmaps 1
    - Fix tcMod transform on "map $lightmap" stages
    - Fix external lightmap image texcoords if shader also has an internal
      lightmap

    For r_sunlightMode 1
    - Fix "tcGen lightmap" stages with blendFunc GL_SRC_ALPHA GL_ONE being
      converted to white image + modulate lightmap and drawing incorrectly

2023-12-22-01
    OpenGL2: Fix parsing q3gl2_sun without two additional tokens

    If mapLightScale and shadowScale weren't included at the end of
    q3gl2_sun, the next shader line was skipped by SkipRestOfLine().

    COM_ParseExt() with allowLineBreaks=qfalse, returns "" once and
    then goes to the next line anyway. (Doesn't work well multiple
    "optional" tokens. It looks like a vanilla bug.)

2023-12-26-01
    Fix building QVMs on Linux with Windows line endings

    On non-Windows, compiling QVM tools failed if dagcheck.md had CRLF line
    endings and compiling QVMs failed if game source had CRLF line endings.

    Also made Windows open the files as binary (no automatic CRLF to LF) so
    it behaves the same as on non-Windows.

2024-01-06-01
    OpenGL2: Fix applying tcMod turb

    Shader stage tcMods for matrix and turb effects need to be applied in
    order for turb to be correct and all tcMod turb need to be applied
    instead of only the last one.

    Quake 3's textures/liquids/slime1 had tcMod turb and then tcMod scale.
    OpenGL2 applied the matrix first and then turb which had the wrong result.

2024-02-08-01
    OpenGL2: Fix sun rays being affected by the viewport size

    Using r_drawSunRays 1, r_hdr 0, cg_viewsize 50 caused the sun rays to
    only draw properly in the bottom right quarter of the world viewport.

    The scissor rectangle for the world viewport was applied to the first
    FBO_FastBlit() in RB_SunRays().

    Set glScissor() in FBO_FastBlit() as it's done in FBO_Blit() and
    FBO_BlitFromTexture(). Sun rays probably worked correctly with r_hdr 1
    because the blit for HDR changed the scissor state.

2024-02-09-01
    OpenGL2: Fix merged lightmap hacks to have real lightmap index

    This fixes the texcoord range to be 0.0 to 1.0 for external lightmaps in
    shaders that also have an internal lightmap. (Instead of 2.0 to 3.0 for
    example.) This only affects clampMap as repeating wrapping sampled the
    correct location. I haven't found such a shader but I need to get real
    lightmap index for future merged lightmap hacks.

2024-02-10-01
    OpenGL2: Fix using merged lightmaps with tcGen environment

    tcGen environment generates texcoords in range of 0.0 to 1.0 and they
    need to be offset to the position/size in the merged lightmap atlas.

    This also needs to be after tcMods so they apply for the original range.
    This fixes tcMod scale used by main_q3abanner and shinygrate1_4.

    This issue was visible on the blue monitor (comp3c) near the plasmagun
    in q3dm0 and the Quake III Arena banner in q3dm17.

    Affected shaders in Quake 3 and Team Arena maps:

    textures/base_wall/comp3
    textures/base_wall/comp3b
    textures/base_wall/comp3b_dark
    textures/base_wall/comp3c
    textures/base_wall/main_q3abanner
    textures/base_wall/shinygrate1_4
    textures/sfx/teslacoil

    All of the shaders are used by q3dm0 but other maps also use some.

2024-02-10-02
    OpenGL2: Fix hack for tcMod transform on merged lightmaps

    When using merged lightmaps, only change tcMod transform for tcGen
    lightmap.

2024-02-13-01
    OpenGL2: Fix flares behind mirror being visible

    When r_ext_framebuffer_multisample > 0 was used, flares behind the
    mirror in q3tourney6 were incorrectly visible. This was because it
    checks scene depth in the depth prepass which only drew opaque
    surfaces. It also needs to contain depth for mirror/portal surfaces.

2024-02-17-01
    Fix running on Windows XP

    Newer mingw-w64 changed default Windows version compatibility.
    Need to specify older behavior for EnumProcesses() to avoid "missing
    K32EnumProcesses()" runtime error.

2024-02-26-01 (ignore .github)
    Fix GitHub Actions CI deprecation warnings

2024-03-02-01
    OpenGL2: Don't mix drawing to default framebuffer and FBO

    Don't draw the world scene to a separate FBO from the rest of the
    screen.

    This fixes the world scene having HOM instead of seeing through to the
    previously drawn content. World of Padman uses this to have a separate
    3D scene for the sky and world in wop_padship for dynamic skybox.

    This also makes r_ext_framebuffer_multisample apply to HUD models
    instead of depending on r_ext_multisample (which doesn't work on Linux
    with some Intel graphics).

2024-04-17-01
    opengl1: Fix skybox in OpenGL 1.1

    Fix six image skybox having a black border around the sides of the sky
    when using OpenGL 1.1 (using CL_CLAMP instead of GL_CLAMP_TO_EDGE).

    It's technically visible in q3dm10 but it's more obvious in Team Arena
    maps such as mpteam6.

2024-04-18-01
    Update SECURITY.md

2024-05-15-01
    Use nanosleep(2) instead of usleep(3)

    usleep(3) was declared obsolete in POSIX.1-2001 and removed in
    POSIX.1-2008 and nanosleep(2) was recommended to be used instead.

2024-05-18-01
    Makefile: fix compilation on FreeBSD

2024-05-20-01 (ignore .github)
    Update macOS version for GitHub CI

    macOS 11 runner image is scheduled to be removed next month.

2024-06-05-01
    OpenGL2: Add OpenGL ES 2.0+ support

    This mainly targets OpenGL ES 2.0 but it also supports compiling GLSL as
    ESSL 3.00. It's missing support for framebuffer objects which should be
    possible on ES 2. (Though using renderbuffers instead of textures.)

    opengl1 cvars that are not supported will display a message and disable
    the cvar. This has not been reviewed for new opengl2 cvars. Enabling
    cvars may cause rendering issues. Some of the broken cvars may be
    possible to support using OpenGL ES 3 features.

    The game displays okay with the default cvars.

2024-06-05-02
    OpenGL2: Add run-time support for unsigned short indexes

    OpenGL ES 2 is only required to support unsigned short for indexes.

2018-07-20-01
    OpenGL2: Use CPU vertex animation if too few vertex attributes

    OpenGL ES has a minimum of 8 vertex attributes while desktop OpenGL has
    a minimum of 16. Vertex animation uses attributes 10 to 12.

2024-06-06-01
    OpenGL2: Fix issues running under WebGL

2024-06-06-02
    OpenGL2: Fallback to OpenGL ES if OpenGL fails

2024-06-06-03
    Add minimal emscripten support

2024-06-07-01
    Fix emscripten build directions

2024-06-08-01
    Use BASEGAME for emscripten assets

2024-06-09-01
    Fix using emscripten 3.1.27+

    emscripten 3.1.27 reduced the stack size from 5MB to 64KB. This caused
    run-time errors: Uncaught RuntimeError: index out of bounds

    Co-authored-by: James Darpinian <jdarpinian@gmail.com>

2024-06-09-02
    Allow building for emscripten with "emmake make"

    Co-authored-by: James Darpinian <jdarpinian@gmail.com>

2024-06-09-03
    Add -ffast-math for emscripten to match other platforms

    Co-authored-by: James Darpinian <jdarpinian@gmail.com>

2024-06-07-02
    Add .vscode and baseq3 to gitignore

2024-06-07-03
    Rebuild every target if Makefile changes

2024-06-07-04
    ioquake3.html replaces Emscripten-generated HTML shell

    This enables several things:
    * Optionally load pk3 files from a web server at runtime instead of bundling
 them with Emscripten at build time
    * Set command line arguments via URL param
    * It's not ugly

2024-06-07-05
    Get rid of "Nothing to be done for _.zip" message

2024-06-07-06
    Fix build when specifying PLATFORM=emscripten manually instead of using emmake

2024-06-07-07
    Silence compiler warnings

2024-06-07-08
    Support debug Emscripten build

2024-06-07-09 (ignore .github)
    Speed up GitHub Actions with -j

2024-06-07-10 (ignore .github)
    Add GitHub Actions workflow for web/Emscripten

2024-06-07-11
    Add Emscripten to README

2024-06-09-01
    Add DEPEND_MAKEFILE to disable rebuild on Makefile edit

2024-06-09-02
    Add BUILD_RENDERER_OPENGL1 to disable opengl1

    Have emscripten disable BUILD_RENDERER_OPENGL1 instead of hardcoded to
    disable opengl1 client.

2024-06-09-03
    Clean up emscripten in Makefile

    - Remove emscripten build steps from Makefile (see readme)
    - USE_CURL=0 has no effect
    - HAVE_VM_COMPILED=false has no effect
    - WebGL 1 and 2 are supported by the OpenGL2 renderer
    - FULL_ES2 (client-side arrays) isn't needed
    - Rename EMSCRIPTENOBJ to GENERATEDTARGETS and separate it from
      TARGETS so it's more readable.

2024-06-10-01
    Make emscripten --preload-file opt-in

2024-06-10-02
    Allow web client to use unzipped QVMs

    Compile the QVMs and automatically uses them when not using --preload-file.

2024-06-09-04
    Customize the web client HTML file

    Modify the client HTML file when copying it to the build directory to
    apply current CLIENTBIN and BASEGAME. It always loads engine/data from
    the current directory (no need to try to locate the build directory).

2024-06-09-05
    Add support for overriding basegame to web client

    List files for multiple games in a single client-config.json file so
    that com_basegame argument can pick different game data.

    Use ioquake3.html?com_basegame=demoq3 (or tademo) to run the Quake 3 or
    Team Arena demo. They require new QVMs from baseq3/missionpack to run.

2024-06-10-01
    Add support for mods to web client

    ioquake3.html?fs_game=missionpack will run Team Arena when not using
    --preload-file.

2024-06-10-02
    Rename client-config.json based on CLIENTBIN

    Also make viewing client.html directly use client-config.json in the
    same directory so it's possible to "live edit" both the files without
    having to run make.

2024-06-24-01
    Fix web client vid_restart with r_mode -2

    If getting the display index of the existing window fails, fallback to
    the default display size instead of falling back to 640x480.

    emscripten r_mode -2 worked on window creation but vid_restart fellback
    to 640x480.

2024-06-24-02
    Fix framerate throttling in Emscripten builds

    Default com_maxfps to 0 under Emscripten. Under Emscripten the browser
    handles throttling the frame rate. Manual framerate throttling interacts
    poorly with Emscripten's browser-driven event loop.

2024-07-13-01
    Fix compiling without PATCH_STITCHING defined

2024-07-27-01
    OpenGL2: Don't project sun shadows onto nothing

    Don't project sun shadows (r_forceSun 1) on to view depth equal to 1.0
    (nothing drawn or skybox). This caused a full second shadow of the
    entire level in tr.screenShadowImage. It would move as the camera far
    plane changed and rotate/stretch strangely as the camera view changed.

    It was visible in-game on lightmapped transparent surfaces facing the
    skybox and happen to overlap the extra shadow of the level.

    This affected the glass in wop_padship's underwater room.

2024-08-27-01
    OpenGL2: Fix still projecting sun shadows onto nothing

    Increase the range for clamping the screen shadow depth to 1.0 (nothing
    drawn). Old epsilon ~0.00000006, new 0.001. This fixes it on another
    computer.

2024-01-21-01
    Add better directions/error for missing default pk3 files

2024-01-21-02
    Make Team Arena pk3 error show when missing all pk3 files

    The error was only displayed for Team Arena if one of the Team Arena pk3s
    were found. Fix it to be display when trying to run Team Arena even with
    no Team Arena pk3s present.

2024-01-21-03
    Make copy to clipboard in Windows error dialog include error message

    There is a copy to clipboard option but the error itself wasn't printed
    to the console so it wasn't copied to the clipboard.

    Unix-like platforms print it to the console so it's written in
    crashlog.txt.

2024-01-21-04
    Use XDG_DATA_HOME for Flatpak

    Use XDG_DATA_HOME for Flatpak so that fs_homepath is accessible without
    special permissions/handling. This changes the home path for Flatpak
    from ~/.q3a/ to ~/.var/app/org.ioquake3.ioquake3/data/q3a/.

2024-01-21-05
    Show fs_homepath in Flatpak missing pk3 error

    Tell users to copy pk3 files to fs_homepath as fs_basepath is not user
    writable.

2024-08-29-01
    OpenGL2: Increase flare limit to match opengl1

2024-09-24-01
    Fix reading non-sequential lumps in AAS files in pk3 files

    FS_Seek() doesn't always return 0 on success. If the file in a pk3 file
    it returns the seek offset. This change doesn't fix any known AAS files.

2024-10-10-01
    Change URL for missing files dialog

2024-10-11-01
    Prevent SV_DropClient() from being called recursively if the client is dropped by a kick or timeout and has too many reliable commands

2024-12-04-01
    cl_cgame.c: Fixed a typo in a comment.

2024-12-24-01 (skip .github)
    Update build.yml to macos-13 (#701)

    macos-12 is outdated, this commit simply updates the build.yml file to attempt to use macos-13

    see https://github.com/actions/runner-images/issues/10721 for more details on this change.

2025-03-08-01
    Rename LCC constexpr function to constantexpr, avoiding C23 keyword clash

2025-03-16-01
    Rename CHAR_WIDTH to CHARACTER_WIDTH

    For some time glibc has defined a macro with the same name in limits.h.
    Avoid the warning by renaming our macro.

2025-04-02-01 (skip .github)
    Update FUNDING.yml

    just a url change

2025-04-25-01
    Update README.md

    Removing references to bugzilla, which is no-longer available for submitting bugs and patches.

2025-04-25-02 (skip .github)
    Update build.yml with ubuntu-24.04 (#718)

2025-05-15-01 (skip .github)
    Lets use an older ubuntu image for more compatibility (#719)

2024-07-07-01
    OpenGL2: Disable the VAO cache by default

    The VAO surface cache uses glBufferSubData and triggers a very slow
    path in some GLES implementations. Specifically I have observed 10x
    frame times under Emscripten with ANGLE/Metal on macOS and with Mali
    on Android.

2025-05-16-01
    fix minor spelling errors

2025-06-19-01
    Replace various sprintf calls with snprintf calls

2025-06-19-02
    Expand buffers to prevent potential truncation

2025-06-16-01 (skip .github)
    Update build.yml to replace deprecated windows-2019 with windows-2022

    GitHub is ending support for the windows-2019 runner image and windows-2022 
will be the minimum supported version by the end of June, 2025. We need to updat
e before this date. More information about this change is here: https://github.c
om/actions/runner-images/issues/12045

2025-07-13-01
    Add a script for updating 3rd party libraries

2025-07-13-02
    Update xiph.org internal libs

2025-07-13-03
    Fix GCC warning

2025-07-13-04
    Fix a few misleading indentation warnings

2025-07-14-01  (skip, gets reverted)
    define guards to prevent warnings

2025-07-14-02
    Update zlib

2025-07-14-03
    Separate out CFLAGS so that third party code is compiled with warnings disabled
